// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.1
// source: kira/basket/query.proto

package types

import (
	_ "github.com/cosmos/cosmos-sdk/types/query"
	_ "github.com/gogo/protobuf/gogoproto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QueryTokenBasketByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryTokenBasketByIdRequest) Reset() {
	*x = QueryTokenBasketByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_basket_query_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryTokenBasketByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTokenBasketByIdRequest) ProtoMessage() {}

func (x *QueryTokenBasketByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kira_basket_query_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTokenBasketByIdRequest.ProtoReflect.Descriptor instead.
func (*QueryTokenBasketByIdRequest) Descriptor() ([]byte, []int) {
	return file_kira_basket_query_proto_rawDescGZIP(), []int{0}
}

func (x *QueryTokenBasketByIdRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryTokenBasketByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Basket *Basket `protobuf:"bytes,1,opt,name=basket,proto3" json:"basket,omitempty"`
}

func (x *QueryTokenBasketByIdResponse) Reset() {
	*x = QueryTokenBasketByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_basket_query_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryTokenBasketByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTokenBasketByIdResponse) ProtoMessage() {}

func (x *QueryTokenBasketByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_basket_query_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTokenBasketByIdResponse.ProtoReflect.Descriptor instead.
func (*QueryTokenBasketByIdResponse) Descriptor() ([]byte, []int) {
	return file_kira_basket_query_proto_rawDescGZIP(), []int{1}
}

func (x *QueryTokenBasketByIdResponse) GetBasket() *Basket {
	if x != nil {
		return x.Basket
	}
	return nil
}

type QueryTokenBasketByDenomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Denom string `protobuf:"bytes,1,opt,name=denom,proto3" json:"denom,omitempty"`
}

func (x *QueryTokenBasketByDenomRequest) Reset() {
	*x = QueryTokenBasketByDenomRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_basket_query_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryTokenBasketByDenomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTokenBasketByDenomRequest) ProtoMessage() {}

func (x *QueryTokenBasketByDenomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kira_basket_query_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTokenBasketByDenomRequest.ProtoReflect.Descriptor instead.
func (*QueryTokenBasketByDenomRequest) Descriptor() ([]byte, []int) {
	return file_kira_basket_query_proto_rawDescGZIP(), []int{2}
}

func (x *QueryTokenBasketByDenomRequest) GetDenom() string {
	if x != nil {
		return x.Denom
	}
	return ""
}

type QueryTokenBasketByDenomResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Basket *Basket `protobuf:"bytes,1,opt,name=basket,proto3" json:"basket,omitempty"`
}

func (x *QueryTokenBasketByDenomResponse) Reset() {
	*x = QueryTokenBasketByDenomResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_basket_query_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryTokenBasketByDenomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTokenBasketByDenomResponse) ProtoMessage() {}

func (x *QueryTokenBasketByDenomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_basket_query_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTokenBasketByDenomResponse.ProtoReflect.Descriptor instead.
func (*QueryTokenBasketByDenomResponse) Descriptor() ([]byte, []int) {
	return file_kira_basket_query_proto_rawDescGZIP(), []int{3}
}

func (x *QueryTokenBasketByDenomResponse) GetBasket() *Basket {
	if x != nil {
		return x.Basket
	}
	return nil
}

type QueryTokenBasketsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tokens          []string `protobuf:"bytes,1,rep,name=tokens,proto3" json:"tokens,omitempty"`                                           // if `tokens` flag is set (comma separated array of strings) return list of all `id`'s of all the baskets that accept any of the specified `denom`â€™s as deposit
	DerivativesOnly bool     `protobuf:"varint,2,opt,name=derivatives_only,json=derivativesOnly,proto3" json:"derivatives_only,omitempty"` // if set to `true` return as result only results related to staking-derivatives baskets (can be combined with other flags)
}

func (x *QueryTokenBasketsRequest) Reset() {
	*x = QueryTokenBasketsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_basket_query_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryTokenBasketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTokenBasketsRequest) ProtoMessage() {}

func (x *QueryTokenBasketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kira_basket_query_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTokenBasketsRequest.ProtoReflect.Descriptor instead.
func (*QueryTokenBasketsRequest) Descriptor() ([]byte, []int) {
	return file_kira_basket_query_proto_rawDescGZIP(), []int{4}
}

func (x *QueryTokenBasketsRequest) GetTokens() []string {
	if x != nil {
		return x.Tokens
	}
	return nil
}

func (x *QueryTokenBasketsRequest) GetDerivativesOnly() bool {
	if x != nil {
		return x.DerivativesOnly
	}
	return false
}

type QueryTokenBasketsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Baskets []*Basket `protobuf:"bytes,1,rep,name=baskets,proto3" json:"baskets,omitempty"`
}

func (x *QueryTokenBasketsResponse) Reset() {
	*x = QueryTokenBasketsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_basket_query_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryTokenBasketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTokenBasketsResponse) ProtoMessage() {}

func (x *QueryTokenBasketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_basket_query_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTokenBasketsResponse.ProtoReflect.Descriptor instead.
func (*QueryTokenBasketsResponse) Descriptor() ([]byte, []int) {
	return file_kira_basket_query_proto_rawDescGZIP(), []int{5}
}

func (x *QueryTokenBasketsResponse) GetBaskets() []*Basket {
	if x != nil {
		return x.Baskets
	}
	return nil
}

type QueryBasketHistoricalMintsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasketId uint64 `protobuf:"varint,1,opt,name=basket_id,json=basketId,proto3" json:"basket_id,omitempty"`
}

func (x *QueryBasketHistoricalMintsRequest) Reset() {
	*x = QueryBasketHistoricalMintsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_basket_query_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryBasketHistoricalMintsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryBasketHistoricalMintsRequest) ProtoMessage() {}

func (x *QueryBasketHistoricalMintsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kira_basket_query_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryBasketHistoricalMintsRequest.ProtoReflect.Descriptor instead.
func (*QueryBasketHistoricalMintsRequest) Descriptor() ([]byte, []int) {
	return file_kira_basket_query_proto_rawDescGZIP(), []int{6}
}

func (x *QueryBasketHistoricalMintsRequest) GetBasketId() uint64 {
	if x != nil {
		return x.BasketId
	}
	return 0
}

type QueryBasketHistoricalMintsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount string `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *QueryBasketHistoricalMintsResponse) Reset() {
	*x = QueryBasketHistoricalMintsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_basket_query_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryBasketHistoricalMintsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryBasketHistoricalMintsResponse) ProtoMessage() {}

func (x *QueryBasketHistoricalMintsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_basket_query_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryBasketHistoricalMintsResponse.ProtoReflect.Descriptor instead.
func (*QueryBasketHistoricalMintsResponse) Descriptor() ([]byte, []int) {
	return file_kira_basket_query_proto_rawDescGZIP(), []int{7}
}

func (x *QueryBasketHistoricalMintsResponse) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type QueryBasketHistoricalBurnsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasketId uint64 `protobuf:"varint,1,opt,name=basket_id,json=basketId,proto3" json:"basket_id,omitempty"`
}

func (x *QueryBasketHistoricalBurnsRequest) Reset() {
	*x = QueryBasketHistoricalBurnsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_basket_query_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryBasketHistoricalBurnsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryBasketHistoricalBurnsRequest) ProtoMessage() {}

func (x *QueryBasketHistoricalBurnsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kira_basket_query_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryBasketHistoricalBurnsRequest.ProtoReflect.Descriptor instead.
func (*QueryBasketHistoricalBurnsRequest) Descriptor() ([]byte, []int) {
	return file_kira_basket_query_proto_rawDescGZIP(), []int{8}
}

func (x *QueryBasketHistoricalBurnsRequest) GetBasketId() uint64 {
	if x != nil {
		return x.BasketId
	}
	return 0
}

type QueryBasketHistoricalBurnsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount string `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *QueryBasketHistoricalBurnsResponse) Reset() {
	*x = QueryBasketHistoricalBurnsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_basket_query_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryBasketHistoricalBurnsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryBasketHistoricalBurnsResponse) ProtoMessage() {}

func (x *QueryBasketHistoricalBurnsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_basket_query_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryBasketHistoricalBurnsResponse.ProtoReflect.Descriptor instead.
func (*QueryBasketHistoricalBurnsResponse) Descriptor() ([]byte, []int) {
	return file_kira_basket_query_proto_rawDescGZIP(), []int{9}
}

func (x *QueryBasketHistoricalBurnsResponse) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type QueryBasketHistoricalSwapsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasketId uint64 `protobuf:"varint,1,opt,name=basket_id,json=basketId,proto3" json:"basket_id,omitempty"`
}

func (x *QueryBasketHistoricalSwapsRequest) Reset() {
	*x = QueryBasketHistoricalSwapsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_basket_query_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryBasketHistoricalSwapsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryBasketHistoricalSwapsRequest) ProtoMessage() {}

func (x *QueryBasketHistoricalSwapsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kira_basket_query_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryBasketHistoricalSwapsRequest.ProtoReflect.Descriptor instead.
func (*QueryBasketHistoricalSwapsRequest) Descriptor() ([]byte, []int) {
	return file_kira_basket_query_proto_rawDescGZIP(), []int{10}
}

func (x *QueryBasketHistoricalSwapsRequest) GetBasketId() uint64 {
	if x != nil {
		return x.BasketId
	}
	return 0
}

type QueryBasketHistoricalSwapsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount string `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *QueryBasketHistoricalSwapsResponse) Reset() {
	*x = QueryBasketHistoricalSwapsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_basket_query_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryBasketHistoricalSwapsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryBasketHistoricalSwapsResponse) ProtoMessage() {}

func (x *QueryBasketHistoricalSwapsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_basket_query_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryBasketHistoricalSwapsResponse.ProtoReflect.Descriptor instead.
func (*QueryBasketHistoricalSwapsResponse) Descriptor() ([]byte, []int) {
	return file_kira_basket_query_proto_rawDescGZIP(), []int{11}
}

func (x *QueryBasketHistoricalSwapsResponse) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

var File_kira_basket_query_proto protoreflect.FileDescriptor

var file_kira_basket_query_proto_rawDesc = []byte{
	0x0a, 0x17, 0x6b, 0x69, 0x72, 0x61, 0x2f, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x2f, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x6b, 0x69, 0x72, 0x61, 0x2e,
	0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x1a, 0x2a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x62,
	0x61, 0x73, 0x65, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f,
	0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x18, 0x6b, 0x69, 0x72, 0x61, 0x2f, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x2f, 0x62,
	0x61, 0x73, 0x6b, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2d, 0x0a, 0x1b, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4b, 0x0a, 0x1c, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x62, 0x61,
	0x73, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6b, 0x69, 0x72,
	0x61, 0x2e, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x2e, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x52,
	0x06, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x22, 0x36, 0x0a, 0x1e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x42, 0x79, 0x44, 0x65, 0x6e,
	0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x6e,
	0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x22,
	0x4e, 0x0a, 0x1f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x61, 0x73,
	0x6b, 0x65, 0x74, 0x42, 0x79, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74,
	0x2e, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x22,
	0x5d, 0x0a, 0x18, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x61, 0x73,
	0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x73, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x64,
	0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x76, 0x65, 0x73, 0x4f, 0x6e, 0x6c, 0x79, 0x22, 0x50,
	0x0a, 0x19, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x61, 0x73, 0x6b,
	0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x62,
	0x61, 0x73, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6b,
	0x69, 0x72, 0x61, 0x2e, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x2e, 0x42, 0x61, 0x73, 0x6b, 0x65,
	0x74, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x07, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x73,
	0x22, 0x40, 0x0a, 0x21, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x4d, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74,
	0x49, 0x64, 0x22, 0x6c, 0x0a, 0x22, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x61, 0x73, 0x6b, 0x65,
	0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x4d, 0x69, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2e, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde,
	0x1f, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x40, 0x0a, 0x21, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x42, 0x75, 0x72, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74,
	0x49, 0x64, 0x22, 0x6c, 0x0a, 0x22, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x61, 0x73, 0x6b, 0x65,
	0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x42, 0x75, 0x72, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2e, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde,
	0x1f, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x40, 0x0a, 0x21, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x53, 0x77, 0x61, 0x70, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74,
	0x49, 0x64, 0x22, 0x6c, 0x0a, 0x22, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x61, 0x73, 0x6b, 0x65,
	0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x53, 0x77, 0x61, 0x70, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2e, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde,
	0x1f, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x32, 0xee, 0x07, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x94, 0x01, 0x0a, 0x0f, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x28,
	0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e,
	0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x12, 0x24, 0x2f, 0x6b, 0x69,
	0x72, 0x61, 0x2f, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x2f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f,
	0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x5f, 0x62, 0x79, 0x5f, 0x69, 0x64, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x12, 0xa3, 0x01, 0x0a, 0x12, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x61, 0x73, 0x6b, 0x65,
	0x74, 0x42, 0x79, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x2b, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e,
	0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x42, 0x79, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x62, 0x61, 0x73,
	0x6b, 0x65, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x61,
	0x73, 0x6b, 0x65, 0x74, 0x42, 0x79, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x12, 0x2a, 0x2f, 0x6b, 0x69,
	0x72, 0x61, 0x2f, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x2f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f,
	0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x5f, 0x62, 0x79, 0x5f, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x2f,
	0x7b, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x7d, 0x12, 0x9d, 0x01, 0x0a, 0x0c, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x25, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e,
	0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x26, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x38, 0x12,
	0x36, 0x2f, 0x6b, 0x69, 0x72, 0x61, 0x2f, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x2f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x5f, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x73, 0x2f, 0x7b, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x73, 0x7d, 0x2f, 0x7b, 0x64, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x73, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x7d, 0x12, 0xab, 0x01, 0x0a, 0x15, 0x42, 0x61, 0x6b, 0x73,
	0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x4d, 0x69, 0x6e, 0x74,
	0x73, 0x12, 0x2e, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x69, 0x63, 0x61, 0x6c, 0x4d, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2f, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x69, 0x63, 0x61, 0x6c, 0x4d, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x12, 0x29, 0x2f, 0x6b, 0x69, 0x72,
	0x61, 0x2f, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x2f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69,
	0x63, 0x61, 0x6c, 0x5f, 0x6d, 0x69, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x62, 0x61, 0x73, 0x6b, 0x65,
	0x74, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xab, 0x01, 0x0a, 0x15, 0x42, 0x61, 0x6b, 0x73, 0x65, 0x74,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x42, 0x75, 0x72, 0x6e, 0x73, 0x12,
	0x2e, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69,
	0x63, 0x61, 0x6c, 0x42, 0x75, 0x72, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2f, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69,
	0x63, 0x61, 0x6c, 0x42, 0x75, 0x72, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x12, 0x29, 0x2f, 0x6b, 0x69, 0x72, 0x61, 0x2f,
	0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x2f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61,
	0x6c, 0x5f, 0x62, 0x75, 0x72, 0x6e, 0x73, 0x2f, 0x7b, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x5f,
	0x69, 0x64, 0x7d, 0x12, 0xab, 0x01, 0x0a, 0x15, 0x42, 0x61, 0x6b, 0x73, 0x65, 0x74, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x53, 0x77, 0x61, 0x70, 0x73, 0x12, 0x2e, 0x2e,
	0x6b, 0x69, 0x72, 0x61, 0x2e, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61,
	0x6c, 0x53, 0x77, 0x61, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e,
	0x6b, 0x69, 0x72, 0x61, 0x2e, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61,
	0x6c, 0x53, 0x77, 0x61, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x12, 0x29, 0x2f, 0x6b, 0x69, 0x72, 0x61, 0x2f, 0x62, 0x61,
	0x73, 0x6b, 0x65, 0x74, 0x2f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x5f,
	0x73, 0x77, 0x61, 0x70, 0x73, 0x2f, 0x7b, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64,
	0x7d, 0x42, 0x2a, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x4b, 0x69, 0x72, 0x61, 0x43, 0x6f, 0x72, 0x65, 0x2f, 0x73, 0x65, 0x6b, 0x61, 0x69, 0x2f, 0x78,
	0x2f, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kira_basket_query_proto_rawDescOnce sync.Once
	file_kira_basket_query_proto_rawDescData = file_kira_basket_query_proto_rawDesc
)

func file_kira_basket_query_proto_rawDescGZIP() []byte {
	file_kira_basket_query_proto_rawDescOnce.Do(func() {
		file_kira_basket_query_proto_rawDescData = protoimpl.X.CompressGZIP(file_kira_basket_query_proto_rawDescData)
	})
	return file_kira_basket_query_proto_rawDescData
}

var file_kira_basket_query_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_kira_basket_query_proto_goTypes = []interface{}{
	(*QueryTokenBasketByIdRequest)(nil),        // 0: kira.basket.QueryTokenBasketByIdRequest
	(*QueryTokenBasketByIdResponse)(nil),       // 1: kira.basket.QueryTokenBasketByIdResponse
	(*QueryTokenBasketByDenomRequest)(nil),     // 2: kira.basket.QueryTokenBasketByDenomRequest
	(*QueryTokenBasketByDenomResponse)(nil),    // 3: kira.basket.QueryTokenBasketByDenomResponse
	(*QueryTokenBasketsRequest)(nil),           // 4: kira.basket.QueryTokenBasketsRequest
	(*QueryTokenBasketsResponse)(nil),          // 5: kira.basket.QueryTokenBasketsResponse
	(*QueryBasketHistoricalMintsRequest)(nil),  // 6: kira.basket.QueryBasketHistoricalMintsRequest
	(*QueryBasketHistoricalMintsResponse)(nil), // 7: kira.basket.QueryBasketHistoricalMintsResponse
	(*QueryBasketHistoricalBurnsRequest)(nil),  // 8: kira.basket.QueryBasketHistoricalBurnsRequest
	(*QueryBasketHistoricalBurnsResponse)(nil), // 9: kira.basket.QueryBasketHistoricalBurnsResponse
	(*QueryBasketHistoricalSwapsRequest)(nil),  // 10: kira.basket.QueryBasketHistoricalSwapsRequest
	(*QueryBasketHistoricalSwapsResponse)(nil), // 11: kira.basket.QueryBasketHistoricalSwapsResponse
	(*Basket)(nil), // 12: kira.basket.Basket
}
var file_kira_basket_query_proto_depIdxs = []int32{
	12, // 0: kira.basket.QueryTokenBasketByIdResponse.basket:type_name -> kira.basket.Basket
	12, // 1: kira.basket.QueryTokenBasketByDenomResponse.basket:type_name -> kira.basket.Basket
	12, // 2: kira.basket.QueryTokenBasketsResponse.baskets:type_name -> kira.basket.Basket
	0,  // 3: kira.basket.Query.TokenBasketById:input_type -> kira.basket.QueryTokenBasketByIdRequest
	2,  // 4: kira.basket.Query.TokenBasketByDenom:input_type -> kira.basket.QueryTokenBasketByDenomRequest
	4,  // 5: kira.basket.Query.TokenBaskets:input_type -> kira.basket.QueryTokenBasketsRequest
	6,  // 6: kira.basket.Query.BaksetHistoricalMints:input_type -> kira.basket.QueryBasketHistoricalMintsRequest
	8,  // 7: kira.basket.Query.BaksetHistoricalBurns:input_type -> kira.basket.QueryBasketHistoricalBurnsRequest
	10, // 8: kira.basket.Query.BaksetHistoricalSwaps:input_type -> kira.basket.QueryBasketHistoricalSwapsRequest
	1,  // 9: kira.basket.Query.TokenBasketById:output_type -> kira.basket.QueryTokenBasketByIdResponse
	3,  // 10: kira.basket.Query.TokenBasketByDenom:output_type -> kira.basket.QueryTokenBasketByDenomResponse
	5,  // 11: kira.basket.Query.TokenBaskets:output_type -> kira.basket.QueryTokenBasketsResponse
	7,  // 12: kira.basket.Query.BaksetHistoricalMints:output_type -> kira.basket.QueryBasketHistoricalMintsResponse
	9,  // 13: kira.basket.Query.BaksetHistoricalBurns:output_type -> kira.basket.QueryBasketHistoricalBurnsResponse
	11, // 14: kira.basket.Query.BaksetHistoricalSwaps:output_type -> kira.basket.QueryBasketHistoricalSwapsResponse
	9,  // [9:15] is the sub-list for method output_type
	3,  // [3:9] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_kira_basket_query_proto_init() }
func file_kira_basket_query_proto_init() {
	if File_kira_basket_query_proto != nil {
		return
	}
	file_kira_basket_basket_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_kira_basket_query_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryTokenBasketByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_basket_query_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryTokenBasketByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_basket_query_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryTokenBasketByDenomRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_basket_query_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryTokenBasketByDenomResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_basket_query_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryTokenBasketsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_basket_query_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryTokenBasketsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_basket_query_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryBasketHistoricalMintsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_basket_query_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryBasketHistoricalMintsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_basket_query_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryBasketHistoricalBurnsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_basket_query_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryBasketHistoricalBurnsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_basket_query_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryBasketHistoricalSwapsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_basket_query_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryBasketHistoricalSwapsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kira_basket_query_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kira_basket_query_proto_goTypes,
		DependencyIndexes: file_kira_basket_query_proto_depIdxs,
		MessageInfos:      file_kira_basket_query_proto_msgTypes,
	}.Build()
	File_kira_basket_query_proto = out.File
	file_kira_basket_query_proto_rawDesc = nil
	file_kira_basket_query_proto_goTypes = nil
	file_kira_basket_query_proto_depIdxs = nil
}
