// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.1
// source: kira/basket/tx.proto

package types

import (
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/gogo/protobuf/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// - `disable-basket-deposits` - emergency function & permission to disable one or all deposits of one or all token in the basket
//     - To disable all deposits at once the `mints_max` should be set to `0`
//     - To disable single token set `deposits` boolean flag to false
type MsgDisableBasketDeposits struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender   string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	BasketId uint64 `protobuf:"varint,2,opt,name=basket_id,json=basketId,proto3" json:"basket_id,omitempty"`
	Disabled bool   `protobuf:"varint,3,opt,name=disabled,proto3" json:"disabled,omitempty"`
}

func (x *MsgDisableBasketDeposits) Reset() {
	*x = MsgDisableBasketDeposits{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_basket_tx_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDisableBasketDeposits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDisableBasketDeposits) ProtoMessage() {}

func (x *MsgDisableBasketDeposits) ProtoReflect() protoreflect.Message {
	mi := &file_kira_basket_tx_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDisableBasketDeposits.ProtoReflect.Descriptor instead.
func (*MsgDisableBasketDeposits) Descriptor() ([]byte, []int) {
	return file_kira_basket_tx_proto_rawDescGZIP(), []int{0}
}

func (x *MsgDisableBasketDeposits) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MsgDisableBasketDeposits) GetBasketId() uint64 {
	if x != nil {
		return x.BasketId
	}
	return 0
}

func (x *MsgDisableBasketDeposits) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

type MsgDisableBasketDepositsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgDisableBasketDepositsResponse) Reset() {
	*x = MsgDisableBasketDepositsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_basket_tx_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDisableBasketDepositsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDisableBasketDepositsResponse) ProtoMessage() {}

func (x *MsgDisableBasketDepositsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_basket_tx_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDisableBasketDepositsResponse.ProtoReflect.Descriptor instead.
func (*MsgDisableBasketDepositsResponse) Descriptor() ([]byte, []int) {
	return file_kira_basket_tx_proto_rawDescGZIP(), []int{1}
}

// - `disable-basket-withdraws`- emergency function & permission to disable one or all withdrawals of one or all token in the basket
//     - To disable all withdraws at once the `burns_max` should be set to `0`
//     - To disable single token set `withdraws` boolean flag to false
type MsgDisableBasketWithdraws struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender   string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	BasketId uint64 `protobuf:"varint,2,opt,name=basket_id,json=basketId,proto3" json:"basket_id,omitempty"`
	Disabled bool   `protobuf:"varint,3,opt,name=disabled,proto3" json:"disabled,omitempty"`
}

func (x *MsgDisableBasketWithdraws) Reset() {
	*x = MsgDisableBasketWithdraws{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_basket_tx_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDisableBasketWithdraws) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDisableBasketWithdraws) ProtoMessage() {}

func (x *MsgDisableBasketWithdraws) ProtoReflect() protoreflect.Message {
	mi := &file_kira_basket_tx_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDisableBasketWithdraws.ProtoReflect.Descriptor instead.
func (*MsgDisableBasketWithdraws) Descriptor() ([]byte, []int) {
	return file_kira_basket_tx_proto_rawDescGZIP(), []int{2}
}

func (x *MsgDisableBasketWithdraws) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MsgDisableBasketWithdraws) GetBasketId() uint64 {
	if x != nil {
		return x.BasketId
	}
	return 0
}

func (x *MsgDisableBasketWithdraws) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

type MsgDisableBasketWithdrawsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgDisableBasketWithdrawsResponse) Reset() {
	*x = MsgDisableBasketWithdrawsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_basket_tx_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDisableBasketWithdrawsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDisableBasketWithdrawsResponse) ProtoMessage() {}

func (x *MsgDisableBasketWithdrawsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_basket_tx_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDisableBasketWithdrawsResponse.ProtoReflect.Descriptor instead.
func (*MsgDisableBasketWithdrawsResponse) Descriptor() ([]byte, []int) {
	return file_kira_basket_tx_proto_rawDescGZIP(), []int{3}
}

// - `disable-basket-swaps`- emergency function & permission to disable one or all swaps of one or all token in the basket
//     - To disable all swaps at once the `swaps_max` should be set to `0`
//     - To disable single token set `swaps` boolean flag to false
type MsgDisableBasketSwaps struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender   string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	BasketId uint64 `protobuf:"varint,2,opt,name=basket_id,json=basketId,proto3" json:"basket_id,omitempty"`
	Disabled bool   `protobuf:"varint,3,opt,name=disabled,proto3" json:"disabled,omitempty"`
}

func (x *MsgDisableBasketSwaps) Reset() {
	*x = MsgDisableBasketSwaps{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_basket_tx_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDisableBasketSwaps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDisableBasketSwaps) ProtoMessage() {}

func (x *MsgDisableBasketSwaps) ProtoReflect() protoreflect.Message {
	mi := &file_kira_basket_tx_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDisableBasketSwaps.ProtoReflect.Descriptor instead.
func (*MsgDisableBasketSwaps) Descriptor() ([]byte, []int) {
	return file_kira_basket_tx_proto_rawDescGZIP(), []int{4}
}

func (x *MsgDisableBasketSwaps) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MsgDisableBasketSwaps) GetBasketId() uint64 {
	if x != nil {
		return x.BasketId
	}
	return 0
}

func (x *MsgDisableBasketSwaps) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

type MsgDisableBasketSwapsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgDisableBasketSwapsResponse) Reset() {
	*x = MsgDisableBasketSwapsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_basket_tx_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDisableBasketSwapsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDisableBasketSwapsResponse) ProtoMessage() {}

func (x *MsgDisableBasketSwapsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_basket_tx_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDisableBasketSwapsResponse.ProtoReflect.Descriptor instead.
func (*MsgDisableBasketSwapsResponse) Descriptor() ([]byte, []int) {
	return file_kira_basket_tx_proto_rawDescGZIP(), []int{5}
}

// - `basket-token-mint` - transaction to mint basket tokens
type MsgBasketTokenMint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender   string   `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	BasketId uint64   `protobuf:"varint,2,opt,name=basket_id,json=basketId,proto3" json:"basket_id,omitempty"`
	Deposit  []string `protobuf:"bytes,3,rep,name=deposit,proto3" json:"deposit,omitempty"`
}

func (x *MsgBasketTokenMint) Reset() {
	*x = MsgBasketTokenMint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_basket_tx_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgBasketTokenMint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgBasketTokenMint) ProtoMessage() {}

func (x *MsgBasketTokenMint) ProtoReflect() protoreflect.Message {
	mi := &file_kira_basket_tx_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgBasketTokenMint.ProtoReflect.Descriptor instead.
func (*MsgBasketTokenMint) Descriptor() ([]byte, []int) {
	return file_kira_basket_tx_proto_rawDescGZIP(), []int{6}
}

func (x *MsgBasketTokenMint) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MsgBasketTokenMint) GetBasketId() uint64 {
	if x != nil {
		return x.BasketId
	}
	return 0
}

func (x *MsgBasketTokenMint) GetDeposit() []string {
	if x != nil {
		return x.Deposit
	}
	return nil
}

type MsgBasketTokenMintResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgBasketTokenMintResponse) Reset() {
	*x = MsgBasketTokenMintResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_basket_tx_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgBasketTokenMintResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgBasketTokenMintResponse) ProtoMessage() {}

func (x *MsgBasketTokenMintResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_basket_tx_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgBasketTokenMintResponse.ProtoReflect.Descriptor instead.
func (*MsgBasketTokenMintResponse) Descriptor() ([]byte, []int) {
	return file_kira_basket_tx_proto_rawDescGZIP(), []int{7}
}

// - `basket-token-burn` - transaction to burn basket tokens and redeem underlying aggregate tokens
type MsgBasketTokenBurn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender     string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	BasketId   uint64 `protobuf:"varint,2,opt,name=basket_id,json=basketId,proto3" json:"basket_id,omitempty"`
	BurnAmount string `protobuf:"bytes,3,opt,name=burn_amount,json=burnAmount,proto3" json:"burn_amount,omitempty"`
}

func (x *MsgBasketTokenBurn) Reset() {
	*x = MsgBasketTokenBurn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_basket_tx_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgBasketTokenBurn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgBasketTokenBurn) ProtoMessage() {}

func (x *MsgBasketTokenBurn) ProtoReflect() protoreflect.Message {
	mi := &file_kira_basket_tx_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgBasketTokenBurn.ProtoReflect.Descriptor instead.
func (*MsgBasketTokenBurn) Descriptor() ([]byte, []int) {
	return file_kira_basket_tx_proto_rawDescGZIP(), []int{8}
}

func (x *MsgBasketTokenBurn) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MsgBasketTokenBurn) GetBasketId() uint64 {
	if x != nil {
		return x.BasketId
	}
	return 0
}

func (x *MsgBasketTokenBurn) GetBurnAmount() string {
	if x != nil {
		return x.BurnAmount
	}
	return ""
}

type MsgBasketTokenBurnResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgBasketTokenBurnResponse) Reset() {
	*x = MsgBasketTokenBurnResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_basket_tx_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgBasketTokenBurnResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgBasketTokenBurnResponse) ProtoMessage() {}

func (x *MsgBasketTokenBurnResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_basket_tx_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgBasketTokenBurnResponse.ProtoReflect.Descriptor instead.
func (*MsgBasketTokenBurnResponse) Descriptor() ([]byte, []int) {
	return file_kira_basket_tx_proto_rawDescGZIP(), []int{9}
}

type SwapPair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InAmount string `protobuf:"bytes,1,opt,name=in_amount,json=inAmount,proto3" json:"in_amount,omitempty"`
	OutToken string `protobuf:"bytes,2,opt,name=out_token,json=outToken,proto3" json:"out_token,omitempty"`
}

func (x *SwapPair) Reset() {
	*x = SwapPair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_basket_tx_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwapPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwapPair) ProtoMessage() {}

func (x *SwapPair) ProtoReflect() protoreflect.Message {
	mi := &file_kira_basket_tx_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwapPair.ProtoReflect.Descriptor instead.
func (*SwapPair) Descriptor() ([]byte, []int) {
	return file_kira_basket_tx_proto_rawDescGZIP(), []int{10}
}

func (x *SwapPair) GetInAmount() string {
	if x != nil {
		return x.InAmount
	}
	return ""
}

func (x *SwapPair) GetOutToken() string {
	if x != nil {
		return x.OutToken
	}
	return ""
}

// - `basket-token-swap` - transaction to swap one or many of the basket tokens for one or many others
type MsgBasketTokenSwap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender   string      `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	BasketId uint64      `protobuf:"varint,2,opt,name=basket_id,json=basketId,proto3" json:"basket_id,omitempty"`
	Pairs    []*SwapPair `protobuf:"bytes,3,rep,name=pairs,proto3" json:"pairs,omitempty"`
}

func (x *MsgBasketTokenSwap) Reset() {
	*x = MsgBasketTokenSwap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_basket_tx_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgBasketTokenSwap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgBasketTokenSwap) ProtoMessage() {}

func (x *MsgBasketTokenSwap) ProtoReflect() protoreflect.Message {
	mi := &file_kira_basket_tx_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgBasketTokenSwap.ProtoReflect.Descriptor instead.
func (*MsgBasketTokenSwap) Descriptor() ([]byte, []int) {
	return file_kira_basket_tx_proto_rawDescGZIP(), []int{11}
}

func (x *MsgBasketTokenSwap) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MsgBasketTokenSwap) GetBasketId() uint64 {
	if x != nil {
		return x.BasketId
	}
	return 0
}

func (x *MsgBasketTokenSwap) GetPairs() []*SwapPair {
	if x != nil {
		return x.Pairs
	}
	return nil
}

type MsgBasketTokenSwapResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgBasketTokenSwapResponse) Reset() {
	*x = MsgBasketTokenSwapResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_basket_tx_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgBasketTokenSwapResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgBasketTokenSwapResponse) ProtoMessage() {}

func (x *MsgBasketTokenSwapResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_basket_tx_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgBasketTokenSwapResponse.ProtoReflect.Descriptor instead.
func (*MsgBasketTokenSwapResponse) Descriptor() ([]byte, []int) {
	return file_kira_basket_tx_proto_rawDescGZIP(), []int{12}
}

// - `basket-claim-rewards` - transaction to force staking derivative `SDB` basket to claim outstanding rewards of one all or many aggregate `V<ID>` tokens
type MsgBasketClaimRewards struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender       string   `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	BasketTokens []string `protobuf:"bytes,2,rep,name=basket_tokens,json=basketTokens,proto3" json:"basket_tokens,omitempty"`
}

func (x *MsgBasketClaimRewards) Reset() {
	*x = MsgBasketClaimRewards{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_basket_tx_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgBasketClaimRewards) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgBasketClaimRewards) ProtoMessage() {}

func (x *MsgBasketClaimRewards) ProtoReflect() protoreflect.Message {
	mi := &file_kira_basket_tx_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgBasketClaimRewards.ProtoReflect.Descriptor instead.
func (*MsgBasketClaimRewards) Descriptor() ([]byte, []int) {
	return file_kira_basket_tx_proto_rawDescGZIP(), []int{13}
}

func (x *MsgBasketClaimRewards) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MsgBasketClaimRewards) GetBasketTokens() []string {
	if x != nil {
		return x.BasketTokens
	}
	return nil
}

type MsgBasketClaimRewardsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgBasketClaimRewardsResponse) Reset() {
	*x = MsgBasketClaimRewardsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_basket_tx_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgBasketClaimRewardsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgBasketClaimRewardsResponse) ProtoMessage() {}

func (x *MsgBasketClaimRewardsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_basket_tx_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgBasketClaimRewardsResponse.ProtoReflect.Descriptor instead.
func (*MsgBasketClaimRewardsResponse) Descriptor() ([]byte, []int) {
	return file_kira_basket_tx_proto_rawDescGZIP(), []int{14}
}

var File_kira_basket_tx_proto protoreflect.FileDescriptor

var file_kira_basket_tx_proto_rawDesc = []byte{
	0x0a, 0x14, 0x6b, 0x69, 0x72, 0x61, 0x2f, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x2f, 0x74, 0x78,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x62, 0x61, 0x73,
	0x6b, 0x65, 0x74, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67,
	0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x18, 0x6b, 0x69, 0x72, 0x61, 0x2f, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x2f, 0x62, 0x61, 0x73,
	0x6b, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6b, 0x0a, 0x18, 0x4d, 0x73, 0x67,
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x44, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x0a,
	0x09, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x22, 0x0a, 0x20, 0x4d, 0x73, 0x67, 0x44, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6c, 0x0a, 0x19, 0x4d, 0x73,
	0x67, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12,
	0x1b, 0x0a, 0x09, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x23, 0x0a, 0x21, 0x4d, 0x73, 0x67, 0x44,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x68, 0x0a,
	0x15, 0x4d, 0x73, 0x67, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x61, 0x73, 0x6b, 0x65,
	0x74, 0x53, 0x77, 0x61, 0x70, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1b,
	0x0a, 0x09, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x1f, 0x0a, 0x1d, 0x4d, 0x73, 0x67, 0x44, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x53, 0x77, 0x61, 0x70, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x94, 0x01, 0x0a, 0x12, 0x4d, 0x73, 0x67,
	0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4d, 0x69, 0x6e, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x73, 0x6b, 0x65,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x62, 0x61, 0x73, 0x6b,
	0x65, 0x74, 0x49, 0x64, 0x12, 0x49, 0x0a, 0x07, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x42, 0x2f, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x27, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x07, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x22,
	0x1c, 0x0a, 0x1a, 0x4d, 0x73, 0x67, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x4d, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x9b, 0x01,
	0x0a, 0x12, 0x4d, 0x73, 0x67, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x42, 0x75, 0x72, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09,
	0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x50, 0x0a, 0x0b, 0x62, 0x75, 0x72,
	0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2f,
	0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x52,
	0x0a, 0x62, 0x75, 0x72, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x1c, 0x0a, 0x1a, 0x4d,
	0x73, 0x67, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x75, 0x72,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x75, 0x0a, 0x08, 0x53, 0x77, 0x61,
	0x70, 0x50, 0x61, 0x69, 0x72, 0x12, 0x4c, 0x0a, 0x09, 0x69, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2f, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde,
	0x1f, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x08, 0x69, 0x6e, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x75, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x75, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0x7c, 0x0a, 0x12, 0x4d, 0x73, 0x67, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x53, 0x77, 0x61, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1b,
	0x0a, 0x09, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x05, 0x70,
	0x61, 0x69, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6b, 0x69, 0x72,
	0x61, 0x2e, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x2e, 0x53, 0x77, 0x61, 0x70, 0x50, 0x61, 0x69,
	0x72, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x05, 0x70, 0x61, 0x69, 0x72, 0x73, 0x22, 0x1c,
	0x0a, 0x1a, 0x4d, 0x73, 0x67, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x53, 0x77, 0x61, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x85, 0x01, 0x0a,
	0x15, 0x4d, 0x73, 0x67, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x54,
	0x0a, 0x0d, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x42, 0x2f, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x27, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x0c, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x73, 0x22, 0x1f, 0x0a, 0x1d, 0x4d, 0x73, 0x67, 0x42, 0x61, 0x73, 0x6b, 0x65,
	0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xc9, 0x05, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x6d, 0x0a,
	0x15, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x44, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x73, 0x12, 0x25, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x62, 0x61,
	0x73, 0x6b, 0x65, 0x74, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x42,
	0x61, 0x73, 0x6b, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x73, 0x1a, 0x2d, 0x2e,
	0x6b, 0x69, 0x72, 0x61, 0x2e, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x2e, 0x4d, 0x73, 0x67, 0x44,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x70, 0x0a, 0x16,
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x57, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x73, 0x12, 0x26, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x62, 0x61,
	0x73, 0x6b, 0x65, 0x74, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x42,
	0x61, 0x73, 0x6b, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x73, 0x1a, 0x2e,
	0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x2e, 0x4d, 0x73, 0x67,
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x57, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64,
	0x0a, 0x12, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x53,
	0x77, 0x61, 0x70, 0x73, 0x12, 0x22, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x62, 0x61, 0x73, 0x6b,
	0x65, 0x74, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x61, 0x73,
	0x6b, 0x65, 0x74, 0x53, 0x77, 0x61, 0x70, 0x73, 0x1a, 0x2a, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e,
	0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x53, 0x77, 0x61, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x0f, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x4d, 0x69, 0x6e, 0x74, 0x12, 0x1f, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x62,
	0x61, 0x73, 0x6b, 0x65, 0x74, 0x2e, 0x4d, 0x73, 0x67, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x4d, 0x69, 0x6e, 0x74, 0x1a, 0x27, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e,
	0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x2e, 0x4d, 0x73, 0x67, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4d, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5b, 0x0a, 0x0f, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x42, 0x75, 0x72, 0x6e, 0x12, 0x1f, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x62, 0x61, 0x73, 0x6b,
	0x65, 0x74, 0x2e, 0x4d, 0x73, 0x67, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x42, 0x75, 0x72, 0x6e, 0x1a, 0x27, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x62, 0x61, 0x73,
	0x6b, 0x65, 0x74, 0x2e, 0x4d, 0x73, 0x67, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x42, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b,
	0x0a, 0x0f, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x77, 0x61,
	0x70, 0x12, 0x1f, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x2e,
	0x4d, 0x73, 0x67, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x77,
	0x61, 0x70, 0x1a, 0x27, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74,
	0x2e, 0x4d, 0x73, 0x67, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53,
	0x77, 0x61, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x12, 0x42,
	0x61, 0x73, 0x6b, 0x65, 0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x12, 0x22, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x2e,
	0x4d, 0x73, 0x67, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x1a, 0x2a, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x62, 0x61, 0x73,
	0x6b, 0x65, 0x74, 0x2e, 0x4d, 0x73, 0x67, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x43, 0x6c, 0x61,
	0x69, 0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x2e, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x4b, 0x69, 0x72, 0x61, 0x43, 0x6f, 0x72, 0x65, 0x2f, 0x73, 0x65, 0x6b, 0x61, 0x69, 0x2f, 0x78,
	0x2f, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0xa8, 0xe2, 0x1e,
	0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kira_basket_tx_proto_rawDescOnce sync.Once
	file_kira_basket_tx_proto_rawDescData = file_kira_basket_tx_proto_rawDesc
)

func file_kira_basket_tx_proto_rawDescGZIP() []byte {
	file_kira_basket_tx_proto_rawDescOnce.Do(func() {
		file_kira_basket_tx_proto_rawDescData = protoimpl.X.CompressGZIP(file_kira_basket_tx_proto_rawDescData)
	})
	return file_kira_basket_tx_proto_rawDescData
}

var file_kira_basket_tx_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_kira_basket_tx_proto_goTypes = []interface{}{
	(*MsgDisableBasketDeposits)(nil),          // 0: kira.basket.MsgDisableBasketDeposits
	(*MsgDisableBasketDepositsResponse)(nil),  // 1: kira.basket.MsgDisableBasketDepositsResponse
	(*MsgDisableBasketWithdraws)(nil),         // 2: kira.basket.MsgDisableBasketWithdraws
	(*MsgDisableBasketWithdrawsResponse)(nil), // 3: kira.basket.MsgDisableBasketWithdrawsResponse
	(*MsgDisableBasketSwaps)(nil),             // 4: kira.basket.MsgDisableBasketSwaps
	(*MsgDisableBasketSwapsResponse)(nil),     // 5: kira.basket.MsgDisableBasketSwapsResponse
	(*MsgBasketTokenMint)(nil),                // 6: kira.basket.MsgBasketTokenMint
	(*MsgBasketTokenMintResponse)(nil),        // 7: kira.basket.MsgBasketTokenMintResponse
	(*MsgBasketTokenBurn)(nil),                // 8: kira.basket.MsgBasketTokenBurn
	(*MsgBasketTokenBurnResponse)(nil),        // 9: kira.basket.MsgBasketTokenBurnResponse
	(*SwapPair)(nil),                          // 10: kira.basket.SwapPair
	(*MsgBasketTokenSwap)(nil),                // 11: kira.basket.MsgBasketTokenSwap
	(*MsgBasketTokenSwapResponse)(nil),        // 12: kira.basket.MsgBasketTokenSwapResponse
	(*MsgBasketClaimRewards)(nil),             // 13: kira.basket.MsgBasketClaimRewards
	(*MsgBasketClaimRewardsResponse)(nil),     // 14: kira.basket.MsgBasketClaimRewardsResponse
}
var file_kira_basket_tx_proto_depIdxs = []int32{
	10, // 0: kira.basket.MsgBasketTokenSwap.pairs:type_name -> kira.basket.SwapPair
	0,  // 1: kira.basket.Msg.DisableBasketDeposits:input_type -> kira.basket.MsgDisableBasketDeposits
	2,  // 2: kira.basket.Msg.DisableBasketWithdraws:input_type -> kira.basket.MsgDisableBasketWithdraws
	4,  // 3: kira.basket.Msg.DisableBasketSwaps:input_type -> kira.basket.MsgDisableBasketSwaps
	6,  // 4: kira.basket.Msg.BasketTokenMint:input_type -> kira.basket.MsgBasketTokenMint
	8,  // 5: kira.basket.Msg.BasketTokenBurn:input_type -> kira.basket.MsgBasketTokenBurn
	11, // 6: kira.basket.Msg.BasketTokenSwap:input_type -> kira.basket.MsgBasketTokenSwap
	13, // 7: kira.basket.Msg.BasketClaimRewards:input_type -> kira.basket.MsgBasketClaimRewards
	1,  // 8: kira.basket.Msg.DisableBasketDeposits:output_type -> kira.basket.MsgDisableBasketDepositsResponse
	3,  // 9: kira.basket.Msg.DisableBasketWithdraws:output_type -> kira.basket.MsgDisableBasketWithdrawsResponse
	5,  // 10: kira.basket.Msg.DisableBasketSwaps:output_type -> kira.basket.MsgDisableBasketSwapsResponse
	7,  // 11: kira.basket.Msg.BasketTokenMint:output_type -> kira.basket.MsgBasketTokenMintResponse
	9,  // 12: kira.basket.Msg.BasketTokenBurn:output_type -> kira.basket.MsgBasketTokenBurnResponse
	12, // 13: kira.basket.Msg.BasketTokenSwap:output_type -> kira.basket.MsgBasketTokenSwapResponse
	14, // 14: kira.basket.Msg.BasketClaimRewards:output_type -> kira.basket.MsgBasketClaimRewardsResponse
	8,  // [8:15] is the sub-list for method output_type
	1,  // [1:8] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_kira_basket_tx_proto_init() }
func file_kira_basket_tx_proto_init() {
	if File_kira_basket_tx_proto != nil {
		return
	}
	file_kira_basket_basket_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_kira_basket_tx_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDisableBasketDeposits); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_basket_tx_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDisableBasketDepositsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_basket_tx_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDisableBasketWithdraws); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_basket_tx_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDisableBasketWithdrawsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_basket_tx_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDisableBasketSwaps); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_basket_tx_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDisableBasketSwapsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_basket_tx_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgBasketTokenMint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_basket_tx_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgBasketTokenMintResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_basket_tx_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgBasketTokenBurn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_basket_tx_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgBasketTokenBurnResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_basket_tx_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwapPair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_basket_tx_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgBasketTokenSwap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_basket_tx_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgBasketTokenSwapResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_basket_tx_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgBasketClaimRewards); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_basket_tx_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgBasketClaimRewardsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kira_basket_tx_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kira_basket_tx_proto_goTypes,
		DependencyIndexes: file_kira_basket_tx_proto_depIdxs,
		MessageInfos:      file_kira_basket_tx_proto_msgTypes,
	}.Build()
	File_kira_basket_tx_proto = out.File
	file_kira_basket_tx_proto_rawDesc = nil
	file_kira_basket_tx_proto_goTypes = nil
	file_kira_basket_tx_proto_depIdxs = nil
}
