// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.1
// source: kira/custody/tx.proto

package types

import (
	_ "github.com/gogo/protobuf/gogoproto"
	v1beta1 "github.com/saiset-co/sai-interx-manager/proto-gen/cosmos/base/v1beta1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/anypb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MsgCreateCustodyRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address         []byte           `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	CustodySettings *CustodySettings `protobuf:"bytes,2,opt,name=custody_settings,json=custodySettings,proto3" json:"custody_settings,omitempty"`
	OldKey          string           `protobuf:"bytes,3,opt,name=old_key,json=oldKey,proto3" json:"old_key,omitempty"`
	NewKey          string           `protobuf:"bytes,4,opt,name=new_key,json=newKey,proto3" json:"new_key,omitempty"`
	NextAddress     string           `protobuf:"bytes,5,opt,name=next_address,json=nextAddress,proto3" json:"next_address,omitempty"`
	TargetAddress   string           `protobuf:"bytes,6,opt,name=target_address,json=targetAddress,proto3" json:"target_address,omitempty"`
}

func (x *MsgCreateCustodyRecord) Reset() {
	*x = MsgCreateCustodyRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_custody_tx_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCreateCustodyRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCreateCustodyRecord) ProtoMessage() {}

func (x *MsgCreateCustodyRecord) ProtoReflect() protoreflect.Message {
	mi := &file_kira_custody_tx_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgCreateCustodyRecord.ProtoReflect.Descriptor instead.
func (*MsgCreateCustodyRecord) Descriptor() ([]byte, []int) {
	return file_kira_custody_tx_proto_rawDescGZIP(), []int{0}
}

func (x *MsgCreateCustodyRecord) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *MsgCreateCustodyRecord) GetCustodySettings() *CustodySettings {
	if x != nil {
		return x.CustodySettings
	}
	return nil
}

func (x *MsgCreateCustodyRecord) GetOldKey() string {
	if x != nil {
		return x.OldKey
	}
	return ""
}

func (x *MsgCreateCustodyRecord) GetNewKey() string {
	if x != nil {
		return x.NewKey
	}
	return ""
}

func (x *MsgCreateCustodyRecord) GetNextAddress() string {
	if x != nil {
		return x.NextAddress
	}
	return ""
}

func (x *MsgCreateCustodyRecord) GetTargetAddress() string {
	if x != nil {
		return x.TargetAddress
	}
	return ""
}

type MsgDisableCustodyRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address       []byte `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	OldKey        string `protobuf:"bytes,2,opt,name=old_key,json=oldKey,proto3" json:"old_key,omitempty"`
	NewKey        string `protobuf:"bytes,3,opt,name=new_key,json=newKey,proto3" json:"new_key,omitempty"`
	NextAddress   string `protobuf:"bytes,4,opt,name=next_address,json=nextAddress,proto3" json:"next_address,omitempty"`
	TargetAddress string `protobuf:"bytes,5,opt,name=target_address,json=targetAddress,proto3" json:"target_address,omitempty"`
}

func (x *MsgDisableCustodyRecord) Reset() {
	*x = MsgDisableCustodyRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_custody_tx_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDisableCustodyRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDisableCustodyRecord) ProtoMessage() {}

func (x *MsgDisableCustodyRecord) ProtoReflect() protoreflect.Message {
	mi := &file_kira_custody_tx_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDisableCustodyRecord.ProtoReflect.Descriptor instead.
func (*MsgDisableCustodyRecord) Descriptor() ([]byte, []int) {
	return file_kira_custody_tx_proto_rawDescGZIP(), []int{1}
}

func (x *MsgDisableCustodyRecord) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *MsgDisableCustodyRecord) GetOldKey() string {
	if x != nil {
		return x.OldKey
	}
	return ""
}

func (x *MsgDisableCustodyRecord) GetNewKey() string {
	if x != nil {
		return x.NewKey
	}
	return ""
}

func (x *MsgDisableCustodyRecord) GetNextAddress() string {
	if x != nil {
		return x.NextAddress
	}
	return ""
}

func (x *MsgDisableCustodyRecord) GetTargetAddress() string {
	if x != nil {
		return x.TargetAddress
	}
	return ""
}

type MsgDropCustodyRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address       []byte `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	OldKey        string `protobuf:"bytes,2,opt,name=old_key,json=oldKey,proto3" json:"old_key,omitempty"`
	TargetAddress string `protobuf:"bytes,3,opt,name=target_address,json=targetAddress,proto3" json:"target_address,omitempty"`
}

func (x *MsgDropCustodyRecord) Reset() {
	*x = MsgDropCustodyRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_custody_tx_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDropCustodyRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDropCustodyRecord) ProtoMessage() {}

func (x *MsgDropCustodyRecord) ProtoReflect() protoreflect.Message {
	mi := &file_kira_custody_tx_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDropCustodyRecord.ProtoReflect.Descriptor instead.
func (*MsgDropCustodyRecord) Descriptor() ([]byte, []int) {
	return file_kira_custody_tx_proto_rawDescGZIP(), []int{2}
}

func (x *MsgDropCustodyRecord) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *MsgDropCustodyRecord) GetOldKey() string {
	if x != nil {
		return x.OldKey
	}
	return ""
}

func (x *MsgDropCustodyRecord) GetTargetAddress() string {
	if x != nil {
		return x.TargetAddress
	}
	return ""
}

type MsgAddToCustodyCustodians struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address       []byte   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	AddAddress    [][]byte `protobuf:"bytes,2,rep,name=add_address,json=addAddress,proto3" json:"add_address,omitempty"`
	OldKey        string   `protobuf:"bytes,3,opt,name=old_key,json=oldKey,proto3" json:"old_key,omitempty"`
	NewKey        string   `protobuf:"bytes,4,opt,name=new_key,json=newKey,proto3" json:"new_key,omitempty"`
	NextAddress   string   `protobuf:"bytes,5,opt,name=next_address,json=nextAddress,proto3" json:"next_address,omitempty"`
	TargetAddress string   `protobuf:"bytes,6,opt,name=target_address,json=targetAddress,proto3" json:"target_address,omitempty"`
}

func (x *MsgAddToCustodyCustodians) Reset() {
	*x = MsgAddToCustodyCustodians{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_custody_tx_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAddToCustodyCustodians) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAddToCustodyCustodians) ProtoMessage() {}

func (x *MsgAddToCustodyCustodians) ProtoReflect() protoreflect.Message {
	mi := &file_kira_custody_tx_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgAddToCustodyCustodians.ProtoReflect.Descriptor instead.
func (*MsgAddToCustodyCustodians) Descriptor() ([]byte, []int) {
	return file_kira_custody_tx_proto_rawDescGZIP(), []int{3}
}

func (x *MsgAddToCustodyCustodians) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *MsgAddToCustodyCustodians) GetAddAddress() [][]byte {
	if x != nil {
		return x.AddAddress
	}
	return nil
}

func (x *MsgAddToCustodyCustodians) GetOldKey() string {
	if x != nil {
		return x.OldKey
	}
	return ""
}

func (x *MsgAddToCustodyCustodians) GetNewKey() string {
	if x != nil {
		return x.NewKey
	}
	return ""
}

func (x *MsgAddToCustodyCustodians) GetNextAddress() string {
	if x != nil {
		return x.NextAddress
	}
	return ""
}

func (x *MsgAddToCustodyCustodians) GetTargetAddress() string {
	if x != nil {
		return x.TargetAddress
	}
	return ""
}

type MsgRemoveFromCustodyCustodians struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address       []byte `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	RemoveAddress []byte `protobuf:"bytes,2,opt,name=remove_address,json=removeAddress,proto3" json:"remove_address,omitempty"`
	OldKey        string `protobuf:"bytes,3,opt,name=old_key,json=oldKey,proto3" json:"old_key,omitempty"`
	NewKey        string `protobuf:"bytes,4,opt,name=new_key,json=newKey,proto3" json:"new_key,omitempty"`
	NextAddress   string `protobuf:"bytes,5,opt,name=next_address,json=nextAddress,proto3" json:"next_address,omitempty"`
	TargetAddress string `protobuf:"bytes,6,opt,name=target_address,json=targetAddress,proto3" json:"target_address,omitempty"`
}

func (x *MsgRemoveFromCustodyCustodians) Reset() {
	*x = MsgRemoveFromCustodyCustodians{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_custody_tx_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRemoveFromCustodyCustodians) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRemoveFromCustodyCustodians) ProtoMessage() {}

func (x *MsgRemoveFromCustodyCustodians) ProtoReflect() protoreflect.Message {
	mi := &file_kira_custody_tx_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRemoveFromCustodyCustodians.ProtoReflect.Descriptor instead.
func (*MsgRemoveFromCustodyCustodians) Descriptor() ([]byte, []int) {
	return file_kira_custody_tx_proto_rawDescGZIP(), []int{4}
}

func (x *MsgRemoveFromCustodyCustodians) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *MsgRemoveFromCustodyCustodians) GetRemoveAddress() []byte {
	if x != nil {
		return x.RemoveAddress
	}
	return nil
}

func (x *MsgRemoveFromCustodyCustodians) GetOldKey() string {
	if x != nil {
		return x.OldKey
	}
	return ""
}

func (x *MsgRemoveFromCustodyCustodians) GetNewKey() string {
	if x != nil {
		return x.NewKey
	}
	return ""
}

func (x *MsgRemoveFromCustodyCustodians) GetNextAddress() string {
	if x != nil {
		return x.NextAddress
	}
	return ""
}

func (x *MsgRemoveFromCustodyCustodians) GetTargetAddress() string {
	if x != nil {
		return x.TargetAddress
	}
	return ""
}

type MsgDropCustodyCustodians struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address       []byte `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	OldKey        string `protobuf:"bytes,2,opt,name=old_key,json=oldKey,proto3" json:"old_key,omitempty"`
	NewKey        string `protobuf:"bytes,3,opt,name=new_key,json=newKey,proto3" json:"new_key,omitempty"`
	NextAddress   string `protobuf:"bytes,4,opt,name=next_address,json=nextAddress,proto3" json:"next_address,omitempty"`
	TargetAddress string `protobuf:"bytes,5,opt,name=target_address,json=targetAddress,proto3" json:"target_address,omitempty"`
}

func (x *MsgDropCustodyCustodians) Reset() {
	*x = MsgDropCustodyCustodians{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_custody_tx_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDropCustodyCustodians) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDropCustodyCustodians) ProtoMessage() {}

func (x *MsgDropCustodyCustodians) ProtoReflect() protoreflect.Message {
	mi := &file_kira_custody_tx_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDropCustodyCustodians.ProtoReflect.Descriptor instead.
func (*MsgDropCustodyCustodians) Descriptor() ([]byte, []int) {
	return file_kira_custody_tx_proto_rawDescGZIP(), []int{5}
}

func (x *MsgDropCustodyCustodians) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *MsgDropCustodyCustodians) GetOldKey() string {
	if x != nil {
		return x.OldKey
	}
	return ""
}

func (x *MsgDropCustodyCustodians) GetNewKey() string {
	if x != nil {
		return x.NewKey
	}
	return ""
}

func (x *MsgDropCustodyCustodians) GetNextAddress() string {
	if x != nil {
		return x.NextAddress
	}
	return ""
}

func (x *MsgDropCustodyCustodians) GetTargetAddress() string {
	if x != nil {
		return x.TargetAddress
	}
	return ""
}

type MsgAddToCustodyWhiteList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address       []byte   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	AddAddress    [][]byte `protobuf:"bytes,2,rep,name=add_address,json=addAddress,proto3" json:"add_address,omitempty"`
	OldKey        string   `protobuf:"bytes,3,opt,name=old_key,json=oldKey,proto3" json:"old_key,omitempty"`
	NewKey        string   `protobuf:"bytes,4,opt,name=new_key,json=newKey,proto3" json:"new_key,omitempty"`
	NextAddress   string   `protobuf:"bytes,5,opt,name=next_address,json=nextAddress,proto3" json:"next_address,omitempty"`
	TargetAddress string   `protobuf:"bytes,6,opt,name=target_address,json=targetAddress,proto3" json:"target_address,omitempty"`
}

func (x *MsgAddToCustodyWhiteList) Reset() {
	*x = MsgAddToCustodyWhiteList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_custody_tx_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAddToCustodyWhiteList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAddToCustodyWhiteList) ProtoMessage() {}

func (x *MsgAddToCustodyWhiteList) ProtoReflect() protoreflect.Message {
	mi := &file_kira_custody_tx_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgAddToCustodyWhiteList.ProtoReflect.Descriptor instead.
func (*MsgAddToCustodyWhiteList) Descriptor() ([]byte, []int) {
	return file_kira_custody_tx_proto_rawDescGZIP(), []int{6}
}

func (x *MsgAddToCustodyWhiteList) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *MsgAddToCustodyWhiteList) GetAddAddress() [][]byte {
	if x != nil {
		return x.AddAddress
	}
	return nil
}

func (x *MsgAddToCustodyWhiteList) GetOldKey() string {
	if x != nil {
		return x.OldKey
	}
	return ""
}

func (x *MsgAddToCustodyWhiteList) GetNewKey() string {
	if x != nil {
		return x.NewKey
	}
	return ""
}

func (x *MsgAddToCustodyWhiteList) GetNextAddress() string {
	if x != nil {
		return x.NextAddress
	}
	return ""
}

func (x *MsgAddToCustodyWhiteList) GetTargetAddress() string {
	if x != nil {
		return x.TargetAddress
	}
	return ""
}

type MsgRemoveFromCustodyWhiteList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address       []byte `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	RemoveAddress []byte `protobuf:"bytes,2,opt,name=remove_address,json=removeAddress,proto3" json:"remove_address,omitempty"`
	OldKey        string `protobuf:"bytes,3,opt,name=old_key,json=oldKey,proto3" json:"old_key,omitempty"`
	NewKey        string `protobuf:"bytes,4,opt,name=new_key,json=newKey,proto3" json:"new_key,omitempty"`
	NextAddress   string `protobuf:"bytes,5,opt,name=next_address,json=nextAddress,proto3" json:"next_address,omitempty"`
	TargetAddress string `protobuf:"bytes,6,opt,name=target_address,json=targetAddress,proto3" json:"target_address,omitempty"`
}

func (x *MsgRemoveFromCustodyWhiteList) Reset() {
	*x = MsgRemoveFromCustodyWhiteList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_custody_tx_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRemoveFromCustodyWhiteList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRemoveFromCustodyWhiteList) ProtoMessage() {}

func (x *MsgRemoveFromCustodyWhiteList) ProtoReflect() protoreflect.Message {
	mi := &file_kira_custody_tx_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRemoveFromCustodyWhiteList.ProtoReflect.Descriptor instead.
func (*MsgRemoveFromCustodyWhiteList) Descriptor() ([]byte, []int) {
	return file_kira_custody_tx_proto_rawDescGZIP(), []int{7}
}

func (x *MsgRemoveFromCustodyWhiteList) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *MsgRemoveFromCustodyWhiteList) GetRemoveAddress() []byte {
	if x != nil {
		return x.RemoveAddress
	}
	return nil
}

func (x *MsgRemoveFromCustodyWhiteList) GetOldKey() string {
	if x != nil {
		return x.OldKey
	}
	return ""
}

func (x *MsgRemoveFromCustodyWhiteList) GetNewKey() string {
	if x != nil {
		return x.NewKey
	}
	return ""
}

func (x *MsgRemoveFromCustodyWhiteList) GetNextAddress() string {
	if x != nil {
		return x.NextAddress
	}
	return ""
}

func (x *MsgRemoveFromCustodyWhiteList) GetTargetAddress() string {
	if x != nil {
		return x.TargetAddress
	}
	return ""
}

type MsgDropCustodyWhiteList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address       []byte `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	OldKey        string `protobuf:"bytes,3,opt,name=old_key,json=oldKey,proto3" json:"old_key,omitempty"`
	NewKey        string `protobuf:"bytes,4,opt,name=new_key,json=newKey,proto3" json:"new_key,omitempty"`
	NextAddress   string `protobuf:"bytes,5,opt,name=next_address,json=nextAddress,proto3" json:"next_address,omitempty"`
	TargetAddress string `protobuf:"bytes,6,opt,name=target_address,json=targetAddress,proto3" json:"target_address,omitempty"`
}

func (x *MsgDropCustodyWhiteList) Reset() {
	*x = MsgDropCustodyWhiteList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_custody_tx_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDropCustodyWhiteList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDropCustodyWhiteList) ProtoMessage() {}

func (x *MsgDropCustodyWhiteList) ProtoReflect() protoreflect.Message {
	mi := &file_kira_custody_tx_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDropCustodyWhiteList.ProtoReflect.Descriptor instead.
func (*MsgDropCustodyWhiteList) Descriptor() ([]byte, []int) {
	return file_kira_custody_tx_proto_rawDescGZIP(), []int{8}
}

func (x *MsgDropCustodyWhiteList) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *MsgDropCustodyWhiteList) GetOldKey() string {
	if x != nil {
		return x.OldKey
	}
	return ""
}

func (x *MsgDropCustodyWhiteList) GetNewKey() string {
	if x != nil {
		return x.NewKey
	}
	return ""
}

func (x *MsgDropCustodyWhiteList) GetNextAddress() string {
	if x != nil {
		return x.NextAddress
	}
	return ""
}

func (x *MsgDropCustodyWhiteList) GetTargetAddress() string {
	if x != nil {
		return x.TargetAddress
	}
	return ""
}

type MsgAddToCustodyLimits struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address       []byte `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Denom         string `protobuf:"bytes,2,opt,name=denom,proto3" json:"denom,omitempty"`
	Amount        uint64 `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Limit         string `protobuf:"bytes,4,opt,name=limit,proto3" json:"limit,omitempty"`
	OldKey        string `protobuf:"bytes,5,opt,name=old_key,json=oldKey,proto3" json:"old_key,omitempty"`
	NewKey        string `protobuf:"bytes,6,opt,name=new_key,json=newKey,proto3" json:"new_key,omitempty"`
	NextAddress   string `protobuf:"bytes,7,opt,name=next_address,json=nextAddress,proto3" json:"next_address,omitempty"`
	TargetAddress string `protobuf:"bytes,8,opt,name=target_address,json=targetAddress,proto3" json:"target_address,omitempty"`
}

func (x *MsgAddToCustodyLimits) Reset() {
	*x = MsgAddToCustodyLimits{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_custody_tx_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAddToCustodyLimits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAddToCustodyLimits) ProtoMessage() {}

func (x *MsgAddToCustodyLimits) ProtoReflect() protoreflect.Message {
	mi := &file_kira_custody_tx_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgAddToCustodyLimits.ProtoReflect.Descriptor instead.
func (*MsgAddToCustodyLimits) Descriptor() ([]byte, []int) {
	return file_kira_custody_tx_proto_rawDescGZIP(), []int{9}
}

func (x *MsgAddToCustodyLimits) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *MsgAddToCustodyLimits) GetDenom() string {
	if x != nil {
		return x.Denom
	}
	return ""
}

func (x *MsgAddToCustodyLimits) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *MsgAddToCustodyLimits) GetLimit() string {
	if x != nil {
		return x.Limit
	}
	return ""
}

func (x *MsgAddToCustodyLimits) GetOldKey() string {
	if x != nil {
		return x.OldKey
	}
	return ""
}

func (x *MsgAddToCustodyLimits) GetNewKey() string {
	if x != nil {
		return x.NewKey
	}
	return ""
}

func (x *MsgAddToCustodyLimits) GetNextAddress() string {
	if x != nil {
		return x.NextAddress
	}
	return ""
}

func (x *MsgAddToCustodyLimits) GetTargetAddress() string {
	if x != nil {
		return x.TargetAddress
	}
	return ""
}

type MsgRemoveFromCustodyLimits struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address       []byte `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Denom         string `protobuf:"bytes,2,opt,name=denom,proto3" json:"denom,omitempty"`
	OldKey        string `protobuf:"bytes,3,opt,name=old_key,json=oldKey,proto3" json:"old_key,omitempty"`
	NewKey        string `protobuf:"bytes,4,opt,name=new_key,json=newKey,proto3" json:"new_key,omitempty"`
	NextAddress   string `protobuf:"bytes,5,opt,name=next_address,json=nextAddress,proto3" json:"next_address,omitempty"`
	TargetAddress string `protobuf:"bytes,6,opt,name=target_address,json=targetAddress,proto3" json:"target_address,omitempty"`
}

func (x *MsgRemoveFromCustodyLimits) Reset() {
	*x = MsgRemoveFromCustodyLimits{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_custody_tx_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRemoveFromCustodyLimits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRemoveFromCustodyLimits) ProtoMessage() {}

func (x *MsgRemoveFromCustodyLimits) ProtoReflect() protoreflect.Message {
	mi := &file_kira_custody_tx_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRemoveFromCustodyLimits.ProtoReflect.Descriptor instead.
func (*MsgRemoveFromCustodyLimits) Descriptor() ([]byte, []int) {
	return file_kira_custody_tx_proto_rawDescGZIP(), []int{10}
}

func (x *MsgRemoveFromCustodyLimits) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *MsgRemoveFromCustodyLimits) GetDenom() string {
	if x != nil {
		return x.Denom
	}
	return ""
}

func (x *MsgRemoveFromCustodyLimits) GetOldKey() string {
	if x != nil {
		return x.OldKey
	}
	return ""
}

func (x *MsgRemoveFromCustodyLimits) GetNewKey() string {
	if x != nil {
		return x.NewKey
	}
	return ""
}

func (x *MsgRemoveFromCustodyLimits) GetNextAddress() string {
	if x != nil {
		return x.NextAddress
	}
	return ""
}

func (x *MsgRemoveFromCustodyLimits) GetTargetAddress() string {
	if x != nil {
		return x.TargetAddress
	}
	return ""
}

type MsgDropCustodyLimits struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address       []byte `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	OldKey        string `protobuf:"bytes,2,opt,name=old_key,json=oldKey,proto3" json:"old_key,omitempty"`
	NewKey        string `protobuf:"bytes,3,opt,name=new_key,json=newKey,proto3" json:"new_key,omitempty"`
	NextAddress   string `protobuf:"bytes,4,opt,name=next_address,json=nextAddress,proto3" json:"next_address,omitempty"`
	TargetAddress string `protobuf:"bytes,5,opt,name=target_address,json=targetAddress,proto3" json:"target_address,omitempty"`
}

func (x *MsgDropCustodyLimits) Reset() {
	*x = MsgDropCustodyLimits{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_custody_tx_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDropCustodyLimits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDropCustodyLimits) ProtoMessage() {}

func (x *MsgDropCustodyLimits) ProtoReflect() protoreflect.Message {
	mi := &file_kira_custody_tx_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDropCustodyLimits.ProtoReflect.Descriptor instead.
func (*MsgDropCustodyLimits) Descriptor() ([]byte, []int) {
	return file_kira_custody_tx_proto_rawDescGZIP(), []int{11}
}

func (x *MsgDropCustodyLimits) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *MsgDropCustodyLimits) GetOldKey() string {
	if x != nil {
		return x.OldKey
	}
	return ""
}

func (x *MsgDropCustodyLimits) GetNewKey() string {
	if x != nil {
		return x.NewKey
	}
	return ""
}

func (x *MsgDropCustodyLimits) GetNextAddress() string {
	if x != nil {
		return x.NextAddress
	}
	return ""
}

func (x *MsgDropCustodyLimits) GetTargetAddress() string {
	if x != nil {
		return x.TargetAddress
	}
	return ""
}

type MsgApproveCustodyTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromAddress   []byte `protobuf:"bytes,1,opt,name=from_address,json=fromAddress,proto3" json:"from_address,omitempty"`
	TargetAddress []byte `protobuf:"bytes,2,opt,name=target_address,json=targetAddress,proto3" json:"target_address,omitempty"`
	Hash          string `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *MsgApproveCustodyTransaction) Reset() {
	*x = MsgApproveCustodyTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_custody_tx_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgApproveCustodyTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgApproveCustodyTransaction) ProtoMessage() {}

func (x *MsgApproveCustodyTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_kira_custody_tx_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgApproveCustodyTransaction.ProtoReflect.Descriptor instead.
func (*MsgApproveCustodyTransaction) Descriptor() ([]byte, []int) {
	return file_kira_custody_tx_proto_rawDescGZIP(), []int{12}
}

func (x *MsgApproveCustodyTransaction) GetFromAddress() []byte {
	if x != nil {
		return x.FromAddress
	}
	return nil
}

func (x *MsgApproveCustodyTransaction) GetTargetAddress() []byte {
	if x != nil {
		return x.TargetAddress
	}
	return nil
}

func (x *MsgApproveCustodyTransaction) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type MsgDeclineCustodyTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromAddress   []byte `protobuf:"bytes,1,opt,name=from_address,json=fromAddress,proto3" json:"from_address,omitempty"`
	TargetAddress []byte `protobuf:"bytes,2,opt,name=target_address,json=targetAddress,proto3" json:"target_address,omitempty"`
	Hash          string `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *MsgDeclineCustodyTransaction) Reset() {
	*x = MsgDeclineCustodyTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_custody_tx_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDeclineCustodyTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDeclineCustodyTransaction) ProtoMessage() {}

func (x *MsgDeclineCustodyTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_kira_custody_tx_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDeclineCustodyTransaction.ProtoReflect.Descriptor instead.
func (*MsgDeclineCustodyTransaction) Descriptor() ([]byte, []int) {
	return file_kira_custody_tx_proto_rawDescGZIP(), []int{13}
}

func (x *MsgDeclineCustodyTransaction) GetFromAddress() []byte {
	if x != nil {
		return x.FromAddress
	}
	return nil
}

func (x *MsgDeclineCustodyTransaction) GetTargetAddress() []byte {
	if x != nil {
		return x.TargetAddress
	}
	return nil
}

func (x *MsgDeclineCustodyTransaction) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type MsgSend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromAddress string          `protobuf:"bytes,1,opt,name=from_address,json=fromAddress,proto3" json:"from_address,omitempty"`
	ToAddress   string          `protobuf:"bytes,2,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"`
	Amount      []*v1beta1.Coin `protobuf:"bytes,3,rep,name=amount,proto3" json:"amount,omitempty"`
	Password    string          `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	Reward      []*v1beta1.Coin `protobuf:"bytes,5,rep,name=reward,proto3" json:"reward,omitempty"`
}

func (x *MsgSend) Reset() {
	*x = MsgSend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_custody_tx_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgSend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgSend) ProtoMessage() {}

func (x *MsgSend) ProtoReflect() protoreflect.Message {
	mi := &file_kira_custody_tx_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgSend.ProtoReflect.Descriptor instead.
func (*MsgSend) Descriptor() ([]byte, []int) {
	return file_kira_custody_tx_proto_rawDescGZIP(), []int{14}
}

func (x *MsgSend) GetFromAddress() string {
	if x != nil {
		return x.FromAddress
	}
	return ""
}

func (x *MsgSend) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *MsgSend) GetAmount() []*v1beta1.Coin {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *MsgSend) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *MsgSend) GetReward() []*v1beta1.Coin {
	if x != nil {
		return x.Reward
	}
	return nil
}

type TransactionRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transaction *MsgSend `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	Votes       uint64   `protobuf:"varint,2,opt,name=votes,proto3" json:"votes,omitempty"`
	Confirmed   bool     `protobuf:"varint,3,opt,name=confirmed,proto3" json:"confirmed,omitempty"`
}

func (x *TransactionRecord) Reset() {
	*x = TransactionRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_custody_tx_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionRecord) ProtoMessage() {}

func (x *TransactionRecord) ProtoReflect() protoreflect.Message {
	mi := &file_kira_custody_tx_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionRecord.ProtoReflect.Descriptor instead.
func (*TransactionRecord) Descriptor() ([]byte, []int) {
	return file_kira_custody_tx_proto_rawDescGZIP(), []int{15}
}

func (x *TransactionRecord) GetTransaction() *MsgSend {
	if x != nil {
		return x.Transaction
	}
	return nil
}

func (x *TransactionRecord) GetVotes() uint64 {
	if x != nil {
		return x.Votes
	}
	return 0
}

func (x *TransactionRecord) GetConfirmed() bool {
	if x != nil {
		return x.Confirmed
	}
	return false
}

type TransactionPool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Record map[string]*TransactionRecord `protobuf:"bytes,2,rep,name=record,proto3" json:"record,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TransactionPool) Reset() {
	*x = TransactionPool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_custody_tx_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionPool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionPool) ProtoMessage() {}

func (x *TransactionPool) ProtoReflect() protoreflect.Message {
	mi := &file_kira_custody_tx_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionPool.ProtoReflect.Descriptor instead.
func (*TransactionPool) Descriptor() ([]byte, []int) {
	return file_kira_custody_tx_proto_rawDescGZIP(), []int{16}
}

func (x *TransactionPool) GetRecord() map[string]*TransactionRecord {
	if x != nil {
		return x.Record
	}
	return nil
}

type CustodyPool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address      []byte           `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Transactions *TransactionPool `protobuf:"bytes,2,opt,name=transactions,proto3" json:"transactions,omitempty"`
}

func (x *CustodyPool) Reset() {
	*x = CustodyPool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_custody_tx_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustodyPool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustodyPool) ProtoMessage() {}

func (x *CustodyPool) ProtoReflect() protoreflect.Message {
	mi := &file_kira_custody_tx_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustodyPool.ProtoReflect.Descriptor instead.
func (*CustodyPool) Descriptor() ([]byte, []int) {
	return file_kira_custody_tx_proto_rawDescGZIP(), []int{17}
}

func (x *CustodyPool) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *CustodyPool) GetTransactions() *TransactionPool {
	if x != nil {
		return x.Transactions
	}
	return nil
}

type MsgPasswordConfirmTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromAddress   []byte `protobuf:"bytes,1,opt,name=from_address,json=fromAddress,proto3" json:"from_address,omitempty"`
	SenderAddress []byte `protobuf:"bytes,2,opt,name=sender_address,json=senderAddress,proto3" json:"sender_address,omitempty"`
	Hash          string `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	Password      string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *MsgPasswordConfirmTransaction) Reset() {
	*x = MsgPasswordConfirmTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_custody_tx_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgPasswordConfirmTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgPasswordConfirmTransaction) ProtoMessage() {}

func (x *MsgPasswordConfirmTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_kira_custody_tx_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgPasswordConfirmTransaction.ProtoReflect.Descriptor instead.
func (*MsgPasswordConfirmTransaction) Descriptor() ([]byte, []int) {
	return file_kira_custody_tx_proto_rawDescGZIP(), []int{18}
}

func (x *MsgPasswordConfirmTransaction) GetFromAddress() []byte {
	if x != nil {
		return x.FromAddress
	}
	return nil
}

func (x *MsgPasswordConfirmTransaction) GetSenderAddress() []byte {
	if x != nil {
		return x.SenderAddress
	}
	return nil
}

func (x *MsgPasswordConfirmTransaction) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *MsgPasswordConfirmTransaction) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type MsgCreateCustodyRecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgCreateCustodyRecordResponse) Reset() {
	*x = MsgCreateCustodyRecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_custody_tx_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCreateCustodyRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCreateCustodyRecordResponse) ProtoMessage() {}

func (x *MsgCreateCustodyRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_custody_tx_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgCreateCustodyRecordResponse.ProtoReflect.Descriptor instead.
func (*MsgCreateCustodyRecordResponse) Descriptor() ([]byte, []int) {
	return file_kira_custody_tx_proto_rawDescGZIP(), []int{19}
}

type MsgDisableCustodyRecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgDisableCustodyRecordResponse) Reset() {
	*x = MsgDisableCustodyRecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_custody_tx_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDisableCustodyRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDisableCustodyRecordResponse) ProtoMessage() {}

func (x *MsgDisableCustodyRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_custody_tx_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDisableCustodyRecordResponse.ProtoReflect.Descriptor instead.
func (*MsgDisableCustodyRecordResponse) Descriptor() ([]byte, []int) {
	return file_kira_custody_tx_proto_rawDescGZIP(), []int{20}
}

type MsgDropCustodyRecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgDropCustodyRecordResponse) Reset() {
	*x = MsgDropCustodyRecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_custody_tx_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDropCustodyRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDropCustodyRecordResponse) ProtoMessage() {}

func (x *MsgDropCustodyRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_custody_tx_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDropCustodyRecordResponse.ProtoReflect.Descriptor instead.
func (*MsgDropCustodyRecordResponse) Descriptor() ([]byte, []int) {
	return file_kira_custody_tx_proto_rawDescGZIP(), []int{21}
}

type MsgAddToCustodyCustodiansResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgAddToCustodyCustodiansResponse) Reset() {
	*x = MsgAddToCustodyCustodiansResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_custody_tx_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAddToCustodyCustodiansResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAddToCustodyCustodiansResponse) ProtoMessage() {}

func (x *MsgAddToCustodyCustodiansResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_custody_tx_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgAddToCustodyCustodiansResponse.ProtoReflect.Descriptor instead.
func (*MsgAddToCustodyCustodiansResponse) Descriptor() ([]byte, []int) {
	return file_kira_custody_tx_proto_rawDescGZIP(), []int{22}
}

type MsgRemoveFromCustodyCustodiansResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgRemoveFromCustodyCustodiansResponse) Reset() {
	*x = MsgRemoveFromCustodyCustodiansResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_custody_tx_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRemoveFromCustodyCustodiansResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRemoveFromCustodyCustodiansResponse) ProtoMessage() {}

func (x *MsgRemoveFromCustodyCustodiansResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_custody_tx_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRemoveFromCustodyCustodiansResponse.ProtoReflect.Descriptor instead.
func (*MsgRemoveFromCustodyCustodiansResponse) Descriptor() ([]byte, []int) {
	return file_kira_custody_tx_proto_rawDescGZIP(), []int{23}
}

type MsgDropCustodyCustodiansResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgDropCustodyCustodiansResponse) Reset() {
	*x = MsgDropCustodyCustodiansResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_custody_tx_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDropCustodyCustodiansResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDropCustodyCustodiansResponse) ProtoMessage() {}

func (x *MsgDropCustodyCustodiansResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_custody_tx_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDropCustodyCustodiansResponse.ProtoReflect.Descriptor instead.
func (*MsgDropCustodyCustodiansResponse) Descriptor() ([]byte, []int) {
	return file_kira_custody_tx_proto_rawDescGZIP(), []int{24}
}

type MsgAddToCustodyWhiteListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgAddToCustodyWhiteListResponse) Reset() {
	*x = MsgAddToCustodyWhiteListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_custody_tx_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAddToCustodyWhiteListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAddToCustodyWhiteListResponse) ProtoMessage() {}

func (x *MsgAddToCustodyWhiteListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_custody_tx_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgAddToCustodyWhiteListResponse.ProtoReflect.Descriptor instead.
func (*MsgAddToCustodyWhiteListResponse) Descriptor() ([]byte, []int) {
	return file_kira_custody_tx_proto_rawDescGZIP(), []int{25}
}

type MsgRemoveFromCustodyWhiteListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgRemoveFromCustodyWhiteListResponse) Reset() {
	*x = MsgRemoveFromCustodyWhiteListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_custody_tx_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRemoveFromCustodyWhiteListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRemoveFromCustodyWhiteListResponse) ProtoMessage() {}

func (x *MsgRemoveFromCustodyWhiteListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_custody_tx_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRemoveFromCustodyWhiteListResponse.ProtoReflect.Descriptor instead.
func (*MsgRemoveFromCustodyWhiteListResponse) Descriptor() ([]byte, []int) {
	return file_kira_custody_tx_proto_rawDescGZIP(), []int{26}
}

type MsgDropCustodyWhiteListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgDropCustodyWhiteListResponse) Reset() {
	*x = MsgDropCustodyWhiteListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_custody_tx_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDropCustodyWhiteListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDropCustodyWhiteListResponse) ProtoMessage() {}

func (x *MsgDropCustodyWhiteListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_custody_tx_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDropCustodyWhiteListResponse.ProtoReflect.Descriptor instead.
func (*MsgDropCustodyWhiteListResponse) Descriptor() ([]byte, []int) {
	return file_kira_custody_tx_proto_rawDescGZIP(), []int{27}
}

type MsgAddToCustodyLimitsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgAddToCustodyLimitsResponse) Reset() {
	*x = MsgAddToCustodyLimitsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_custody_tx_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAddToCustodyLimitsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAddToCustodyLimitsResponse) ProtoMessage() {}

func (x *MsgAddToCustodyLimitsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_custody_tx_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgAddToCustodyLimitsResponse.ProtoReflect.Descriptor instead.
func (*MsgAddToCustodyLimitsResponse) Descriptor() ([]byte, []int) {
	return file_kira_custody_tx_proto_rawDescGZIP(), []int{28}
}

type MsgRemoveFromCustodyLimitsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgRemoveFromCustodyLimitsResponse) Reset() {
	*x = MsgRemoveFromCustodyLimitsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_custody_tx_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRemoveFromCustodyLimitsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRemoveFromCustodyLimitsResponse) ProtoMessage() {}

func (x *MsgRemoveFromCustodyLimitsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_custody_tx_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRemoveFromCustodyLimitsResponse.ProtoReflect.Descriptor instead.
func (*MsgRemoveFromCustodyLimitsResponse) Descriptor() ([]byte, []int) {
	return file_kira_custody_tx_proto_rawDescGZIP(), []int{29}
}

type MsgDropCustodyLimitsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgDropCustodyLimitsResponse) Reset() {
	*x = MsgDropCustodyLimitsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_custody_tx_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDropCustodyLimitsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDropCustodyLimitsResponse) ProtoMessage() {}

func (x *MsgDropCustodyLimitsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_custody_tx_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDropCustodyLimitsResponse.ProtoReflect.Descriptor instead.
func (*MsgDropCustodyLimitsResponse) Descriptor() ([]byte, []int) {
	return file_kira_custody_tx_proto_rawDescGZIP(), []int{30}
}

type MsgApproveCustodyTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgApproveCustodyTransactionResponse) Reset() {
	*x = MsgApproveCustodyTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_custody_tx_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgApproveCustodyTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgApproveCustodyTransactionResponse) ProtoMessage() {}

func (x *MsgApproveCustodyTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_custody_tx_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgApproveCustodyTransactionResponse.ProtoReflect.Descriptor instead.
func (*MsgApproveCustodyTransactionResponse) Descriptor() ([]byte, []int) {
	return file_kira_custody_tx_proto_rawDescGZIP(), []int{31}
}

type MsgDeclineCustodyTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgDeclineCustodyTransactionResponse) Reset() {
	*x = MsgDeclineCustodyTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_custody_tx_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDeclineCustodyTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDeclineCustodyTransactionResponse) ProtoMessage() {}

func (x *MsgDeclineCustodyTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_custody_tx_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDeclineCustodyTransactionResponse.ProtoReflect.Descriptor instead.
func (*MsgDeclineCustodyTransactionResponse) Descriptor() ([]byte, []int) {
	return file_kira_custody_tx_proto_rawDescGZIP(), []int{32}
}

type MsgSendResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgSendResponse) Reset() {
	*x = MsgSendResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_custody_tx_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgSendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgSendResponse) ProtoMessage() {}

func (x *MsgSendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_custody_tx_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgSendResponse.ProtoReflect.Descriptor instead.
func (*MsgSendResponse) Descriptor() ([]byte, []int) {
	return file_kira_custody_tx_proto_rawDescGZIP(), []int{33}
}

type MsgPasswordConfirmTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgPasswordConfirmTransactionResponse) Reset() {
	*x = MsgPasswordConfirmTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_custody_tx_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgPasswordConfirmTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgPasswordConfirmTransactionResponse) ProtoMessage() {}

func (x *MsgPasswordConfirmTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_custody_tx_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgPasswordConfirmTransactionResponse.ProtoReflect.Descriptor instead.
func (*MsgPasswordConfirmTransactionResponse) Descriptor() ([]byte, []int) {
	return file_kira_custody_tx_proto_rawDescGZIP(), []int{34}
}

var File_kira_custody_tx_proto protoreflect.FileDescriptor

var file_kira_custody_tx_proto_rawDesc = []byte{
	0x0a, 0x15, 0x6b, 0x69, 0x72, 0x61, 0x2f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x2f, 0x74,
	0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x64, 0x79, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x6b, 0x69,
	0x72, 0x61, 0x2f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x2f, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x64, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x62, 0x61, 0x73, 0x65,
	0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xcd, 0x02, 0x0a, 0x16, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x5d,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42,
	0x43, 0xf2, 0xde, 0x1f, 0x0e, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x22, 0xfa, 0xde, 0x1f, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d,
	0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x4e, 0x0a,
	0x10, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0f, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x64, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x17, 0x0a,
	0x07, 0x6f, 0x6c, 0x64, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6f, 0x6c, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x65, 0x77, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x65, 0x77, 0x4b, 0x65, 0x79, 0x12,
	0x21, 0x0a, 0x0c, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x3a, 0x08, 0x88, 0xa0, 0x1f, 0x00, 0xe8,
	0xa0, 0x1f, 0x00, 0x22, 0xfe, 0x01, 0x0a, 0x17, 0x4d, 0x73, 0x67, 0x44, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12,
	0x5d, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x42, 0x43, 0xf2, 0xde, 0x1f, 0x0e, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x22, 0xfa, 0xde, 0x1f, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x17,
	0x0a, 0x07, 0x6f, 0x6c, 0x64, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6f, 0x6c, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x65, 0x77, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x65, 0x77, 0x4b, 0x65, 0x79,
	0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x3a, 0x08, 0x88, 0xa0, 0x1f, 0x00,
	0xe8, 0xa0, 0x1f, 0x00, 0x22, 0xbf, 0x01, 0x0a, 0x14, 0x4d, 0x73, 0x67, 0x44, 0x72, 0x6f, 0x70,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x5d, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x43,
	0xf2, 0xde, 0x1f, 0x0e, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x22, 0xfa, 0xde, 0x1f, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73,
	0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x17, 0x0a, 0x07,
	0x6f, 0x6c, 0x64, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f,
	0x6c, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x3a, 0x08, 0x88, 0xa0,
	0x1f, 0x00, 0xe8, 0xa0, 0x1f, 0x00, 0x22, 0xe6, 0x02, 0x0a, 0x19, 0x4d, 0x73, 0x67, 0x41, 0x64,
	0x64, 0x54, 0x6f, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x64,
	0x69, 0x61, 0x6e, 0x73, 0x12, 0x5d, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x43, 0xf2, 0xde, 0x1f, 0x0e, 0x79, 0x61, 0x6d, 0x6c, 0x3a,
	0x22, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xfa, 0xde, 0x1f, 0x2d, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x41, 0x63, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x64, 0x0a, 0x0b, 0x61, 0x64, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x42, 0x43, 0xf2, 0xde, 0x1f, 0x0e, 0x79, 0x61,
	0x6d, 0x6c, 0x3a, 0x22, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xfa, 0xde, 0x1f, 0x2d,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0a, 0x61,
	0x64, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x6c, 0x64,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x6c, 0x64, 0x4b,
	0x65, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x65, 0x77, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x65, 0x77, 0x4b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x6e,
	0x65, 0x78, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x25,
	0x0a, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x3a, 0x08, 0x88, 0xa0, 0x1f, 0x00, 0xe8, 0xa0, 0x1f, 0x00, 0x22,
	0xf1, 0x02, 0x0a, 0x1e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x6f,
	0x6d, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x69, 0x61,
	0x6e, 0x73, 0x12, 0x5d, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x42, 0x43, 0xf2, 0xde, 0x1f, 0x0e, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xfa, 0xde, 0x1f, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x41, 0x63,
	0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x6a, 0x0a, 0x0e, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x43, 0xf2, 0xde, 0x1f, 0x0e, 0x79,
	0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xfa, 0xde, 0x1f,
	0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0d,
	0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x17, 0x0a,
	0x07, 0x6f, 0x6c, 0x64, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6f, 0x6c, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x65, 0x77, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x65, 0x77, 0x4b, 0x65, 0x79, 0x12,
	0x21, 0x0a, 0x0c, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x3a, 0x08, 0x88, 0xa0, 0x1f, 0x00, 0xe8,
	0xa0, 0x1f, 0x00, 0x22, 0xff, 0x01, 0x0a, 0x18, 0x4d, 0x73, 0x67, 0x44, 0x72, 0x6f, 0x70, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x69, 0x61, 0x6e, 0x73,
	0x12, 0x5d, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x42, 0x43, 0xf2, 0xde, 0x1f, 0x0e, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x22, 0xfa, 0xde, 0x1f, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x17, 0x0a, 0x07, 0x6f, 0x6c, 0x64, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6f, 0x6c, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x65, 0x77, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x65, 0x77, 0x4b, 0x65,
	0x79, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x3a, 0x08, 0x88, 0xa0, 0x1f,
	0x00, 0xe8, 0xa0, 0x1f, 0x00, 0x22, 0xe5, 0x02, 0x0a, 0x18, 0x4d, 0x73, 0x67, 0x41, 0x64, 0x64,
	0x54, 0x6f, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x5d, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x42, 0x43, 0xf2, 0xde, 0x1f, 0x0e, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xfa, 0xde, 0x1f, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x41, 0x63,
	0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x64, 0x0a, 0x0b, 0x61, 0x64, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x42, 0x43, 0xf2, 0xde, 0x1f, 0x0e, 0x79, 0x61, 0x6d, 0x6c,
	0x3a, 0x22, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xfa, 0xde, 0x1f, 0x2d, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x41, 0x63, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0a, 0x61, 0x64, 0x64,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x6c, 0x64, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x6c, 0x64, 0x4b, 0x65, 0x79,
	0x12, 0x17, 0x0a, 0x07, 0x6e, 0x65, 0x77, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6e, 0x65, 0x77, 0x4b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65, 0x78,
	0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6e, 0x65, 0x78, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x25, 0x0a, 0x0e,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x3a, 0x08, 0x88, 0xa0, 0x1f, 0x00, 0xe8, 0xa0, 0x1f, 0x00, 0x22, 0xf0, 0x02,
	0x0a, 0x1d, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x5d, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x42, 0x43, 0xf2, 0xde, 0x1f, 0x0e, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x22, 0xfa, 0xde, 0x1f, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x6a,
	0x0a, 0x0e, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x43, 0xf2, 0xde, 0x1f, 0x0e, 0x79, 0x61, 0x6d, 0x6c,
	0x3a, 0x22, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xfa, 0xde, 0x1f, 0x2d, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x41, 0x63, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0d, 0x72, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x6c,
	0x64, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x6c, 0x64,
	0x4b, 0x65, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x65, 0x77, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x65, 0x77, 0x4b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x0c,
	0x6e, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x25, 0x0a, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x3a, 0x08, 0x88, 0xa0, 0x1f, 0x00, 0xe8, 0xa0, 0x1f, 0x00,
	0x22, 0xfe, 0x01, 0x0a, 0x17, 0x4d, 0x73, 0x67, 0x44, 0x72, 0x6f, 0x70, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x64, 0x79, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x5d, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x43, 0xf2,
	0xde, 0x1f, 0x0e, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x22, 0xfa, 0xde, 0x1f, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64,
	0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x6f,
	0x6c, 0x64, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x6c,
	0x64, 0x4b, 0x65, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x65, 0x77, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x65, 0x77, 0x4b, 0x65, 0x79, 0x12, 0x21, 0x0a,
	0x0c, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x25, 0x0a, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x3a, 0x08, 0x88, 0xa0, 0x1f, 0x00, 0xe8, 0xa0, 0x1f,
	0x00, 0x22, 0xc0, 0x02, 0x0a, 0x15, 0x4d, 0x73, 0x67, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x64, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x12, 0x5d, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x43, 0xf2, 0xde,
	0x1f, 0x0e, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22,
	0xfa, 0xde, 0x1f, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b,
	0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65,
	0x6e, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x6f, 0x6c, 0x64, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6f, 0x6c, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x65, 0x77, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x65, 0x77, 0x4b, 0x65, 0x79,
	0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x3a, 0x08, 0x88, 0xa0, 0x1f, 0x00,
	0xe8, 0xa0, 0x1f, 0x00, 0x22, 0x97, 0x02, 0x0a, 0x1a, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x73, 0x12, 0x5d, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x42, 0x43, 0xf2, 0xde, 0x1f, 0x0e, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xfa, 0xde, 0x1f, 0x2d, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x41,
	0x63, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x6c, 0x64, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x6c, 0x64, 0x4b, 0x65,
	0x79, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x65, 0x77, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6e, 0x65, 0x77, 0x4b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65,
	0x78, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x25, 0x0a,
	0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x3a, 0x08, 0x88, 0xa0, 0x1f, 0x00, 0xe8, 0xa0, 0x1f, 0x00, 0x22, 0xfb,
	0x01, 0x0a, 0x14, 0x4d, 0x73, 0x67, 0x44, 0x72, 0x6f, 0x70, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x64,
	0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x12, 0x5d, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x43, 0xf2, 0xde, 0x1f, 0x0e, 0x79, 0x61,
	0x6d, 0x6c, 0x3a, 0x22, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xfa, 0xde, 0x1f, 0x2d,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x6c, 0x64, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x6c, 0x64, 0x4b, 0x65, 0x79, 0x12,
	0x17, 0x0a, 0x07, 0x6e, 0x65, 0x77, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6e, 0x65, 0x77, 0x4b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65, 0x78, 0x74,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6e, 0x65, 0x78, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x3a, 0x08, 0x88, 0xa0, 0x1f, 0x00, 0xe8, 0xa0, 0x1f, 0x00, 0x22, 0x90, 0x02, 0x0a,
	0x1c, 0x4d, 0x73, 0x67, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x64, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x66, 0x0a,
	0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x42, 0x43, 0xf2, 0xde, 0x1f, 0x0e, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xfa, 0xde, 0x1f, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x41, 0x63,
	0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x6a, 0x0a, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x43, 0xf2,
	0xde, 0x1f, 0x0e, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x22, 0xfa, 0xde, 0x1f, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64,
	0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x68, 0x61, 0x73, 0x68, 0x3a, 0x08, 0x88, 0xa0, 0x1f, 0x00, 0xe8, 0xa0, 0x1f, 0x00, 0x22,
	0x90, 0x02, 0x0a, 0x1c, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x64, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x66, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x43, 0xf2, 0xde, 0x1f, 0x0e, 0x79, 0x61, 0x6d, 0x6c,
	0x3a, 0x22, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xfa, 0xde, 0x1f, 0x2d, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x41, 0x63, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0b, 0x66, 0x72, 0x6f,
	0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x6a, 0x0a, 0x0e, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x42, 0x43, 0xf2, 0xde, 0x1f, 0x0e, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x22, 0xfa, 0xde, 0x1f, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x3a, 0x08, 0x88, 0xa0, 0x1f, 0x00, 0xe8, 0xa0,
	0x1f, 0x00, 0x22, 0xa8, 0x02, 0x0a, 0x07, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x6e, 0x64, 0x12, 0x3a,
	0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0xf2, 0xde, 0x1f, 0x13, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22,
	0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x52, 0x0b, 0x66,
	0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x34, 0x0a, 0x0a, 0x74, 0x6f,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x15,
	0xf2, 0xde, 0x1f, 0x11, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x22, 0x52, 0x09, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x37, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x04, 0xc8, 0xde, 0x1f,
	0x00, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xf2, 0xde, 0x1f,
	0x0f, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22,
	0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x37, 0x0a, 0x06, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x06, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x3a, 0x08, 0x88, 0xa0, 0x1f, 0x00, 0xe8, 0xa0, 0x1f, 0x00, 0x22, 0x80, 0x01,
	0x0a, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x12, 0x37, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x6e, 0x64, 0x52,
	0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x6f, 0x74,
	0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64,
	0x22, 0xb0, 0x01, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x41, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x64, 0x79, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x6f, 0x6f, 0x6c, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x1a, 0x5a, 0x0a, 0x0b, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x35, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0xaf, 0x01, 0x0a, 0x0b, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x50,
	0x6f, 0x6f, 0x6c, 0x12, 0x5d, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x42, 0x43, 0xf2, 0xde, 0x1f, 0x0e, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xfa, 0xde, 0x1f, 0x2d, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x41,
	0x63, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x41, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xa3, 0x02, 0x0a, 0x1d, 0x4d, 0x73, 0x67, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x66, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x43, 0xf2,
	0xde, 0x1f, 0x0e, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x22, 0xfa, 0xde, 0x1f, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64,
	0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x6a, 0x0a, 0x0e, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x43, 0xf2, 0xde, 0x1f, 0x0e, 0x79, 0x61, 0x6d,
	0x6c, 0x3a, 0x22, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xfa, 0xde, 0x1f, 0x2d, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x41, 0x63, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0d, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x68,
	0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x20, 0x0a, 0x1e, 0x4d,
	0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x0a,
	0x1f, 0x4d, 0x73, 0x67, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x64, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x1e, 0x0a, 0x1c, 0x4d, 0x73, 0x67, 0x44, 0x72, 0x6f, 0x70, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x64, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x23, 0x0a, 0x21, 0x4d, 0x73, 0x67, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x64, 0x79, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x69, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x0a, 0x26, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x64, 0x69, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x22, 0x0a, 0x20, 0x4d, 0x73, 0x67, 0x44, 0x72, 0x6f, 0x70, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x64,
	0x79, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x69, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x22, 0x0a, 0x20, 0x4d, 0x73, 0x67, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x0a, 0x25, 0x4d, 0x73, 0x67, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x57,
	0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x21, 0x0a, 0x1f, 0x4d, 0x73, 0x67, 0x44, 0x72, 0x6f, 0x70, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x64, 0x79, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1f, 0x0a, 0x1d, 0x4d, 0x73, 0x67, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x0a, 0x22, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x0a, 0x1c, 0x4d, 0x73,
	0x67, 0x44, 0x72, 0x6f, 0x70, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x0a, 0x24, 0x4d, 0x73,
	0x67, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x26, 0x0a, 0x24, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x11, 0x0a, 0x0f, 0x4d, 0x73,
	0x67, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x0a,
	0x25, 0x4d, 0x73, 0x67, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x9c, 0x0d, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x63,
	0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x12,
	0x24, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x2e, 0x4d,
	0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x1a, 0x2c, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x64, 0x79, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x64, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x0e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x64, 0x79, 0x12, 0x25, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x64, 0x79, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x1a, 0x2d, 0x2e, 0x6b,
	0x69, 0x72, 0x61, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x2e, 0x4d, 0x73, 0x67, 0x44,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x0b, 0x44,
	0x72, 0x6f, 0x70, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x12, 0x22, 0x2e, 0x6b, 0x69, 0x72,
	0x61, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x72, 0x6f,
	0x70, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x1a, 0x2a,
	0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x2e, 0x4d, 0x73,
	0x67, 0x44, 0x72, 0x6f, 0x70, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b, 0x0a, 0x0f, 0x41, 0x64,
	0x64, 0x54, 0x6f, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x69, 0x61, 0x6e, 0x73, 0x12, 0x27, 0x2e,
	0x6b, 0x69, 0x72, 0x61, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x2e, 0x4d, 0x73, 0x67,
	0x41, 0x64, 0x64, 0x54, 0x6f, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x64, 0x69, 0x61, 0x6e, 0x73, 0x1a, 0x2f, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x64, 0x79, 0x2e, 0x4d, 0x73, 0x67, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x64, 0x79, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x69, 0x61, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7a, 0x0a, 0x14, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x69, 0x61, 0x6e, 0x73, 0x12,
	0x2c, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x2e, 0x4d,
	0x73, 0x67, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x64, 0x79, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x69, 0x61, 0x6e, 0x73, 0x1a, 0x34, 0x2e,
	0x6b, 0x69, 0x72, 0x61, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x2e, 0x4d, 0x73, 0x67,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x64,
	0x79, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x69, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x0e, 0x44, 0x72, 0x6f, 0x70, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x64, 0x69, 0x61, 0x6e, 0x73, 0x12, 0x26, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x64, 0x79, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x72, 0x6f, 0x70, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x64, 0x79, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x69, 0x61, 0x6e, 0x73, 0x1a, 0x2e, 0x2e,
	0x6b, 0x69, 0x72, 0x61, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x2e, 0x4d, 0x73, 0x67,
	0x44, 0x72, 0x6f, 0x70, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x64, 0x69, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a,
	0x0e, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x26, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x2e, 0x4d,
	0x73, 0x67, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x57, 0x68,
	0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x2e, 0x4d, 0x73, 0x67, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a, 0x13, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x46, 0x72, 0x6f, 0x6d, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2b,
	0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x2e, 0x4d, 0x73,
	0x67, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x64, 0x79, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x6b, 0x69,
	0x72, 0x61, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x57,
	0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x65, 0x0a, 0x0d, 0x44, 0x72, 0x6f, 0x70, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x25, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79,
	0x2e, 0x4d, 0x73, 0x67, 0x44, 0x72, 0x6f, 0x70, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x57,
	0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x72, 0x6f, 0x70, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x54, 0x6f,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x12, 0x23, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x64, 0x79, 0x2e, 0x4d, 0x73, 0x67, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x64, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x1a, 0x2b, 0x2e, 0x6b, 0x69,
	0x72, 0x61, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x2e, 0x4d, 0x73, 0x67, 0x41, 0x64,
	0x64, 0x54, 0x6f, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x12, 0x28, 0x2e, 0x6b,
	0x69, 0x72, 0x61, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x2e, 0x4d, 0x73, 0x67, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x1a, 0x30, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x64, 0x79, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46,
	0x72, 0x6f, 0x6d, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x0a, 0x44, 0x72, 0x6f, 0x70,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x12, 0x22, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x64, 0x79, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x72, 0x6f, 0x70, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x64, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x1a, 0x2a, 0x2e, 0x6b, 0x69, 0x72,
	0x61, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x72, 0x6f,
	0x70, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x74, 0x0a, 0x12, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x2e, 0x6b,
	0x69, 0x72, 0x61, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x2e, 0x4d, 0x73, 0x67, 0x41,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x32, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x2e, 0x4d, 0x73, 0x67, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x74, 0x0a, 0x12,
	0x44, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x2a, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x64,
	0x79, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x64, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x32,
	0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x2e, 0x4d, 0x73,
	0x67, 0x44, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3c, 0x0a, 0x04, 0x53, 0x65, 0x6e, 0x64, 0x12, 0x15, 0x2e, 0x6b, 0x69, 0x72,
	0x61, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x6e,
	0x64, 0x1a, 0x1d, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79,
	0x2e, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x73, 0x0a, 0x0f, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x12, 0x2b, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x64, 0x79, 0x2e, 0x4d, 0x73, 0x67, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x1a, 0x33, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x2e,
	0x4d, 0x73, 0x67, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x4b, 0x69, 0x72, 0x61, 0x43, 0x6f, 0x72, 0x65, 0x2f, 0x73, 0x65, 0x6b,
	0x61, 0x69, 0x2f, 0x78, 0x2f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x2f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kira_custody_tx_proto_rawDescOnce sync.Once
	file_kira_custody_tx_proto_rawDescData = file_kira_custody_tx_proto_rawDesc
)

func file_kira_custody_tx_proto_rawDescGZIP() []byte {
	file_kira_custody_tx_proto_rawDescOnce.Do(func() {
		file_kira_custody_tx_proto_rawDescData = protoimpl.X.CompressGZIP(file_kira_custody_tx_proto_rawDescData)
	})
	return file_kira_custody_tx_proto_rawDescData
}

var file_kira_custody_tx_proto_msgTypes = make([]protoimpl.MessageInfo, 36)
var file_kira_custody_tx_proto_goTypes = []interface{}{
	(*MsgCreateCustodyRecord)(nil),                 // 0: kira.custody.MsgCreateCustodyRecord
	(*MsgDisableCustodyRecord)(nil),                // 1: kira.custody.MsgDisableCustodyRecord
	(*MsgDropCustodyRecord)(nil),                   // 2: kira.custody.MsgDropCustodyRecord
	(*MsgAddToCustodyCustodians)(nil),              // 3: kira.custody.MsgAddToCustodyCustodians
	(*MsgRemoveFromCustodyCustodians)(nil),         // 4: kira.custody.MsgRemoveFromCustodyCustodians
	(*MsgDropCustodyCustodians)(nil),               // 5: kira.custody.MsgDropCustodyCustodians
	(*MsgAddToCustodyWhiteList)(nil),               // 6: kira.custody.MsgAddToCustodyWhiteList
	(*MsgRemoveFromCustodyWhiteList)(nil),          // 7: kira.custody.MsgRemoveFromCustodyWhiteList
	(*MsgDropCustodyWhiteList)(nil),                // 8: kira.custody.MsgDropCustodyWhiteList
	(*MsgAddToCustodyLimits)(nil),                  // 9: kira.custody.MsgAddToCustodyLimits
	(*MsgRemoveFromCustodyLimits)(nil),             // 10: kira.custody.MsgRemoveFromCustodyLimits
	(*MsgDropCustodyLimits)(nil),                   // 11: kira.custody.MsgDropCustodyLimits
	(*MsgApproveCustodyTransaction)(nil),           // 12: kira.custody.MsgApproveCustodyTransaction
	(*MsgDeclineCustodyTransaction)(nil),           // 13: kira.custody.MsgDeclineCustodyTransaction
	(*MsgSend)(nil),                                // 14: kira.custody.MsgSend
	(*TransactionRecord)(nil),                      // 15: kira.custody.TransactionRecord
	(*TransactionPool)(nil),                        // 16: kira.custody.TransactionPool
	(*CustodyPool)(nil),                            // 17: kira.custody.CustodyPool
	(*MsgPasswordConfirmTransaction)(nil),          // 18: kira.custody.MsgPasswordConfirmTransaction
	(*MsgCreateCustodyRecordResponse)(nil),         // 19: kira.custody.MsgCreateCustodyRecordResponse
	(*MsgDisableCustodyRecordResponse)(nil),        // 20: kira.custody.MsgDisableCustodyRecordResponse
	(*MsgDropCustodyRecordResponse)(nil),           // 21: kira.custody.MsgDropCustodyRecordResponse
	(*MsgAddToCustodyCustodiansResponse)(nil),      // 22: kira.custody.MsgAddToCustodyCustodiansResponse
	(*MsgRemoveFromCustodyCustodiansResponse)(nil), // 23: kira.custody.MsgRemoveFromCustodyCustodiansResponse
	(*MsgDropCustodyCustodiansResponse)(nil),       // 24: kira.custody.MsgDropCustodyCustodiansResponse
	(*MsgAddToCustodyWhiteListResponse)(nil),       // 25: kira.custody.MsgAddToCustodyWhiteListResponse
	(*MsgRemoveFromCustodyWhiteListResponse)(nil),  // 26: kira.custody.MsgRemoveFromCustodyWhiteListResponse
	(*MsgDropCustodyWhiteListResponse)(nil),        // 27: kira.custody.MsgDropCustodyWhiteListResponse
	(*MsgAddToCustodyLimitsResponse)(nil),          // 28: kira.custody.MsgAddToCustodyLimitsResponse
	(*MsgRemoveFromCustodyLimitsResponse)(nil),     // 29: kira.custody.MsgRemoveFromCustodyLimitsResponse
	(*MsgDropCustodyLimitsResponse)(nil),           // 30: kira.custody.MsgDropCustodyLimitsResponse
	(*MsgApproveCustodyTransactionResponse)(nil),   // 31: kira.custody.MsgApproveCustodyTransactionResponse
	(*MsgDeclineCustodyTransactionResponse)(nil),   // 32: kira.custody.MsgDeclineCustodyTransactionResponse
	(*MsgSendResponse)(nil),                        // 33: kira.custody.MsgSendResponse
	(*MsgPasswordConfirmTransactionResponse)(nil),  // 34: kira.custody.MsgPasswordConfirmTransactionResponse
	nil,                     // 35: kira.custody.TransactionPool.RecordEntry
	(*CustodySettings)(nil), // 36: kira.custody.CustodySettings
	(*v1beta1.Coin)(nil),    // 37: cosmos.base.v1beta1.Coin
}
var file_kira_custody_tx_proto_depIdxs = []int32{
	36, // 0: kira.custody.MsgCreateCustodyRecord.custody_settings:type_name -> kira.custody.CustodySettings
	37, // 1: kira.custody.MsgSend.amount:type_name -> cosmos.base.v1beta1.Coin
	37, // 2: kira.custody.MsgSend.reward:type_name -> cosmos.base.v1beta1.Coin
	14, // 3: kira.custody.TransactionRecord.transaction:type_name -> kira.custody.MsgSend
	35, // 4: kira.custody.TransactionPool.record:type_name -> kira.custody.TransactionPool.RecordEntry
	16, // 5: kira.custody.CustodyPool.transactions:type_name -> kira.custody.TransactionPool
	15, // 6: kira.custody.TransactionPool.RecordEntry.value:type_name -> kira.custody.TransactionRecord
	0,  // 7: kira.custody.Msg.CreateCustody:input_type -> kira.custody.MsgCreateCustodyRecord
	1,  // 8: kira.custody.Msg.DisableCustody:input_type -> kira.custody.MsgDisableCustodyRecord
	2,  // 9: kira.custody.Msg.DropCustody:input_type -> kira.custody.MsgDropCustodyRecord
	3,  // 10: kira.custody.Msg.AddToCustodians:input_type -> kira.custody.MsgAddToCustodyCustodians
	4,  // 11: kira.custody.Msg.RemoveFromCustodians:input_type -> kira.custody.MsgRemoveFromCustodyCustodians
	5,  // 12: kira.custody.Msg.DropCustodians:input_type -> kira.custody.MsgDropCustodyCustodians
	6,  // 13: kira.custody.Msg.AddToWhiteList:input_type -> kira.custody.MsgAddToCustodyWhiteList
	7,  // 14: kira.custody.Msg.RemoveFromWhiteList:input_type -> kira.custody.MsgRemoveFromCustodyWhiteList
	8,  // 15: kira.custody.Msg.DropWhiteList:input_type -> kira.custody.MsgDropCustodyWhiteList
	9,  // 16: kira.custody.Msg.AddToLimits:input_type -> kira.custody.MsgAddToCustodyLimits
	10, // 17: kira.custody.Msg.RemoveFromLimits:input_type -> kira.custody.MsgRemoveFromCustodyLimits
	11, // 18: kira.custody.Msg.DropLimits:input_type -> kira.custody.MsgDropCustodyLimits
	12, // 19: kira.custody.Msg.ApproveTransaction:input_type -> kira.custody.MsgApproveCustodyTransaction
	13, // 20: kira.custody.Msg.DeclineTransaction:input_type -> kira.custody.MsgDeclineCustodyTransaction
	14, // 21: kira.custody.Msg.Send:input_type -> kira.custody.MsgSend
	18, // 22: kira.custody.Msg.PasswordConfirm:input_type -> kira.custody.MsgPasswordConfirmTransaction
	19, // 23: kira.custody.Msg.CreateCustody:output_type -> kira.custody.MsgCreateCustodyRecordResponse
	20, // 24: kira.custody.Msg.DisableCustody:output_type -> kira.custody.MsgDisableCustodyRecordResponse
	21, // 25: kira.custody.Msg.DropCustody:output_type -> kira.custody.MsgDropCustodyRecordResponse
	22, // 26: kira.custody.Msg.AddToCustodians:output_type -> kira.custody.MsgAddToCustodyCustodiansResponse
	23, // 27: kira.custody.Msg.RemoveFromCustodians:output_type -> kira.custody.MsgRemoveFromCustodyCustodiansResponse
	24, // 28: kira.custody.Msg.DropCustodians:output_type -> kira.custody.MsgDropCustodyCustodiansResponse
	25, // 29: kira.custody.Msg.AddToWhiteList:output_type -> kira.custody.MsgAddToCustodyWhiteListResponse
	26, // 30: kira.custody.Msg.RemoveFromWhiteList:output_type -> kira.custody.MsgRemoveFromCustodyWhiteListResponse
	27, // 31: kira.custody.Msg.DropWhiteList:output_type -> kira.custody.MsgDropCustodyWhiteListResponse
	28, // 32: kira.custody.Msg.AddToLimits:output_type -> kira.custody.MsgAddToCustodyLimitsResponse
	29, // 33: kira.custody.Msg.RemoveFromLimits:output_type -> kira.custody.MsgRemoveFromCustodyLimitsResponse
	30, // 34: kira.custody.Msg.DropLimits:output_type -> kira.custody.MsgDropCustodyLimitsResponse
	31, // 35: kira.custody.Msg.ApproveTransaction:output_type -> kira.custody.MsgApproveCustodyTransactionResponse
	32, // 36: kira.custody.Msg.DeclineTransaction:output_type -> kira.custody.MsgDeclineCustodyTransactionResponse
	33, // 37: kira.custody.Msg.Send:output_type -> kira.custody.MsgSendResponse
	34, // 38: kira.custody.Msg.PasswordConfirm:output_type -> kira.custody.MsgPasswordConfirmTransactionResponse
	23, // [23:39] is the sub-list for method output_type
	7,  // [7:23] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_kira_custody_tx_proto_init() }
func file_kira_custody_tx_proto_init() {
	if File_kira_custody_tx_proto != nil {
		return
	}
	file_kira_custody_custody_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_kira_custody_tx_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCreateCustodyRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_custody_tx_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDisableCustodyRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_custody_tx_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDropCustodyRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_custody_tx_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAddToCustodyCustodians); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_custody_tx_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRemoveFromCustodyCustodians); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_custody_tx_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDropCustodyCustodians); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_custody_tx_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAddToCustodyWhiteList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_custody_tx_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRemoveFromCustodyWhiteList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_custody_tx_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDropCustodyWhiteList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_custody_tx_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAddToCustodyLimits); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_custody_tx_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRemoveFromCustodyLimits); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_custody_tx_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDropCustodyLimits); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_custody_tx_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgApproveCustodyTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_custody_tx_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDeclineCustodyTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_custody_tx_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgSend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_custody_tx_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_custody_tx_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionPool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_custody_tx_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustodyPool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_custody_tx_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgPasswordConfirmTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_custody_tx_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCreateCustodyRecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_custody_tx_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDisableCustodyRecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_custody_tx_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDropCustodyRecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_custody_tx_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAddToCustodyCustodiansResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_custody_tx_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRemoveFromCustodyCustodiansResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_custody_tx_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDropCustodyCustodiansResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_custody_tx_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAddToCustodyWhiteListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_custody_tx_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRemoveFromCustodyWhiteListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_custody_tx_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDropCustodyWhiteListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_custody_tx_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAddToCustodyLimitsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_custody_tx_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRemoveFromCustodyLimitsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_custody_tx_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDropCustodyLimitsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_custody_tx_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgApproveCustodyTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_custody_tx_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDeclineCustodyTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_custody_tx_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgSendResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_custody_tx_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgPasswordConfirmTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kira_custody_tx_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   36,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kira_custody_tx_proto_goTypes,
		DependencyIndexes: file_kira_custody_tx_proto_depIdxs,
		MessageInfos:      file_kira_custody_tx_proto_msgTypes,
	}.Build()
	File_kira_custody_tx_proto = out.File
	file_kira_custody_tx_proto_rawDesc = nil
	file_kira_custody_tx_proto_goTypes = nil
	file_kira_custody_tx_proto_depIdxs = nil
}
