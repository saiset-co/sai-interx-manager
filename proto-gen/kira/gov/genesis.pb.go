// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.1
// source: kira/gov/genesis.proto

package types

import (
	_ "github.com/gogo/protobuf/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GenesisState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultDenom string `protobuf:"bytes,1,opt,name=default_denom,json=defaultDenom,proto3" json:"default_denom,omitempty"`
	Bech32Prefix string `protobuf:"bytes,2,opt,name=bech32_prefix,json=bech32Prefix,proto3" json:"bech32_prefix,omitempty"`
	// starting_proposal_id is the ID of the starting proposal.
	StartingProposalId uint64  `protobuf:"varint,3,opt,name=starting_proposal_id,json=startingProposalId,proto3" json:"starting_proposal_id,omitempty"`
	NextRoleId         uint64  `protobuf:"varint,4,opt,name=next_role_id,json=nextRoleId,proto3" json:"next_role_id,omitempty"`
	Roles              []*Role `protobuf:"bytes,5,rep,name=roles,proto3" json:"roles,omitempty"`
	// role_permissions is the roles that are active from genesis.
	RolePermissions map[uint64]*Permissions `protobuf:"bytes,6,rep,name=role_permissions,json=rolePermissions,proto3" json:"role_permissions,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// NetworkActors are the actors that are saved from genesis.
	NetworkActors               []*NetworkActor               `protobuf:"bytes,7,rep,name=network_actors,json=networkActors,proto3" json:"network_actors,omitempty"`
	NetworkProperties           *NetworkProperties            `protobuf:"bytes,8,opt,name=network_properties,json=networkProperties,proto3" json:"network_properties,omitempty"`
	ExecutionFees               []*ExecutionFee               `protobuf:"bytes,9,rep,name=execution_fees,json=executionFees,proto3" json:"execution_fees,omitempty"`
	PoorNetworkMessages         *AllowedMessages              `protobuf:"bytes,10,opt,name=poor_network_messages,json=poorNetworkMessages,proto3" json:"poor_network_messages,omitempty"`
	Proposals                   []*Proposal                   `protobuf:"bytes,11,rep,name=proposals,proto3" json:"proposals,omitempty"`
	Votes                       []*Vote                       `protobuf:"bytes,12,rep,name=votes,proto3" json:"votes,omitempty"`
	DataRegistry                map[string]*DataRegistryEntry `protobuf:"bytes,13,rep,name=data_registry,json=dataRegistry,proto3" json:"data_registry,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	IdentityRecords             []*IdentityRecord             `protobuf:"bytes,14,rep,name=identity_records,json=identityRecords,proto3" json:"identity_records,omitempty"`
	LastIdentityRecordId        uint64                        `protobuf:"varint,15,opt,name=last_identity_record_id,json=lastIdentityRecordId,proto3" json:"last_identity_record_id,omitempty"`
	IdRecordsVerifyRequests     []*IdentityRecordsVerify      `protobuf:"bytes,16,rep,name=id_records_verify_requests,json=idRecordsVerifyRequests,proto3" json:"id_records_verify_requests,omitempty"`
	LastIdRecordVerifyRequestId uint64                        `protobuf:"varint,17,opt,name=last_id_record_verify_request_id,json=lastIdRecordVerifyRequestId,proto3" json:"last_id_record_verify_request_id,omitempty"`
	ProposalDurations           map[string]uint64             `protobuf:"bytes,18,rep,name=proposal_durations,json=proposalDurations,proto3" json:"proposal_durations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *GenesisState) Reset() {
	*x = GenesisState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_gov_genesis_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenesisState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenesisState) ProtoMessage() {}

func (x *GenesisState) ProtoReflect() protoreflect.Message {
	mi := &file_kira_gov_genesis_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenesisState.ProtoReflect.Descriptor instead.
func (*GenesisState) Descriptor() ([]byte, []int) {
	return file_kira_gov_genesis_proto_rawDescGZIP(), []int{0}
}

func (x *GenesisState) GetDefaultDenom() string {
	if x != nil {
		return x.DefaultDenom
	}
	return ""
}

func (x *GenesisState) GetBech32Prefix() string {
	if x != nil {
		return x.Bech32Prefix
	}
	return ""
}

func (x *GenesisState) GetStartingProposalId() uint64 {
	if x != nil {
		return x.StartingProposalId
	}
	return 0
}

func (x *GenesisState) GetNextRoleId() uint64 {
	if x != nil {
		return x.NextRoleId
	}
	return 0
}

func (x *GenesisState) GetRoles() []*Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *GenesisState) GetRolePermissions() map[uint64]*Permissions {
	if x != nil {
		return x.RolePermissions
	}
	return nil
}

func (x *GenesisState) GetNetworkActors() []*NetworkActor {
	if x != nil {
		return x.NetworkActors
	}
	return nil
}

func (x *GenesisState) GetNetworkProperties() *NetworkProperties {
	if x != nil {
		return x.NetworkProperties
	}
	return nil
}

func (x *GenesisState) GetExecutionFees() []*ExecutionFee {
	if x != nil {
		return x.ExecutionFees
	}
	return nil
}

func (x *GenesisState) GetPoorNetworkMessages() *AllowedMessages {
	if x != nil {
		return x.PoorNetworkMessages
	}
	return nil
}

func (x *GenesisState) GetProposals() []*Proposal {
	if x != nil {
		return x.Proposals
	}
	return nil
}

func (x *GenesisState) GetVotes() []*Vote {
	if x != nil {
		return x.Votes
	}
	return nil
}

func (x *GenesisState) GetDataRegistry() map[string]*DataRegistryEntry {
	if x != nil {
		return x.DataRegistry
	}
	return nil
}

func (x *GenesisState) GetIdentityRecords() []*IdentityRecord {
	if x != nil {
		return x.IdentityRecords
	}
	return nil
}

func (x *GenesisState) GetLastIdentityRecordId() uint64 {
	if x != nil {
		return x.LastIdentityRecordId
	}
	return 0
}

func (x *GenesisState) GetIdRecordsVerifyRequests() []*IdentityRecordsVerify {
	if x != nil {
		return x.IdRecordsVerifyRequests
	}
	return nil
}

func (x *GenesisState) GetLastIdRecordVerifyRequestId() uint64 {
	if x != nil {
		return x.LastIdRecordVerifyRequestId
	}
	return 0
}

func (x *GenesisState) GetProposalDurations() map[string]uint64 {
	if x != nil {
		return x.ProposalDurations
	}
	return nil
}

var File_kira_gov_genesis_proto protoreflect.FileDescriptor

var file_kira_gov_genesis_proto_rawDesc = []byte{
	0x0a, 0x16, 0x6b, 0x69, 0x72, 0x61, 0x2f, 0x67, 0x6f, 0x76, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x73,
	0x69, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x67,
	0x6f, 0x76, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f,
	0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x6b, 0x69, 0x72, 0x61, 0x2f, 0x67,
	0x6f, 0x76, 0x2f, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13,
	0x6b, 0x69, 0x72, 0x61, 0x2f, 0x67, 0x6f, 0x76, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x6b, 0x69, 0x72, 0x61, 0x2f, 0x67, 0x6f, 0x76, 0x2f, 0x70, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x6b, 0x69,
	0x72, 0x61, 0x2f, 0x67, 0x6f, 0x76, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x6b, 0x69, 0x72, 0x61,
	0x2f, 0x67, 0x6f, 0x76, 0x2f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66,
	0x65, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x6b, 0x69, 0x72, 0x61, 0x2f, 0x67,
	0x6f, 0x76, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x6b, 0x69, 0x72,
	0x61, 0x2f, 0x67, 0x6f, 0x76, 0x2f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x6b, 0x69,
	0x72, 0x61, 0x2f, 0x67, 0x6f, 0x76, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x8c, 0x0b, 0x0a, 0x0c, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x64, 0x65, 0x6e, 0x6f,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x65, 0x63, 0x68, 0x33, 0x32, 0x5f,
	0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x65,
	0x63, 0x68, 0x33, 0x32, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69,
	0x6e, 0x67, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c,
	0x6e, 0x65, 0x78, 0x74, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x2a,
	0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x6b, 0x69, 0x72, 0x61, 0x2e, 0x67, 0x6f, 0x76, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x04, 0xc8,
	0xde, 0x1f, 0x00, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x56, 0x0a, 0x10, 0x72, 0x6f,
	0x6c, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x67, 0x6f, 0x76, 0x2e,
	0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x6f, 0x6c,
	0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0f, 0x72, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6b, 0x69, 0x72,
	0x61, 0x2e, 0x67, 0x6f, 0x76, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x41, 0x63, 0x74,
	0x6f, 0x72, 0x52, 0x0d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x41, 0x63, 0x74, 0x6f, 0x72,
	0x73, 0x12, 0x4a, 0x0a, 0x12, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x6b, 0x69, 0x72, 0x61, 0x2e, 0x67, 0x6f, 0x76, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x11, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x43, 0x0a,
	0x0e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x65, 0x65, 0x73, 0x18,
	0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x67, 0x6f, 0x76,
	0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x42, 0x04, 0xc8,
	0xde, 0x1f, 0x00, 0x52, 0x0d, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65,
	0x65, 0x73, 0x12, 0x4d, 0x0a, 0x15, 0x70, 0x6f, 0x6f, 0x72, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x67, 0x6f, 0x76, 0x2e, 0x41, 0x6c, 0x6c,
	0x6f, 0x77, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x13, 0x70, 0x6f,
	0x6f, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x12, 0x36, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x18, 0x0b,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x67, 0x6f, 0x76, 0x2e,
	0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x6f, 0x74,
	0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e,
	0x67, 0x6f, 0x76, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x05,
	0x76, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x4d, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6b,
	0x69, 0x72, 0x61, 0x2e, 0x67, 0x6f, 0x76, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x79, 0x12, 0x49, 0x0a, 0x10, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x67, 0x6f, 0x76, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0f,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12,
	0x35, 0x0a, 0x17, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x14, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x12, 0x62, 0x0a, 0x1a, 0x69, 0x64, 0x5f, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6b, 0x69, 0x72,
	0x61, 0x2e, 0x67, 0x6f, 0x76, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x42, 0x04, 0xc8, 0xde, 0x1f,
	0x00, 0x52, 0x17, 0x69, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x45, 0x0a, 0x20, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x69, 0x64, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x1b, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x64, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x12, 0x5c, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x5f, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x6b, 0x69, 0x72, 0x61, 0x2e, 0x67, 0x6f, 0x76, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x11, 0x70, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a,
	0x59, 0x0a, 0x14, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2b, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e,
	0x67, 0x6f, 0x76, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x5c, 0x0a, 0x11, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x31, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x67, 0x6f, 0x76, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x44, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x61, 0x6c, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x27,
	0x5a, 0x25, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4b, 0x69, 0x72,
	0x61, 0x43, 0x6f, 0x72, 0x65, 0x2f, 0x73, 0x65, 0x6b, 0x61, 0x69, 0x2f, 0x78, 0x2f, 0x67, 0x6f,
	0x76, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kira_gov_genesis_proto_rawDescOnce sync.Once
	file_kira_gov_genesis_proto_rawDescData = file_kira_gov_genesis_proto_rawDesc
)

func file_kira_gov_genesis_proto_rawDescGZIP() []byte {
	file_kira_gov_genesis_proto_rawDescOnce.Do(func() {
		file_kira_gov_genesis_proto_rawDescData = protoimpl.X.CompressGZIP(file_kira_gov_genesis_proto_rawDescData)
	})
	return file_kira_gov_genesis_proto_rawDescData
}

var file_kira_gov_genesis_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_kira_gov_genesis_proto_goTypes = []interface{}{
	(*GenesisState)(nil),          // 0: kira.gov.GenesisState
	nil,                           // 1: kira.gov.GenesisState.RolePermissionsEntry
	nil,                           // 2: kira.gov.GenesisState.DataRegistryEntry
	nil,                           // 3: kira.gov.GenesisState.ProposalDurationsEntry
	(*Role)(nil),                  // 4: kira.gov.Role
	(*NetworkActor)(nil),          // 5: kira.gov.NetworkActor
	(*NetworkProperties)(nil),     // 6: kira.gov.NetworkProperties
	(*ExecutionFee)(nil),          // 7: kira.gov.ExecutionFee
	(*AllowedMessages)(nil),       // 8: kira.gov.AllowedMessages
	(*Proposal)(nil),              // 9: kira.gov.Proposal
	(*Vote)(nil),                  // 10: kira.gov.Vote
	(*IdentityRecord)(nil),        // 11: kira.gov.IdentityRecord
	(*IdentityRecordsVerify)(nil), // 12: kira.gov.IdentityRecordsVerify
	(*Permissions)(nil),           // 13: kira.gov.Permissions
	(*DataRegistryEntry)(nil),     // 14: kira.gov.DataRegistryEntry
}
var file_kira_gov_genesis_proto_depIdxs = []int32{
	4,  // 0: kira.gov.GenesisState.roles:type_name -> kira.gov.Role
	1,  // 1: kira.gov.GenesisState.role_permissions:type_name -> kira.gov.GenesisState.RolePermissionsEntry
	5,  // 2: kira.gov.GenesisState.network_actors:type_name -> kira.gov.NetworkActor
	6,  // 3: kira.gov.GenesisState.network_properties:type_name -> kira.gov.NetworkProperties
	7,  // 4: kira.gov.GenesisState.execution_fees:type_name -> kira.gov.ExecutionFee
	8,  // 5: kira.gov.GenesisState.poor_network_messages:type_name -> kira.gov.AllowedMessages
	9,  // 6: kira.gov.GenesisState.proposals:type_name -> kira.gov.Proposal
	10, // 7: kira.gov.GenesisState.votes:type_name -> kira.gov.Vote
	2,  // 8: kira.gov.GenesisState.data_registry:type_name -> kira.gov.GenesisState.DataRegistryEntry
	11, // 9: kira.gov.GenesisState.identity_records:type_name -> kira.gov.IdentityRecord
	12, // 10: kira.gov.GenesisState.id_records_verify_requests:type_name -> kira.gov.IdentityRecordsVerify
	3,  // 11: kira.gov.GenesisState.proposal_durations:type_name -> kira.gov.GenesisState.ProposalDurationsEntry
	13, // 12: kira.gov.GenesisState.RolePermissionsEntry.value:type_name -> kira.gov.Permissions
	14, // 13: kira.gov.GenesisState.DataRegistryEntry.value:type_name -> kira.gov.DataRegistryEntry
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_kira_gov_genesis_proto_init() }
func file_kira_gov_genesis_proto_init() {
	if File_kira_gov_genesis_proto != nil {
		return
	}
	file_kira_gov_actor_proto_init()
	file_kira_gov_role_proto_init()
	file_kira_gov_proposal_proto_init()
	file_kira_gov_data_registry_proto_init()
	file_kira_gov_execution_fee_proto_init()
	file_kira_gov_network_properties_proto_init()
	file_kira_gov_allowed_messages_proto_init()
	file_kira_gov_identity_registrar_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_kira_gov_genesis_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenesisState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kira_gov_genesis_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_kira_gov_genesis_proto_goTypes,
		DependencyIndexes: file_kira_gov_genesis_proto_depIdxs,
		MessageInfos:      file_kira_gov_genesis_proto_msgTypes,
	}.Build()
	File_kira_gov_genesis_proto = out.File
	file_kira_gov_genesis_proto_rawDesc = nil
	file_kira_gov_genesis_proto_goTypes = nil
	file_kira_gov_genesis_proto_depIdxs = nil
}
