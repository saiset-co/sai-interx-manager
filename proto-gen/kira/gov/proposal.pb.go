// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.1
// source: kira/gov/proposal.proto

package types

import (
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/gogo/protobuf/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// VoteOption enumerates the valid vote options for a given governance proposal.
type VoteOption int32

const (
	// VOTE_OPTION_UNSPECIFIED defines a no-op vote option.
	VoteOption_VOTE_OPTION_UNSPECIFIED VoteOption = 0
	// VOTE_OPTION_YES defines a yes vote option.
	VoteOption_VOTE_OPTION_YES VoteOption = 1
	// VOTE_OPTION_ABSTAIN defines an abstain vote option.
	VoteOption_VOTE_OPTION_ABSTAIN VoteOption = 2
	// VOTE_OPTION_NO defines a no vote option.
	VoteOption_VOTE_OPTION_NO VoteOption = 3
	// VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
	VoteOption_VOTE_OPTION_NO_WITH_VETO VoteOption = 4
)

// Enum value maps for VoteOption.
var (
	VoteOption_name = map[int32]string{
		0: "VOTE_OPTION_UNSPECIFIED",
		1: "VOTE_OPTION_YES",
		2: "VOTE_OPTION_ABSTAIN",
		3: "VOTE_OPTION_NO",
		4: "VOTE_OPTION_NO_WITH_VETO",
	}
	VoteOption_value = map[string]int32{
		"VOTE_OPTION_UNSPECIFIED":  0,
		"VOTE_OPTION_YES":          1,
		"VOTE_OPTION_ABSTAIN":      2,
		"VOTE_OPTION_NO":           3,
		"VOTE_OPTION_NO_WITH_VETO": 4,
	}
)

func (x VoteOption) Enum() *VoteOption {
	p := new(VoteOption)
	*p = x
	return p
}

func (x VoteOption) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VoteOption) Descriptor() protoreflect.EnumDescriptor {
	return file_kira_gov_proposal_proto_enumTypes[0].Descriptor()
}

func (VoteOption) Type() protoreflect.EnumType {
	return &file_kira_gov_proposal_proto_enumTypes[0]
}

func (x VoteOption) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VoteOption.Descriptor instead.
func (VoteOption) EnumDescriptor() ([]byte, []int) {
	return file_kira_gov_proposal_proto_rawDescGZIP(), []int{0}
}

type VoteResult int32

const (
	VoteResult_VOTE_RESULT_UNKNOWN               VoteResult = 0
	VoteResult_VOTE_RESULT_PASSED                VoteResult = 1
	VoteResult_VOTE_RESULT_REJECTED              VoteResult = 2
	VoteResult_VOTE_RESULT_REJECTED_WITH_VETO    VoteResult = 3
	VoteResult_VOTE_PENDING                      VoteResult = 4
	VoteResult_VOTE_RESULT_QUORUM_NOT_REACHED    VoteResult = 5
	VoteResult_VOTE_RESULT_ENACTMENT             VoteResult = 6
	VoteResult_VOTE_RESULT_PASSED_WITH_EXEC_FAIL VoteResult = 7
)

// Enum value maps for VoteResult.
var (
	VoteResult_name = map[int32]string{
		0: "VOTE_RESULT_UNKNOWN",
		1: "VOTE_RESULT_PASSED",
		2: "VOTE_RESULT_REJECTED",
		3: "VOTE_RESULT_REJECTED_WITH_VETO",
		4: "VOTE_PENDING",
		5: "VOTE_RESULT_QUORUM_NOT_REACHED",
		6: "VOTE_RESULT_ENACTMENT",
		7: "VOTE_RESULT_PASSED_WITH_EXEC_FAIL",
	}
	VoteResult_value = map[string]int32{
		"VOTE_RESULT_UNKNOWN":               0,
		"VOTE_RESULT_PASSED":                1,
		"VOTE_RESULT_REJECTED":              2,
		"VOTE_RESULT_REJECTED_WITH_VETO":    3,
		"VOTE_PENDING":                      4,
		"VOTE_RESULT_QUORUM_NOT_REACHED":    5,
		"VOTE_RESULT_ENACTMENT":             6,
		"VOTE_RESULT_PASSED_WITH_EXEC_FAIL": 7,
	}
)

func (x VoteResult) Enum() *VoteResult {
	p := new(VoteResult)
	*p = x
	return p
}

func (x VoteResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VoteResult) Descriptor() protoreflect.EnumDescriptor {
	return file_kira_gov_proposal_proto_enumTypes[1].Descriptor()
}

func (VoteResult) Type() protoreflect.EnumType {
	return &file_kira_gov_proposal_proto_enumTypes[1]
}

func (x VoteResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VoteResult.Descriptor instead.
func (VoteResult) EnumDescriptor() ([]byte, []int) {
	return file_kira_gov_proposal_proto_rawDescGZIP(), []int{1}
}

type Vote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProposalId uint64     `protobuf:"varint,1,opt,name=proposal_id,json=proposalId,proto3" json:"proposal_id,omitempty"`
	Voter      []byte     `protobuf:"bytes,2,opt,name=voter,proto3" json:"voter,omitempty"`
	Option     VoteOption `protobuf:"varint,3,opt,name=option,proto3,enum=kira.gov.VoteOption" json:"option,omitempty"`
	Slash      string     `protobuf:"bytes,4,opt,name=slash,proto3" json:"slash,omitempty"` // Note: SlashProposal requires this field to determine average value
}

func (x *Vote) Reset() {
	*x = Vote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_gov_proposal_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vote) ProtoMessage() {}

func (x *Vote) ProtoReflect() protoreflect.Message {
	mi := &file_kira_gov_proposal_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vote.ProtoReflect.Descriptor instead.
func (*Vote) Descriptor() ([]byte, []int) {
	return file_kira_gov_proposal_proto_rawDescGZIP(), []int{0}
}

func (x *Vote) GetProposalId() uint64 {
	if x != nil {
		return x.ProposalId
	}
	return 0
}

func (x *Vote) GetVoter() []byte {
	if x != nil {
		return x.Voter
	}
	return nil
}

func (x *Vote) GetOption() VoteOption {
	if x != nil {
		return x.Option
	}
	return VoteOption_VOTE_OPTION_UNSPECIFIED
}

func (x *Vote) GetSlash() string {
	if x != nil {
		return x.Slash
	}
	return ""
}

type MsgVoteProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProposalId uint64     `protobuf:"varint,1,opt,name=proposal_id,json=proposalId,proto3" json:"proposal_id,omitempty"`
	Voter      []byte     `protobuf:"bytes,2,opt,name=voter,proto3" json:"voter,omitempty"`
	Option     VoteOption `protobuf:"varint,3,opt,name=option,proto3,enum=kira.gov.VoteOption" json:"option,omitempty"`
	Slash      string     `protobuf:"bytes,4,opt,name=slash,proto3" json:"slash,omitempty"` // Note: SlashProposal requires this field to determine average value
}

func (x *MsgVoteProposal) Reset() {
	*x = MsgVoteProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_gov_proposal_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgVoteProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgVoteProposal) ProtoMessage() {}

func (x *MsgVoteProposal) ProtoReflect() protoreflect.Message {
	mi := &file_kira_gov_proposal_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgVoteProposal.ProtoReflect.Descriptor instead.
func (*MsgVoteProposal) Descriptor() ([]byte, []int) {
	return file_kira_gov_proposal_proto_rawDescGZIP(), []int{1}
}

func (x *MsgVoteProposal) GetProposalId() uint64 {
	if x != nil {
		return x.ProposalId
	}
	return 0
}

func (x *MsgVoteProposal) GetVoter() []byte {
	if x != nil {
		return x.Voter
	}
	return nil
}

func (x *MsgVoteProposal) GetOption() VoteOption {
	if x != nil {
		return x.Option
	}
	return VoteOption_VOTE_OPTION_UNSPECIFIED
}

func (x *MsgVoteProposal) GetSlash() string {
	if x != nil {
		return x.Slash
	}
	return ""
}

type Proposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProposalId                 uint64                 `protobuf:"varint,1,opt,name=proposal_id,json=proposalId,proto3" json:"proposal_id,omitempty"`
	Title                      string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description                string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Content                    *anypb.Any             `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	SubmitTime                 *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=submit_time,json=submitTime,proto3" json:"submit_time,omitempty"`
	VotingEndTime              *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=voting_end_time,json=votingEndTime,proto3" json:"voting_end_time,omitempty"`
	EnactmentEndTime           *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=enactment_end_time,json=enactmentEndTime,proto3" json:"enactment_end_time,omitempty"`
	MinVotingEndBlockHeight    int64                  `protobuf:"varint,8,opt,name=min_voting_end_block_height,json=minVotingEndBlockHeight,proto3" json:"min_voting_end_block_height,omitempty"`
	MinEnactmentEndBlockHeight int64                  `protobuf:"varint,9,opt,name=min_enactment_end_block_height,json=minEnactmentEndBlockHeight,proto3" json:"min_enactment_end_block_height,omitempty"`
	Result                     VoteResult             `protobuf:"varint,10,opt,name=result,proto3,enum=kira.gov.VoteResult" json:"result,omitempty"`
	ExecResult                 string                 `protobuf:"bytes,11,opt,name=exec_result,json=execResult,proto3" json:"exec_result,omitempty"` // describes execution result
}

func (x *Proposal) Reset() {
	*x = Proposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_gov_proposal_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Proposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Proposal) ProtoMessage() {}

func (x *Proposal) ProtoReflect() protoreflect.Message {
	mi := &file_kira_gov_proposal_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Proposal.ProtoReflect.Descriptor instead.
func (*Proposal) Descriptor() ([]byte, []int) {
	return file_kira_gov_proposal_proto_rawDescGZIP(), []int{2}
}

func (x *Proposal) GetProposalId() uint64 {
	if x != nil {
		return x.ProposalId
	}
	return 0
}

func (x *Proposal) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Proposal) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Proposal) GetContent() *anypb.Any {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *Proposal) GetSubmitTime() *timestamppb.Timestamp {
	if x != nil {
		return x.SubmitTime
	}
	return nil
}

func (x *Proposal) GetVotingEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.VotingEndTime
	}
	return nil
}

func (x *Proposal) GetEnactmentEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EnactmentEndTime
	}
	return nil
}

func (x *Proposal) GetMinVotingEndBlockHeight() int64 {
	if x != nil {
		return x.MinVotingEndBlockHeight
	}
	return 0
}

func (x *Proposal) GetMinEnactmentEndBlockHeight() int64 {
	if x != nil {
		return x.MinEnactmentEndBlockHeight
	}
	return 0
}

func (x *Proposal) GetResult() VoteResult {
	if x != nil {
		return x.Result
	}
	return VoteResult_VOTE_RESULT_UNKNOWN
}

func (x *Proposal) GetExecResult() string {
	if x != nil {
		return x.ExecResult
	}
	return ""
}

type WhitelistAccountPermissionProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address    []byte    `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Permission PermValue `protobuf:"varint,2,opt,name=permission,proto3,enum=kira.gov.PermValue" json:"permission,omitempty"`
}

func (x *WhitelistAccountPermissionProposal) Reset() {
	*x = WhitelistAccountPermissionProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_gov_proposal_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhitelistAccountPermissionProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhitelistAccountPermissionProposal) ProtoMessage() {}

func (x *WhitelistAccountPermissionProposal) ProtoReflect() protoreflect.Message {
	mi := &file_kira_gov_proposal_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhitelistAccountPermissionProposal.ProtoReflect.Descriptor instead.
func (*WhitelistAccountPermissionProposal) Descriptor() ([]byte, []int) {
	return file_kira_gov_proposal_proto_rawDescGZIP(), []int{3}
}

func (x *WhitelistAccountPermissionProposal) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *WhitelistAccountPermissionProposal) GetPermission() PermValue {
	if x != nil {
		return x.Permission
	}
	return PermValue_PERMISSION_ZERO
}

type BlacklistAccountPermissionProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address    []byte    `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Permission PermValue `protobuf:"varint,2,opt,name=permission,proto3,enum=kira.gov.PermValue" json:"permission,omitempty"`
}

func (x *BlacklistAccountPermissionProposal) Reset() {
	*x = BlacklistAccountPermissionProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_gov_proposal_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlacklistAccountPermissionProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlacklistAccountPermissionProposal) ProtoMessage() {}

func (x *BlacklistAccountPermissionProposal) ProtoReflect() protoreflect.Message {
	mi := &file_kira_gov_proposal_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlacklistAccountPermissionProposal.ProtoReflect.Descriptor instead.
func (*BlacklistAccountPermissionProposal) Descriptor() ([]byte, []int) {
	return file_kira_gov_proposal_proto_rawDescGZIP(), []int{4}
}

func (x *BlacklistAccountPermissionProposal) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *BlacklistAccountPermissionProposal) GetPermission() PermValue {
	if x != nil {
		return x.Permission
	}
	return PermValue_PERMISSION_ZERO
}

type RemoveWhitelistedAccountPermissionProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address    []byte    `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Permission PermValue `protobuf:"varint,2,opt,name=permission,proto3,enum=kira.gov.PermValue" json:"permission,omitempty"`
}

func (x *RemoveWhitelistedAccountPermissionProposal) Reset() {
	*x = RemoveWhitelistedAccountPermissionProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_gov_proposal_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveWhitelistedAccountPermissionProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveWhitelistedAccountPermissionProposal) ProtoMessage() {}

func (x *RemoveWhitelistedAccountPermissionProposal) ProtoReflect() protoreflect.Message {
	mi := &file_kira_gov_proposal_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveWhitelistedAccountPermissionProposal.ProtoReflect.Descriptor instead.
func (*RemoveWhitelistedAccountPermissionProposal) Descriptor() ([]byte, []int) {
	return file_kira_gov_proposal_proto_rawDescGZIP(), []int{5}
}

func (x *RemoveWhitelistedAccountPermissionProposal) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *RemoveWhitelistedAccountPermissionProposal) GetPermission() PermValue {
	if x != nil {
		return x.Permission
	}
	return PermValue_PERMISSION_ZERO
}

type RemoveBlacklistedAccountPermissionProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address    []byte    `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Permission PermValue `protobuf:"varint,2,opt,name=permission,proto3,enum=kira.gov.PermValue" json:"permission,omitempty"`
}

func (x *RemoveBlacklistedAccountPermissionProposal) Reset() {
	*x = RemoveBlacklistedAccountPermissionProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_gov_proposal_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveBlacklistedAccountPermissionProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveBlacklistedAccountPermissionProposal) ProtoMessage() {}

func (x *RemoveBlacklistedAccountPermissionProposal) ProtoReflect() protoreflect.Message {
	mi := &file_kira_gov_proposal_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveBlacklistedAccountPermissionProposal.ProtoReflect.Descriptor instead.
func (*RemoveBlacklistedAccountPermissionProposal) Descriptor() ([]byte, []int) {
	return file_kira_gov_proposal_proto_rawDescGZIP(), []int{6}
}

func (x *RemoveBlacklistedAccountPermissionProposal) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *RemoveBlacklistedAccountPermissionProposal) GetPermission() PermValue {
	if x != nil {
		return x.Permission
	}
	return PermValue_PERMISSION_ZERO
}

type AssignRoleToAccountProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address        []byte `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	RoleIdentifier string `protobuf:"bytes,2,opt,name=role_identifier,json=roleIdentifier,proto3" json:"role_identifier,omitempty"`
}

func (x *AssignRoleToAccountProposal) Reset() {
	*x = AssignRoleToAccountProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_gov_proposal_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignRoleToAccountProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignRoleToAccountProposal) ProtoMessage() {}

func (x *AssignRoleToAccountProposal) ProtoReflect() protoreflect.Message {
	mi := &file_kira_gov_proposal_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignRoleToAccountProposal.ProtoReflect.Descriptor instead.
func (*AssignRoleToAccountProposal) Descriptor() ([]byte, []int) {
	return file_kira_gov_proposal_proto_rawDescGZIP(), []int{7}
}

func (x *AssignRoleToAccountProposal) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *AssignRoleToAccountProposal) GetRoleIdentifier() string {
	if x != nil {
		return x.RoleIdentifier
	}
	return ""
}

type UnassignRoleFromAccountProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address        []byte `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	RoleIdentifier string `protobuf:"bytes,2,opt,name=role_identifier,json=roleIdentifier,proto3" json:"role_identifier,omitempty"`
}

func (x *UnassignRoleFromAccountProposal) Reset() {
	*x = UnassignRoleFromAccountProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_gov_proposal_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnassignRoleFromAccountProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnassignRoleFromAccountProposal) ProtoMessage() {}

func (x *UnassignRoleFromAccountProposal) ProtoReflect() protoreflect.Message {
	mi := &file_kira_gov_proposal_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnassignRoleFromAccountProposal.ProtoReflect.Descriptor instead.
func (*UnassignRoleFromAccountProposal) Descriptor() ([]byte, []int) {
	return file_kira_gov_proposal_proto_rawDescGZIP(), []int{8}
}

func (x *UnassignRoleFromAccountProposal) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *UnassignRoleFromAccountProposal) GetRoleIdentifier() string {
	if x != nil {
		return x.RoleIdentifier
	}
	return ""
}

type WhitelistRolePermissionProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleIdentifier string    `protobuf:"bytes,1,opt,name=role_identifier,json=roleIdentifier,proto3" json:"role_identifier,omitempty"`
	Permission     PermValue `protobuf:"varint,2,opt,name=permission,proto3,enum=kira.gov.PermValue" json:"permission,omitempty"`
}

func (x *WhitelistRolePermissionProposal) Reset() {
	*x = WhitelistRolePermissionProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_gov_proposal_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhitelistRolePermissionProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhitelistRolePermissionProposal) ProtoMessage() {}

func (x *WhitelistRolePermissionProposal) ProtoReflect() protoreflect.Message {
	mi := &file_kira_gov_proposal_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhitelistRolePermissionProposal.ProtoReflect.Descriptor instead.
func (*WhitelistRolePermissionProposal) Descriptor() ([]byte, []int) {
	return file_kira_gov_proposal_proto_rawDescGZIP(), []int{9}
}

func (x *WhitelistRolePermissionProposal) GetRoleIdentifier() string {
	if x != nil {
		return x.RoleIdentifier
	}
	return ""
}

func (x *WhitelistRolePermissionProposal) GetPermission() PermValue {
	if x != nil {
		return x.Permission
	}
	return PermValue_PERMISSION_ZERO
}

type BlacklistRolePermissionProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleIdentifier string    `protobuf:"bytes,1,opt,name=role_identifier,json=roleIdentifier,proto3" json:"role_identifier,omitempty"`
	Permission     PermValue `protobuf:"varint,2,opt,name=permission,proto3,enum=kira.gov.PermValue" json:"permission,omitempty"`
}

func (x *BlacklistRolePermissionProposal) Reset() {
	*x = BlacklistRolePermissionProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_gov_proposal_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlacklistRolePermissionProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlacklistRolePermissionProposal) ProtoMessage() {}

func (x *BlacklistRolePermissionProposal) ProtoReflect() protoreflect.Message {
	mi := &file_kira_gov_proposal_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlacklistRolePermissionProposal.ProtoReflect.Descriptor instead.
func (*BlacklistRolePermissionProposal) Descriptor() ([]byte, []int) {
	return file_kira_gov_proposal_proto_rawDescGZIP(), []int{10}
}

func (x *BlacklistRolePermissionProposal) GetRoleIdentifier() string {
	if x != nil {
		return x.RoleIdentifier
	}
	return ""
}

func (x *BlacklistRolePermissionProposal) GetPermission() PermValue {
	if x != nil {
		return x.Permission
	}
	return PermValue_PERMISSION_ZERO
}

type RemoveWhitelistedRolePermissionProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleSid    string    `protobuf:"bytes,1,opt,name=role_sid,json=roleSid,proto3" json:"role_sid,omitempty"`
	Permission PermValue `protobuf:"varint,2,opt,name=permission,proto3,enum=kira.gov.PermValue" json:"permission,omitempty"`
}

func (x *RemoveWhitelistedRolePermissionProposal) Reset() {
	*x = RemoveWhitelistedRolePermissionProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_gov_proposal_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveWhitelistedRolePermissionProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveWhitelistedRolePermissionProposal) ProtoMessage() {}

func (x *RemoveWhitelistedRolePermissionProposal) ProtoReflect() protoreflect.Message {
	mi := &file_kira_gov_proposal_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveWhitelistedRolePermissionProposal.ProtoReflect.Descriptor instead.
func (*RemoveWhitelistedRolePermissionProposal) Descriptor() ([]byte, []int) {
	return file_kira_gov_proposal_proto_rawDescGZIP(), []int{11}
}

func (x *RemoveWhitelistedRolePermissionProposal) GetRoleSid() string {
	if x != nil {
		return x.RoleSid
	}
	return ""
}

func (x *RemoveWhitelistedRolePermissionProposal) GetPermission() PermValue {
	if x != nil {
		return x.Permission
	}
	return PermValue_PERMISSION_ZERO
}

type RemoveBlacklistedRolePermissionProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleSid    string    `protobuf:"bytes,1,opt,name=role_sid,json=roleSid,proto3" json:"role_sid,omitempty"`
	Permission PermValue `protobuf:"varint,2,opt,name=permission,proto3,enum=kira.gov.PermValue" json:"permission,omitempty"`
}

func (x *RemoveBlacklistedRolePermissionProposal) Reset() {
	*x = RemoveBlacklistedRolePermissionProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_gov_proposal_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveBlacklistedRolePermissionProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveBlacklistedRolePermissionProposal) ProtoMessage() {}

func (x *RemoveBlacklistedRolePermissionProposal) ProtoReflect() protoreflect.Message {
	mi := &file_kira_gov_proposal_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveBlacklistedRolePermissionProposal.ProtoReflect.Descriptor instead.
func (*RemoveBlacklistedRolePermissionProposal) Descriptor() ([]byte, []int) {
	return file_kira_gov_proposal_proto_rawDescGZIP(), []int{12}
}

func (x *RemoveBlacklistedRolePermissionProposal) GetRoleSid() string {
	if x != nil {
		return x.RoleSid
	}
	return ""
}

func (x *RemoveBlacklistedRolePermissionProposal) GetPermission() PermValue {
	if x != nil {
		return x.Permission
	}
	return PermValue_PERMISSION_ZERO
}

type SetNetworkPropertyProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkProperty NetworkProperty       `protobuf:"varint,1,opt,name=network_property,json=networkProperty,proto3,enum=kira.gov.NetworkProperty" json:"network_property,omitempty"`
	Value           *NetworkPropertyValue `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SetNetworkPropertyProposal) Reset() {
	*x = SetNetworkPropertyProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_gov_proposal_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetNetworkPropertyProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetNetworkPropertyProposal) ProtoMessage() {}

func (x *SetNetworkPropertyProposal) ProtoReflect() protoreflect.Message {
	mi := &file_kira_gov_proposal_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetNetworkPropertyProposal.ProtoReflect.Descriptor instead.
func (*SetNetworkPropertyProposal) Descriptor() ([]byte, []int) {
	return file_kira_gov_proposal_proto_rawDescGZIP(), []int{13}
}

func (x *SetNetworkPropertyProposal) GetNetworkProperty() NetworkProperty {
	if x != nil {
		return x.NetworkProperty
	}
	return NetworkProperty_MIN_TX_FEE
}

func (x *SetNetworkPropertyProposal) GetValue() *NetworkPropertyValue {
	if x != nil {
		return x.Value
	}
	return nil
}

type UpsertDataRegistryProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key       string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Hash      string `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	Reference string `protobuf:"bytes,3,opt,name=reference,proto3" json:"reference,omitempty"`
	Encoding  string `protobuf:"bytes,4,opt,name=encoding,proto3" json:"encoding,omitempty"`
	Size      uint64 `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *UpsertDataRegistryProposal) Reset() {
	*x = UpsertDataRegistryProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_gov_proposal_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertDataRegistryProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertDataRegistryProposal) ProtoMessage() {}

func (x *UpsertDataRegistryProposal) ProtoReflect() protoreflect.Message {
	mi := &file_kira_gov_proposal_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertDataRegistryProposal.ProtoReflect.Descriptor instead.
func (*UpsertDataRegistryProposal) Descriptor() ([]byte, []int) {
	return file_kira_gov_proposal_proto_rawDescGZIP(), []int{14}
}

func (x *UpsertDataRegistryProposal) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *UpsertDataRegistryProposal) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *UpsertDataRegistryProposal) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

func (x *UpsertDataRegistryProposal) GetEncoding() string {
	if x != nil {
		return x.Encoding
	}
	return ""
}

func (x *UpsertDataRegistryProposal) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type SetPoorNetworkMessagesProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages []string `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *SetPoorNetworkMessagesProposal) Reset() {
	*x = SetPoorNetworkMessagesProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_gov_proposal_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPoorNetworkMessagesProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPoorNetworkMessagesProposal) ProtoMessage() {}

func (x *SetPoorNetworkMessagesProposal) ProtoReflect() protoreflect.Message {
	mi := &file_kira_gov_proposal_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPoorNetworkMessagesProposal.ProtoReflect.Descriptor instead.
func (*SetPoorNetworkMessagesProposal) Descriptor() ([]byte, []int) {
	return file_kira_gov_proposal_proto_rawDescGZIP(), []int{15}
}

func (x *SetPoorNetworkMessagesProposal) GetMessages() []string {
	if x != nil {
		return x.Messages
	}
	return nil
}

type CreateRoleProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleSid                string      `protobuf:"bytes,1,opt,name=role_sid,json=roleSid,proto3" json:"role_sid,omitempty"`
	RoleDescription        string      `protobuf:"bytes,2,opt,name=role_description,json=roleDescription,proto3" json:"role_description,omitempty"`
	WhitelistedPermissions []PermValue `protobuf:"varint,3,rep,packed,name=whitelisted_permissions,json=whitelistedPermissions,proto3,enum=kira.gov.PermValue" json:"whitelisted_permissions,omitempty"`
	BlacklistedPermissions []PermValue `protobuf:"varint,4,rep,packed,name=blacklisted_permissions,json=blacklistedPermissions,proto3,enum=kira.gov.PermValue" json:"blacklisted_permissions,omitempty"`
}

func (x *CreateRoleProposal) Reset() {
	*x = CreateRoleProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_gov_proposal_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoleProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoleProposal) ProtoMessage() {}

func (x *CreateRoleProposal) ProtoReflect() protoreflect.Message {
	mi := &file_kira_gov_proposal_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoleProposal.ProtoReflect.Descriptor instead.
func (*CreateRoleProposal) Descriptor() ([]byte, []int) {
	return file_kira_gov_proposal_proto_rawDescGZIP(), []int{16}
}

func (x *CreateRoleProposal) GetRoleSid() string {
	if x != nil {
		return x.RoleSid
	}
	return ""
}

func (x *CreateRoleProposal) GetRoleDescription() string {
	if x != nil {
		return x.RoleDescription
	}
	return ""
}

func (x *CreateRoleProposal) GetWhitelistedPermissions() []PermValue {
	if x != nil {
		return x.WhitelistedPermissions
	}
	return nil
}

func (x *CreateRoleProposal) GetBlacklistedPermissions() []PermValue {
	if x != nil {
		return x.BlacklistedPermissions
	}
	return nil
}

type RemoveRoleProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleSid string `protobuf:"bytes,1,opt,name=role_sid,json=roleSid,proto3" json:"role_sid,omitempty"`
}

func (x *RemoveRoleProposal) Reset() {
	*x = RemoveRoleProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_gov_proposal_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveRoleProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveRoleProposal) ProtoMessage() {}

func (x *RemoveRoleProposal) ProtoReflect() protoreflect.Message {
	mi := &file_kira_gov_proposal_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveRoleProposal.ProtoReflect.Descriptor instead.
func (*RemoveRoleProposal) Descriptor() ([]byte, []int) {
	return file_kira_gov_proposal_proto_rawDescGZIP(), []int{17}
}

func (x *RemoveRoleProposal) GetRoleSid() string {
	if x != nil {
		return x.RoleSid
	}
	return ""
}

type SetProposalDurationsProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeofProposals   []string `protobuf:"bytes,1,rep,name=typeof_proposals,json=typeofProposals,proto3" json:"typeof_proposals,omitempty"`
	ProposalDurations []uint64 `protobuf:"varint,2,rep,packed,name=proposal_durations,json=proposalDurations,proto3" json:"proposal_durations,omitempty"`
}

func (x *SetProposalDurationsProposal) Reset() {
	*x = SetProposalDurationsProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_gov_proposal_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetProposalDurationsProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetProposalDurationsProposal) ProtoMessage() {}

func (x *SetProposalDurationsProposal) ProtoReflect() protoreflect.Message {
	mi := &file_kira_gov_proposal_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetProposalDurationsProposal.ProtoReflect.Descriptor instead.
func (*SetProposalDurationsProposal) Descriptor() ([]byte, []int) {
	return file_kira_gov_proposal_proto_rawDescGZIP(), []int{18}
}

func (x *SetProposalDurationsProposal) GetTypeofProposals() []string {
	if x != nil {
		return x.TypeofProposals
	}
	return nil
}

func (x *SetProposalDurationsProposal) GetProposalDurations() []uint64 {
	if x != nil {
		return x.ProposalDurations
	}
	return nil
}

type ProposalResetWholeCouncilorRank struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Proposer    []byte `protobuf:"bytes,1,opt,name=proposer,proto3" json:"proposer,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *ProposalResetWholeCouncilorRank) Reset() {
	*x = ProposalResetWholeCouncilorRank{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_gov_proposal_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProposalResetWholeCouncilorRank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposalResetWholeCouncilorRank) ProtoMessage() {}

func (x *ProposalResetWholeCouncilorRank) ProtoReflect() protoreflect.Message {
	mi := &file_kira_gov_proposal_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposalResetWholeCouncilorRank.ProtoReflect.Descriptor instead.
func (*ProposalResetWholeCouncilorRank) Descriptor() ([]byte, []int) {
	return file_kira_gov_proposal_proto_rawDescGZIP(), []int{19}
}

func (x *ProposalResetWholeCouncilorRank) GetProposer() []byte {
	if x != nil {
		return x.Proposer
	}
	return nil
}

func (x *ProposalResetWholeCouncilorRank) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ProposalJailCouncilor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Proposer    []byte   `protobuf:"bytes,1,opt,name=proposer,proto3" json:"proposer,omitempty"`
	Description string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Councilors  []string `protobuf:"bytes,3,rep,name=councilors,proto3" json:"councilors,omitempty"`
}

func (x *ProposalJailCouncilor) Reset() {
	*x = ProposalJailCouncilor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_gov_proposal_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProposalJailCouncilor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposalJailCouncilor) ProtoMessage() {}

func (x *ProposalJailCouncilor) ProtoReflect() protoreflect.Message {
	mi := &file_kira_gov_proposal_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposalJailCouncilor.ProtoReflect.Descriptor instead.
func (*ProposalJailCouncilor) Descriptor() ([]byte, []int) {
	return file_kira_gov_proposal_proto_rawDescGZIP(), []int{20}
}

func (x *ProposalJailCouncilor) GetProposer() []byte {
	if x != nil {
		return x.Proposer
	}
	return nil
}

func (x *ProposalJailCouncilor) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ProposalJailCouncilor) GetCouncilors() []string {
	if x != nil {
		return x.Councilors
	}
	return nil
}

type ProposalSetExecutionFees struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Proposer      []byte          `protobuf:"bytes,1,opt,name=proposer,proto3" json:"proposer,omitempty"`
	Description   string          `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	ExecutionFees []*ExecutionFee `protobuf:"bytes,3,rep,name=execution_fees,json=executionFees,proto3" json:"execution_fees,omitempty"`
}

func (x *ProposalSetExecutionFees) Reset() {
	*x = ProposalSetExecutionFees{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_gov_proposal_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProposalSetExecutionFees) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposalSetExecutionFees) ProtoMessage() {}

func (x *ProposalSetExecutionFees) ProtoReflect() protoreflect.Message {
	mi := &file_kira_gov_proposal_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposalSetExecutionFees.ProtoReflect.Descriptor instead.
func (*ProposalSetExecutionFees) Descriptor() ([]byte, []int) {
	return file_kira_gov_proposal_proto_rawDescGZIP(), []int{21}
}

func (x *ProposalSetExecutionFees) GetProposer() []byte {
	if x != nil {
		return x.Proposer
	}
	return nil
}

func (x *ProposalSetExecutionFees) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ProposalSetExecutionFees) GetExecutionFees() []*ExecutionFee {
	if x != nil {
		return x.ExecutionFees
	}
	return nil
}

var File_kira_gov_proposal_proto protoreflect.FileDescriptor

var file_kira_gov_proposal_proto_rawDesc = []byte{
	0x0a, 0x17, 0x6b, 0x69, 0x72, 0x61, 0x2f, 0x67, 0x6f, 0x76, 0x2f, 0x70, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6b, 0x69, 0x72, 0x61, 0x2e,
	0x67, 0x6f, 0x76, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67,
	0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x13, 0x6b, 0x69, 0x72, 0x61, 0x2f, 0x67, 0x6f, 0x76, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x6b, 0x69, 0x72, 0x61, 0x2f, 0x67, 0x6f, 0x76, 0x2f,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1c, 0x6b, 0x69, 0x72, 0x61, 0x2f, 0x67, 0x6f, 0x76, 0x2f, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x65, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21,
	0x6b, 0x69, 0x72, 0x61, 0x2f, 0x67, 0x6f, 0x76, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xe4, 0x01, 0x0a, 0x04, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x47, 0x0a, 0x05, 0x76,
	0x6f, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x31, 0xfa, 0xde, 0x1f, 0x2d,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x05, 0x76,
	0x6f, 0x74, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x67, 0x6f, 0x76, 0x2e,
	0x56, 0x6f, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x05, 0x73, 0x6c, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x2e, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x44, 0x65,
	0x63, 0x52, 0x05, 0x73, 0x6c, 0x61, 0x73, 0x68, 0x22, 0xef, 0x01, 0x0a, 0x0f, 0x4d, 0x73, 0x67,
	0x56, 0x6f, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x1f, 0x0a, 0x0b,
	0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x47, 0x0a,
	0x05, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x31, 0xfa, 0xde,
	0x1f, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x05, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x67, 0x6f,
	0x76, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x05, 0x73, 0x6c, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x2e, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x26, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x44, 0x65, 0x63, 0x52, 0x05, 0x73, 0x6c, 0x61, 0x73, 0x68, 0x22, 0xad, 0x05, 0x0a, 0x08, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x70, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x3b, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x42, 0x0b, 0xca, 0xb4, 0x2d, 0x07, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x5b, 0x0a,
	0x0b, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x1e,
	0xc8, 0xde, 0x1f, 0x00, 0xf2, 0xde, 0x1f, 0x12, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x73, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x90, 0xdf, 0x1f, 0x01, 0x52, 0x0a,
	0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x66, 0x0a, 0x0f, 0x76, 0x6f,
	0x74, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42,
	0x22, 0xc8, 0xde, 0x1f, 0x00, 0xf2, 0xde, 0x1f, 0x16, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x76,
	0x6f, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x90,
	0xdf, 0x1f, 0x01, 0x52, 0x0d, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x6f, 0x0a, 0x12, 0x65, 0x6e, 0x61, 0x63, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x25, 0xc8, 0xde, 0x1f, 0x00,
	0xf2, 0xde, 0x1f, 0x19, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x65, 0x6e, 0x61, 0x63, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x90, 0xdf, 0x1f,
	0x01, 0x52, 0x10, 0x65, 0x6e, 0x61, 0x63, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x1b, 0x6d, 0x69, 0x6e, 0x5f, 0x76, 0x6f, 0x74, 0x69, 0x6e,
	0x67, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x17, 0x6d, 0x69, 0x6e, 0x56, 0x6f, 0x74,
	0x69, 0x6e, 0x67, 0x45, 0x6e, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x42, 0x0a, 0x1e, 0x6d, 0x69, 0x6e, 0x5f, 0x65, 0x6e, 0x61, 0x63, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1a, 0x6d, 0x69, 0x6e, 0x45, 0x6e,
	0x61, 0x63, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x67, 0x6f, 0x76,
	0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x65, 0x63, 0x5f, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x65, 0x63, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x3a, 0x04, 0x88, 0xa0, 0x1f, 0x00, 0x22, 0xc9, 0x01, 0x0a, 0x22, 0x57,
	0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61,
	0x6c, 0x12, 0x5d, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x42, 0x43, 0xf2, 0xde, 0x1f, 0x0e, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xfa, 0xde, 0x1f, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x63,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x33, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x67, 0x6f, 0x76, 0x2e,
	0x50, 0x65, 0x72, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x0f, 0xe8, 0xa0, 0x1f, 0x01, 0xca, 0xb4, 0x2d, 0x07, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xc9, 0x01, 0x0a, 0x22, 0x42, 0x6c, 0x61, 0x63, 0x6b,
	0x6c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x5d, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x43,
	0xf2, 0xde, 0x1f, 0x0e, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x22, 0xfa, 0xde, 0x1f, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73,
	0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x33, 0x0a, 0x0a,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x13, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x67, 0x6f, 0x76, 0x2e, 0x50, 0x65, 0x72, 0x6d,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x3a, 0x0f, 0xe8, 0xa0, 0x1f, 0x01, 0xca, 0xb4, 0x2d, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x22, 0xd1, 0x01, 0x0a, 0x2a, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x57, 0x68, 0x69,
	0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61,
	0x6c, 0x12, 0x5d, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x42, 0x43, 0xf2, 0xde, 0x1f, 0x0e, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xfa, 0xde, 0x1f, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x63,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x33, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x67, 0x6f, 0x76, 0x2e,
	0x50, 0x65, 0x72, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x0f, 0xe8, 0xa0, 0x1f, 0x01, 0xca, 0xb4, 0x2d, 0x07, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xd1, 0x01, 0x0a, 0x2a, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x5d, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x43, 0xf2, 0xde, 0x1f, 0x0e, 0x79, 0x61, 0x6d, 0x6c,
	0x3a, 0x22, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xfa, 0xde, 0x1f, 0x2d, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x41, 0x63, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x33, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e,
	0x67, 0x6f, 0x76, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x0f, 0xe8, 0xa0, 0x1f, 0x01, 0xca,
	0xb4, 0x2d, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xb6, 0x01, 0x0a, 0x1b, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x54, 0x6f, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x5d, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x43, 0xf2, 0xde, 0x1f,
	0x0e, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xfa,
	0xde, 0x1f, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x6f, 0x6c,
	0x65, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x3a, 0x0f, 0xe8, 0xa0, 0x1f, 0x01, 0xca, 0xb4, 0x2d, 0x07, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x22, 0xba, 0x01, 0x0a, 0x1f, 0x55, 0x6e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x52, 0x6f, 0x6c, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x5d, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x43, 0xf2, 0xde, 0x1f, 0x0e, 0x79, 0x61,
	0x6d, 0x6c, 0x3a, 0x22, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xfa, 0xde, 0x1f, 0x2d,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x3a,
	0x0f, 0xe8, 0xa0, 0x1f, 0x01, 0xca, 0xb4, 0x2d, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x22, 0x90, 0x01, 0x0a, 0x1f, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x6f,
	0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x61, 0x6c, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72,
	0x6f, 0x6c, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x33, 0x0a,
	0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x13, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x67, 0x6f, 0x76, 0x2e, 0x50, 0x65, 0x72,
	0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x3a, 0x0f, 0xe8, 0xa0, 0x1f, 0x01, 0xca, 0xb4, 0x2d, 0x07, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x22, 0x90, 0x01, 0x0a, 0x1f, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73,
	0x74, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x6f, 0x6c, 0x65, 0x5f,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x12, 0x33, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x67, 0x6f, 0x76, 0x2e,
	0x50, 0x65, 0x72, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x0f, 0xe8, 0xa0, 0x1f, 0x01, 0xca, 0xb4, 0x2d, 0x07, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x8a, 0x01, 0x0a, 0x27, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x52, 0x6f, 0x6c, 0x65,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73,
	0x61, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x53, 0x69, 0x64, 0x12, 0x33, 0x0a,
	0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x13, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x67, 0x6f, 0x76, 0x2e, 0x50, 0x65, 0x72,
	0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x3a, 0x0f, 0xe8, 0xa0, 0x1f, 0x01, 0xca, 0xb4, 0x2d, 0x07, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x22, 0x8a, 0x01, 0x0a, 0x27, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x6c,
	0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12,
	0x19, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x53, 0x69, 0x64, 0x12, 0x33, 0x0a, 0x0a, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13,
	0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x67, 0x6f, 0x76, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x3a,
	0x0f, 0xe8, 0xa0, 0x1f, 0x01, 0xca, 0xb4, 0x2d, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x22, 0xaf, 0x01, 0x0a, 0x1a, 0x53, 0x65, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12,
	0x44, 0x0a, 0x10, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x6b, 0x69, 0x72, 0x61,
	0x2e, 0x67, 0x6f, 0x76, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x52, 0x0f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x3a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x67, 0x6f, 0x76, 0x2e,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x0f, 0xe8, 0xa0, 0x1f, 0x01, 0xca, 0xb4, 0x2d, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x22, 0xa1, 0x01, 0x0a, 0x1a, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61,
	0x6c, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e,
	0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e,
	0x67, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x3a, 0x0f, 0xe8, 0xa0, 0x1f, 0x01, 0xca, 0xb4, 0x2d, 0x07, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x3c, 0x0a, 0x1e, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x6f,
	0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x22, 0x87, 0x02, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x6f, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x72,
	0x6f, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72,
	0x6f, 0x6c, 0x65, 0x53, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x72, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x4c, 0x0a, 0x17, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x64,
	0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x67, 0x6f, 0x76, 0x2e, 0x50, 0x65,
	0x72, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x16, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69,
	0x73, 0x74, 0x65, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x4c, 0x0a, 0x17, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0e,
	0x32, 0x13, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x67, 0x6f, 0x76, 0x2e, 0x50, 0x65, 0x72, 0x6d,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x16, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74,
	0x65, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x0f, 0xe8,
	0xa0, 0x1f, 0x01, 0xca, 0xb4, 0x2d, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x40,
	0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x61, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x53, 0x69, 0x64, 0x3a,
	0x0f, 0xe8, 0xa0, 0x1f, 0x01, 0xca, 0xb4, 0x2d, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x22, 0x78, 0x0a, 0x1c, 0x53, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c,
	0x12, 0x29, 0x0a, 0x10, 0x74, 0x79, 0x70, 0x65, 0x6f, 0x66, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x79, 0x70, 0x65,
	0x6f, 0x66, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x70,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61,
	0x6c, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x92, 0x01, 0x0a, 0x1f, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x65, 0x74, 0x57, 0x68, 0x6f, 0x6c,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x63, 0x69, 0x6c, 0x6f, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x4d,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x42, 0x31, 0xfa, 0xde, 0x1f, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73,
	0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0xa8, 0x01, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x4a, 0x61, 0x69, 0x6c,
	0x43, 0x6f, 0x75, 0x6e, 0x63, 0x69, 0x6c, 0x6f, 0x72, 0x12, 0x4d, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x31, 0xfa, 0xde, 0x1f,
	0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f,
	0x75, 0x6e, 0x63, 0x69, 0x6c, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x6f, 0x75, 0x6e, 0x63, 0x69, 0x6c, 0x6f, 0x72, 0x73, 0x22, 0xd0, 0x01, 0x0a, 0x18, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x73, 0x12, 0x4d, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x31, 0xfa, 0xde, 0x1f, 0x2d, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x41, 0x63, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x0e, 0x65, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x65, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x67, 0x6f, 0x76, 0x2e, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0d,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x73, 0x2a, 0xe6, 0x01,
	0x0a, 0x0a, 0x56, 0x6f, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x17,
	0x56, 0x4f, 0x54, 0x45, 0x5f, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x1a, 0x0f, 0x8a, 0x9d, 0x20, 0x0b, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x0f, 0x56, 0x4f,
	0x54, 0x45, 0x5f, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x59, 0x45, 0x53, 0x10, 0x01, 0x1a,
	0x0d, 0x8a, 0x9d, 0x20, 0x09, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x59, 0x65, 0x73, 0x12, 0x2a,
	0x0a, 0x13, 0x56, 0x4f, 0x54, 0x45, 0x5f, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x42,
	0x53, 0x54, 0x41, 0x49, 0x4e, 0x10, 0x02, 0x1a, 0x11, 0x8a, 0x9d, 0x20, 0x0d, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x62, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x12, 0x20, 0x0a, 0x0e, 0x56, 0x4f,
	0x54, 0x45, 0x5f, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x4f, 0x10, 0x03, 0x1a, 0x0c,
	0x8a, 0x9d, 0x20, 0x08, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x12, 0x32, 0x0a, 0x18,
	0x56, 0x4f, 0x54, 0x45, 0x5f, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x4f, 0x5f, 0x57,
	0x49, 0x54, 0x48, 0x5f, 0x56, 0x45, 0x54, 0x4f, 0x10, 0x04, 0x1a, 0x14, 0x8a, 0x9d, 0x20, 0x10,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x57, 0x69, 0x74, 0x68, 0x56, 0x65, 0x74, 0x6f,
	0x1a, 0x04, 0x88, 0xa3, 0x1e, 0x00, 0x2a, 0x80, 0x03, 0x0a, 0x0a, 0x56, 0x6f, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x24, 0x0a, 0x13, 0x56, 0x4f, 0x54, 0x45, 0x5f, 0x52, 0x45,
	0x53, 0x55, 0x4c, 0x54, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x1a, 0x0b,
	0x8a, 0x9d, 0x20, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x12, 0x22, 0x0a, 0x12, 0x56,
	0x4f, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x45,
	0x44, 0x10, 0x01, 0x1a, 0x0a, 0x8a, 0x9d, 0x20, 0x06, 0x50, 0x61, 0x73, 0x73, 0x65, 0x64, 0x12,
	0x26, 0x0a, 0x14, 0x56, 0x4f, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x52,
	0x45, 0x4a, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x02, 0x1a, 0x0c, 0x8a, 0x9d, 0x20, 0x08, 0x52,
	0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x38, 0x0a, 0x1e, 0x56, 0x4f, 0x54, 0x45, 0x5f,
	0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x45, 0x44, 0x5f,
	0x57, 0x49, 0x54, 0x48, 0x5f, 0x56, 0x45, 0x54, 0x4f, 0x10, 0x03, 0x1a, 0x14, 0x8a, 0x9d, 0x20,
	0x10, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x57, 0x69, 0x74, 0x68, 0x56, 0x65, 0x74,
	0x6f, 0x12, 0x1d, 0x0a, 0x0c, 0x56, 0x4f, 0x54, 0x45, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e,
	0x47, 0x10, 0x04, 0x1a, 0x0b, 0x8a, 0x9d, 0x20, 0x07, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x12, 0x38, 0x0a, 0x1e, 0x56, 0x4f, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f,
	0x51, 0x55, 0x4f, 0x52, 0x55, 0x4d, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x52, 0x45, 0x41, 0x43, 0x48,
	0x45, 0x44, 0x10, 0x05, 0x1a, 0x14, 0x8a, 0x9d, 0x20, 0x10, 0x51, 0x75, 0x6f, 0x72, 0x75, 0x6d,
	0x4e, 0x6f, 0x74, 0x52, 0x65, 0x61, 0x63, 0x68, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x15, 0x56, 0x4f,
	0x54, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x45, 0x4e, 0x41, 0x43, 0x54, 0x4d,
	0x45, 0x4e, 0x54, 0x10, 0x06, 0x1a, 0x0d, 0x8a, 0x9d, 0x20, 0x09, 0x45, 0x6e, 0x61, 0x63, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x21, 0x56, 0x4f, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x53,
	0x55, 0x4c, 0x54, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x45, 0x44, 0x5f, 0x57, 0x49, 0x54, 0x48, 0x5f,
	0x45, 0x58, 0x45, 0x43, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x10, 0x07, 0x1a, 0x16, 0x8a, 0x9d, 0x20,
	0x12, 0x50, 0x61, 0x73, 0x73, 0x65, 0x64, 0x57, 0x69, 0x74, 0x68, 0x45, 0x78, 0x65, 0x63, 0x46,
	0x61, 0x69, 0x6c, 0x1a, 0x04, 0x88, 0xa3, 0x1e, 0x00, 0x42, 0x27, 0x5a, 0x25, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4b, 0x69, 0x72, 0x61, 0x43, 0x6f, 0x72, 0x65,
	0x2f, 0x73, 0x65, 0x6b, 0x61, 0x69, 0x2f, 0x78, 0x2f, 0x67, 0x6f, 0x76, 0x2f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kira_gov_proposal_proto_rawDescOnce sync.Once
	file_kira_gov_proposal_proto_rawDescData = file_kira_gov_proposal_proto_rawDesc
)

func file_kira_gov_proposal_proto_rawDescGZIP() []byte {
	file_kira_gov_proposal_proto_rawDescOnce.Do(func() {
		file_kira_gov_proposal_proto_rawDescData = protoimpl.X.CompressGZIP(file_kira_gov_proposal_proto_rawDescData)
	})
	return file_kira_gov_proposal_proto_rawDescData
}

var file_kira_gov_proposal_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_kira_gov_proposal_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_kira_gov_proposal_proto_goTypes = []interface{}{
	(VoteOption)(0),         // 0: kira.gov.VoteOption
	(VoteResult)(0),         // 1: kira.gov.VoteResult
	(*Vote)(nil),            // 2: kira.gov.Vote
	(*MsgVoteProposal)(nil), // 3: kira.gov.MsgVoteProposal
	(*Proposal)(nil),        // 4: kira.gov.Proposal
	(*WhitelistAccountPermissionProposal)(nil),         // 5: kira.gov.WhitelistAccountPermissionProposal
	(*BlacklistAccountPermissionProposal)(nil),         // 6: kira.gov.BlacklistAccountPermissionProposal
	(*RemoveWhitelistedAccountPermissionProposal)(nil), // 7: kira.gov.RemoveWhitelistedAccountPermissionProposal
	(*RemoveBlacklistedAccountPermissionProposal)(nil), // 8: kira.gov.RemoveBlacklistedAccountPermissionProposal
	(*AssignRoleToAccountProposal)(nil),                // 9: kira.gov.AssignRoleToAccountProposal
	(*UnassignRoleFromAccountProposal)(nil),            // 10: kira.gov.UnassignRoleFromAccountProposal
	(*WhitelistRolePermissionProposal)(nil),            // 11: kira.gov.WhitelistRolePermissionProposal
	(*BlacklistRolePermissionProposal)(nil),            // 12: kira.gov.BlacklistRolePermissionProposal
	(*RemoveWhitelistedRolePermissionProposal)(nil),    // 13: kira.gov.RemoveWhitelistedRolePermissionProposal
	(*RemoveBlacklistedRolePermissionProposal)(nil),    // 14: kira.gov.RemoveBlacklistedRolePermissionProposal
	(*SetNetworkPropertyProposal)(nil),                 // 15: kira.gov.SetNetworkPropertyProposal
	(*UpsertDataRegistryProposal)(nil),                 // 16: kira.gov.UpsertDataRegistryProposal
	(*SetPoorNetworkMessagesProposal)(nil),             // 17: kira.gov.SetPoorNetworkMessagesProposal
	(*CreateRoleProposal)(nil),                         // 18: kira.gov.CreateRoleProposal
	(*RemoveRoleProposal)(nil),                         // 19: kira.gov.RemoveRoleProposal
	(*SetProposalDurationsProposal)(nil),               // 20: kira.gov.SetProposalDurationsProposal
	(*ProposalResetWholeCouncilorRank)(nil),            // 21: kira.gov.ProposalResetWholeCouncilorRank
	(*ProposalJailCouncilor)(nil),                      // 22: kira.gov.ProposalJailCouncilor
	(*ProposalSetExecutionFees)(nil),                   // 23: kira.gov.ProposalSetExecutionFees
	(*anypb.Any)(nil),                                  // 24: google.protobuf.Any
	(*timestamppb.Timestamp)(nil),                      // 25: google.protobuf.Timestamp
	(PermValue)(0),                                     // 26: kira.gov.PermValue
	(NetworkProperty)(0),                               // 27: kira.gov.NetworkProperty
	(*NetworkPropertyValue)(nil),                       // 28: kira.gov.NetworkPropertyValue
	(*ExecutionFee)(nil),                               // 29: kira.gov.ExecutionFee
}
var file_kira_gov_proposal_proto_depIdxs = []int32{
	0,  // 0: kira.gov.Vote.option:type_name -> kira.gov.VoteOption
	0,  // 1: kira.gov.MsgVoteProposal.option:type_name -> kira.gov.VoteOption
	24, // 2: kira.gov.Proposal.content:type_name -> google.protobuf.Any
	25, // 3: kira.gov.Proposal.submit_time:type_name -> google.protobuf.Timestamp
	25, // 4: kira.gov.Proposal.voting_end_time:type_name -> google.protobuf.Timestamp
	25, // 5: kira.gov.Proposal.enactment_end_time:type_name -> google.protobuf.Timestamp
	1,  // 6: kira.gov.Proposal.result:type_name -> kira.gov.VoteResult
	26, // 7: kira.gov.WhitelistAccountPermissionProposal.permission:type_name -> kira.gov.PermValue
	26, // 8: kira.gov.BlacklistAccountPermissionProposal.permission:type_name -> kira.gov.PermValue
	26, // 9: kira.gov.RemoveWhitelistedAccountPermissionProposal.permission:type_name -> kira.gov.PermValue
	26, // 10: kira.gov.RemoveBlacklistedAccountPermissionProposal.permission:type_name -> kira.gov.PermValue
	26, // 11: kira.gov.WhitelistRolePermissionProposal.permission:type_name -> kira.gov.PermValue
	26, // 12: kira.gov.BlacklistRolePermissionProposal.permission:type_name -> kira.gov.PermValue
	26, // 13: kira.gov.RemoveWhitelistedRolePermissionProposal.permission:type_name -> kira.gov.PermValue
	26, // 14: kira.gov.RemoveBlacklistedRolePermissionProposal.permission:type_name -> kira.gov.PermValue
	27, // 15: kira.gov.SetNetworkPropertyProposal.network_property:type_name -> kira.gov.NetworkProperty
	28, // 16: kira.gov.SetNetworkPropertyProposal.value:type_name -> kira.gov.NetworkPropertyValue
	26, // 17: kira.gov.CreateRoleProposal.whitelisted_permissions:type_name -> kira.gov.PermValue
	26, // 18: kira.gov.CreateRoleProposal.blacklisted_permissions:type_name -> kira.gov.PermValue
	29, // 19: kira.gov.ProposalSetExecutionFees.execution_fees:type_name -> kira.gov.ExecutionFee
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_kira_gov_proposal_proto_init() }
func file_kira_gov_proposal_proto_init() {
	if File_kira_gov_proposal_proto != nil {
		return
	}
	file_kira_gov_role_proto_init()
	file_kira_gov_permission_proto_init()
	file_kira_gov_execution_fee_proto_init()
	file_kira_gov_network_properties_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_kira_gov_proposal_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_gov_proposal_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgVoteProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_gov_proposal_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Proposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_gov_proposal_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhitelistAccountPermissionProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_gov_proposal_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlacklistAccountPermissionProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_gov_proposal_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveWhitelistedAccountPermissionProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_gov_proposal_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveBlacklistedAccountPermissionProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_gov_proposal_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignRoleToAccountProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_gov_proposal_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnassignRoleFromAccountProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_gov_proposal_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhitelistRolePermissionProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_gov_proposal_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlacklistRolePermissionProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_gov_proposal_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveWhitelistedRolePermissionProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_gov_proposal_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveBlacklistedRolePermissionProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_gov_proposal_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetNetworkPropertyProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_gov_proposal_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertDataRegistryProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_gov_proposal_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPoorNetworkMessagesProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_gov_proposal_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRoleProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_gov_proposal_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveRoleProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_gov_proposal_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetProposalDurationsProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_gov_proposal_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProposalResetWholeCouncilorRank); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_gov_proposal_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProposalJailCouncilor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_gov_proposal_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProposalSetExecutionFees); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kira_gov_proposal_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_kira_gov_proposal_proto_goTypes,
		DependencyIndexes: file_kira_gov_proposal_proto_depIdxs,
		EnumInfos:         file_kira_gov_proposal_proto_enumTypes,
		MessageInfos:      file_kira_gov_proposal_proto_msgTypes,
	}.Build()
	File_kira_gov_proposal_proto = out.File
	file_kira_gov_proposal_proto_rawDesc = nil
	file_kira_gov_proposal_proto_goTypes = nil
	file_kira_gov_proposal_proto_depIdxs = nil
}
