// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.1
// source: kira/slashing/v1beta1/proposal.proto

package types

import (
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/gogo/protobuf/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProposalResetWholeValidatorRank struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Proposer    []byte `protobuf:"bytes,1,opt,name=proposer,proto3" json:"proposer,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *ProposalResetWholeValidatorRank) Reset() {
	*x = ProposalResetWholeValidatorRank{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_slashing_v1beta1_proposal_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProposalResetWholeValidatorRank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposalResetWholeValidatorRank) ProtoMessage() {}

func (x *ProposalResetWholeValidatorRank) ProtoReflect() protoreflect.Message {
	mi := &file_kira_slashing_v1beta1_proposal_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposalResetWholeValidatorRank.ProtoReflect.Descriptor instead.
func (*ProposalResetWholeValidatorRank) Descriptor() ([]byte, []int) {
	return file_kira_slashing_v1beta1_proposal_proto_rawDescGZIP(), []int{0}
}

func (x *ProposalResetWholeValidatorRank) GetProposer() []byte {
	if x != nil {
		return x.Proposer
	}
	return nil
}

func (x *ProposalResetWholeValidatorRank) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ProposalSlashValidator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offender         string                 `protobuf:"bytes,1,opt,name=offender,proto3" json:"offender,omitempty"` // validator address that commited a fault
	StakingPoolId    uint64                 `protobuf:"varint,2,opt,name=staking_pool_id,json=stakingPoolId,proto3" json:"staking_pool_id,omitempty"`
	MisbehaviourTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=misbehaviour_time,json=misbehaviourTime,proto3" json:"misbehaviour_time,omitempty"` // time at which misbehaviour occured
	MisbehaviourType string                 `protobuf:"bytes,4,opt,name=misbehaviour_type,json=misbehaviourType,proto3" json:"misbehaviour_type,omitempty"` // default "double-signing", string type of evidence (in the future there can be different types)
	JailPercentage   uint64                 `protobuf:"varint,5,opt,name=jail_percentage,json=jailPercentage,proto3" json:"jail_percentage,omitempty"`      // percentage of validators that was jailed (colluded)
	Colluders        []string               `protobuf:"bytes,6,rep,name=colluders,proto3" json:"colluders,omitempty"`                                       // list of validator who colluded with a misbehaving validator "kiraXXX...XXX", "kiraXXX...XXX", ..., "kiraXXX...XXX"]
	Refutation       string                 `protobuf:"bytes,7,opt,name=refutation,proto3" json:"refutation,omitempty"`                                     // validator supplied counter-evidence proving that his behaviour was not intentionally malicious
}

func (x *ProposalSlashValidator) Reset() {
	*x = ProposalSlashValidator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_slashing_v1beta1_proposal_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProposalSlashValidator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposalSlashValidator) ProtoMessage() {}

func (x *ProposalSlashValidator) ProtoReflect() protoreflect.Message {
	mi := &file_kira_slashing_v1beta1_proposal_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposalSlashValidator.ProtoReflect.Descriptor instead.
func (*ProposalSlashValidator) Descriptor() ([]byte, []int) {
	return file_kira_slashing_v1beta1_proposal_proto_rawDescGZIP(), []int{1}
}

func (x *ProposalSlashValidator) GetOffender() string {
	if x != nil {
		return x.Offender
	}
	return ""
}

func (x *ProposalSlashValidator) GetStakingPoolId() uint64 {
	if x != nil {
		return x.StakingPoolId
	}
	return 0
}

func (x *ProposalSlashValidator) GetMisbehaviourTime() *timestamppb.Timestamp {
	if x != nil {
		return x.MisbehaviourTime
	}
	return nil
}

func (x *ProposalSlashValidator) GetMisbehaviourType() string {
	if x != nil {
		return x.MisbehaviourType
	}
	return ""
}

func (x *ProposalSlashValidator) GetJailPercentage() uint64 {
	if x != nil {
		return x.JailPercentage
	}
	return 0
}

func (x *ProposalSlashValidator) GetColluders() []string {
	if x != nil {
		return x.Colluders
	}
	return nil
}

func (x *ProposalSlashValidator) GetRefutation() string {
	if x != nil {
		return x.Refutation
	}
	return ""
}

var File_kira_slashing_v1beta1_proposal_proto protoreflect.FileDescriptor

var file_kira_slashing_v1beta1_proposal_proto_rawDesc = []byte{
	0x0a, 0x24, 0x6b, 0x69, 0x72, 0x61, 0x2f, 0x73, 0x6c, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2f,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x73, 0x6c, 0x61,
	0x73, 0x68, 0x69, 0x6e, 0x67, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x92, 0x01, 0x0a, 0x1f, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x65, 0x74, 0x57, 0x68, 0x6f, 0x6c, 0x65, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x4d, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x31, 0xfa,
	0xde, 0x1f, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc3, 0x02, 0x0a,
	0x16, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x53, 0x6c, 0x61, 0x73, 0x68, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x66, 0x66, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x66, 0x66, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x70,
	0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x73, 0x74,
	0x61, 0x6b, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x51, 0x0a, 0x11, 0x6d,
	0x69, 0x73, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x75, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x42, 0x08, 0xc8, 0xde, 0x1f, 0x00, 0x90, 0xdf, 0x1f, 0x01, 0x52, 0x10, 0x6d, 0x69,
	0x73, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x75, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2b,
	0x0a, 0x11, 0x6d, 0x69, 0x73, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x75, 0x72, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6d, 0x69, 0x73, 0x62, 0x65,
	0x68, 0x61, 0x76, 0x69, 0x6f, 0x75, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x6a,
	0x61, 0x69, 0x6c, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x6a, 0x61, 0x69, 0x6c, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6c, 0x6c, 0x75, 0x64, 0x65, 0x72,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6c, 0x6c, 0x75, 0x64, 0x65,
	0x72, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x66, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x75, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x2c, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x4b, 0x69, 0x72, 0x61, 0x43, 0x6f, 0x72, 0x65, 0x2f, 0x73, 0x65, 0x6b, 0x61, 0x69, 0x2f,
	0x78, 0x2f, 0x73, 0x6c, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kira_slashing_v1beta1_proposal_proto_rawDescOnce sync.Once
	file_kira_slashing_v1beta1_proposal_proto_rawDescData = file_kira_slashing_v1beta1_proposal_proto_rawDesc
)

func file_kira_slashing_v1beta1_proposal_proto_rawDescGZIP() []byte {
	file_kira_slashing_v1beta1_proposal_proto_rawDescOnce.Do(func() {
		file_kira_slashing_v1beta1_proposal_proto_rawDescData = protoimpl.X.CompressGZIP(file_kira_slashing_v1beta1_proposal_proto_rawDescData)
	})
	return file_kira_slashing_v1beta1_proposal_proto_rawDescData
}

var file_kira_slashing_v1beta1_proposal_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_kira_slashing_v1beta1_proposal_proto_goTypes = []interface{}{
	(*ProposalResetWholeValidatorRank)(nil), // 0: kira.slashing.ProposalResetWholeValidatorRank
	(*ProposalSlashValidator)(nil),          // 1: kira.slashing.ProposalSlashValidator
	(*timestamppb.Timestamp)(nil),           // 2: google.protobuf.Timestamp
}
var file_kira_slashing_v1beta1_proposal_proto_depIdxs = []int32{
	2, // 0: kira.slashing.ProposalSlashValidator.misbehaviour_time:type_name -> google.protobuf.Timestamp
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_kira_slashing_v1beta1_proposal_proto_init() }
func file_kira_slashing_v1beta1_proposal_proto_init() {
	if File_kira_slashing_v1beta1_proposal_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kira_slashing_v1beta1_proposal_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProposalResetWholeValidatorRank); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_slashing_v1beta1_proposal_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProposalSlashValidator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kira_slashing_v1beta1_proposal_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_kira_slashing_v1beta1_proposal_proto_goTypes,
		DependencyIndexes: file_kira_slashing_v1beta1_proposal_proto_depIdxs,
		MessageInfos:      file_kira_slashing_v1beta1_proposal_proto_msgTypes,
	}.Build()
	File_kira_slashing_v1beta1_proposal_proto = out.File
	file_kira_slashing_v1beta1_proposal_proto_rawDesc = nil
	file_kira_slashing_v1beta1_proposal_proto_goTypes = nil
	file_kira_slashing_v1beta1_proposal_proto_depIdxs = nil
}
