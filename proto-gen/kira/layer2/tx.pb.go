// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.1
// source: kira/layer2/tx.proto

package types

import (
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/gogo/protobuf/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// allow to raise dApp launch proposal using a token
// bond or with a dedicated permission (where no starting 1% bond needed). Fail
// proposal if min_dapp_bond is not reached. This proposal does NOT require
// governance approval only sufficient number of bonded tokens.
type MsgCreateDappProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Dapp   *Dapp  `protobuf:"bytes,2,opt,name=dapp,proto3" json:"dapp,omitempty"`
	Bond   string `protobuf:"bytes,3,opt,name=bond,proto3" json:"bond,omitempty"`
}

func (x *MsgCreateDappProposal) Reset() {
	*x = MsgCreateDappProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_layer2_tx_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCreateDappProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCreateDappProposal) ProtoMessage() {}

func (x *MsgCreateDappProposal) ProtoReflect() protoreflect.Message {
	mi := &file_kira_layer2_tx_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgCreateDappProposal.ProtoReflect.Descriptor instead.
func (*MsgCreateDappProposal) Descriptor() ([]byte, []int) {
	return file_kira_layer2_tx_proto_rawDescGZIP(), []int{0}
}

func (x *MsgCreateDappProposal) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MsgCreateDappProposal) GetDapp() *Dapp {
	if x != nil {
		return x.Dapp
	}
	return nil
}

func (x *MsgCreateDappProposal) GetBond() string {
	if x != nil {
		return x.Bond
	}
	return ""
}

type MsgCreateDappProposalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgCreateDappProposalResponse) Reset() {
	*x = MsgCreateDappProposalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_layer2_tx_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCreateDappProposalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCreateDappProposalResponse) ProtoMessage() {}

func (x *MsgCreateDappProposalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_layer2_tx_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgCreateDappProposalResponse.ProtoReflect.Descriptor instead.
func (*MsgCreateDappProposalResponse) Descriptor() ([]byte, []int) {
	return file_kira_layer2_tx_proto_rawDescGZIP(), []int{1}
}

// allow KEX holders to bond extra tokens to dApp
// proposal unless max_dapp_bond is reached in which case fail the tx.
type MsgBondDappProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender   string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	DappName string `protobuf:"bytes,2,opt,name=dapp_name,json=dappName,proto3" json:"dapp_name,omitempty"`
	Bond     string `protobuf:"bytes,3,opt,name=bond,proto3" json:"bond,omitempty"`
}

func (x *MsgBondDappProposal) Reset() {
	*x = MsgBondDappProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_layer2_tx_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgBondDappProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgBondDappProposal) ProtoMessage() {}

func (x *MsgBondDappProposal) ProtoReflect() protoreflect.Message {
	mi := &file_kira_layer2_tx_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgBondDappProposal.ProtoReflect.Descriptor instead.
func (*MsgBondDappProposal) Descriptor() ([]byte, []int) {
	return file_kira_layer2_tx_proto_rawDescGZIP(), []int{2}
}

func (x *MsgBondDappProposal) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MsgBondDappProposal) GetDappName() string {
	if x != nil {
		return x.DappName
	}
	return ""
}

func (x *MsgBondDappProposal) GetBond() string {
	if x != nil {
		return x.Bond
	}
	return ""
}

type MsgBondDappProposalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgBondDappProposalResponse) Reset() {
	*x = MsgBondDappProposalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_layer2_tx_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgBondDappProposalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgBondDappProposalResponse) ProtoMessage() {}

func (x *MsgBondDappProposalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_layer2_tx_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgBondDappProposalResponse.ProtoReflect.Descriptor instead.
func (*MsgBondDappProposalResponse) Descriptor() ([]byte, []int) {
	return file_kira_layer2_tx_proto_rawDescGZIP(), []int{3}
}

// claim your KEX back from dApp proposal, should
// be possible to execute regardless if the proposal is still ongoing or failed
type MsgReclaimDappBondProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender   string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	DappName string `protobuf:"bytes,2,opt,name=dapp_name,json=dappName,proto3" json:"dapp_name,omitempty"`
	Bond     string `protobuf:"bytes,3,opt,name=bond,proto3" json:"bond,omitempty"`
}

func (x *MsgReclaimDappBondProposal) Reset() {
	*x = MsgReclaimDappBondProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_layer2_tx_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgReclaimDappBondProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgReclaimDappBondProposal) ProtoMessage() {}

func (x *MsgReclaimDappBondProposal) ProtoReflect() protoreflect.Message {
	mi := &file_kira_layer2_tx_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgReclaimDappBondProposal.ProtoReflect.Descriptor instead.
func (*MsgReclaimDappBondProposal) Descriptor() ([]byte, []int) {
	return file_kira_layer2_tx_proto_rawDescGZIP(), []int{4}
}

func (x *MsgReclaimDappBondProposal) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MsgReclaimDappBondProposal) GetDappName() string {
	if x != nil {
		return x.DappName
	}
	return ""
}

func (x *MsgReclaimDappBondProposal) GetBond() string {
	if x != nil {
		return x.Bond
	}
	return ""
}

type MsgReclaimDappBondProposalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgReclaimDappBondProposalResponse) Reset() {
	*x = MsgReclaimDappBondProposalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_layer2_tx_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgReclaimDappBondProposalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgReclaimDappBondProposalResponse) ProtoMessage() {}

func (x *MsgReclaimDappBondProposalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_layer2_tx_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgReclaimDappBondProposalResponse.ProtoReflect.Descriptor instead.
func (*MsgReclaimDappBondProposalResponse) Descriptor() ([]byte, []int) {
	return file_kira_layer2_tx_proto_rawDescGZIP(), []int{5}
}

type MsgJoinDappVerifierWithBond struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender   string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	DappName string `protobuf:"bytes,2,opt,name=dapp_name,json=dappName,proto3" json:"dapp_name,omitempty"`
	Interx   string `protobuf:"bytes,3,opt,name=interx,proto3" json:"interx,omitempty"` // must be set to a valid kira address
}

func (x *MsgJoinDappVerifierWithBond) Reset() {
	*x = MsgJoinDappVerifierWithBond{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_layer2_tx_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgJoinDappVerifierWithBond) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgJoinDappVerifierWithBond) ProtoMessage() {}

func (x *MsgJoinDappVerifierWithBond) ProtoReflect() protoreflect.Message {
	mi := &file_kira_layer2_tx_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgJoinDappVerifierWithBond.ProtoReflect.Descriptor instead.
func (*MsgJoinDappVerifierWithBond) Descriptor() ([]byte, []int) {
	return file_kira_layer2_tx_proto_rawDescGZIP(), []int{6}
}

func (x *MsgJoinDappVerifierWithBond) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MsgJoinDappVerifierWithBond) GetDappName() string {
	if x != nil {
		return x.DappName
	}
	return ""
}

func (x *MsgJoinDappVerifierWithBond) GetInterx() string {
	if x != nil {
		return x.Interx
	}
	return ""
}

type MsgJoinDappVerifierWithBondResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgJoinDappVerifierWithBondResponse) Reset() {
	*x = MsgJoinDappVerifierWithBondResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_layer2_tx_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgJoinDappVerifierWithBondResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgJoinDappVerifierWithBondResponse) ProtoMessage() {}

func (x *MsgJoinDappVerifierWithBondResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_layer2_tx_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgJoinDappVerifierWithBondResponse.ProtoReflect.Descriptor instead.
func (*MsgJoinDappVerifierWithBondResponse) Descriptor() ([]byte, []int) {
	return file_kira_layer2_tx_proto_rawDescGZIP(), []int{7}
}

// stop being a dApp operator and remove the record in the Execution Registrar.
// Return bonded funds if the operator is a verifier.
type MsgExitDapp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender   string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	DappName string `protobuf:"bytes,2,opt,name=dapp_name,json=dappName,proto3" json:"dapp_name,omitempty"`
}

func (x *MsgExitDapp) Reset() {
	*x = MsgExitDapp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_layer2_tx_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgExitDapp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgExitDapp) ProtoMessage() {}

func (x *MsgExitDapp) ProtoReflect() protoreflect.Message {
	mi := &file_kira_layer2_tx_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgExitDapp.ProtoReflect.Descriptor instead.
func (*MsgExitDapp) Descriptor() ([]byte, []int) {
	return file_kira_layer2_tx_proto_rawDescGZIP(), []int{8}
}

func (x *MsgExitDapp) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MsgExitDapp) GetDappName() string {
	if x != nil {
		return x.DappName
	}
	return ""
}

type MsgExitDappResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgExitDappResponse) Reset() {
	*x = MsgExitDappResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_layer2_tx_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgExitDappResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgExitDappResponse) ProtoMessage() {}

func (x *MsgExitDappResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_layer2_tx_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgExitDappResponse.ProtoReflect.Descriptor instead.
func (*MsgExitDappResponse) Descriptor() ([]byte, []int) {
	return file_kira_layer2_tx_proto_rawDescGZIP(), []int{9}
}

// return lp_<denom> tokens to the pool and redeem KEX or dp_<denom> token
// unless slippage is exceeded then fail the tx.
type MsgRedeemDappPoolTx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender   string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	DappName string `protobuf:"bytes,2,opt,name=dapp_name,json=dappName,proto3" json:"dapp_name,omitempty"`
	LpToken  string `protobuf:"bytes,3,opt,name=lp_token,json=lpToken,proto3" json:"lp_token,omitempty"`
	Slippage string `protobuf:"bytes,4,opt,name=slippage,proto3" json:"slippage,omitempty"`
}

func (x *MsgRedeemDappPoolTx) Reset() {
	*x = MsgRedeemDappPoolTx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_layer2_tx_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRedeemDappPoolTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRedeemDappPoolTx) ProtoMessage() {}

func (x *MsgRedeemDappPoolTx) ProtoReflect() protoreflect.Message {
	mi := &file_kira_layer2_tx_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRedeemDappPoolTx.ProtoReflect.Descriptor instead.
func (*MsgRedeemDappPoolTx) Descriptor() ([]byte, []int) {
	return file_kira_layer2_tx_proto_rawDescGZIP(), []int{10}
}

func (x *MsgRedeemDappPoolTx) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MsgRedeemDappPoolTx) GetDappName() string {
	if x != nil {
		return x.DappName
	}
	return ""
}

func (x *MsgRedeemDappPoolTx) GetLpToken() string {
	if x != nil {
		return x.LpToken
	}
	return ""
}

func (x *MsgRedeemDappPoolTx) GetSlippage() string {
	if x != nil {
		return x.Slippage
	}
	return ""
}

type MsgRedeemDappPoolTxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgRedeemDappPoolTxResponse) Reset() {
	*x = MsgRedeemDappPoolTxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_layer2_tx_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRedeemDappPoolTxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRedeemDappPoolTxResponse) ProtoMessage() {}

func (x *MsgRedeemDappPoolTxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_layer2_tx_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRedeemDappPoolTxResponse.ProtoReflect.Descriptor instead.
func (*MsgRedeemDappPoolTxResponse) Descriptor() ([]byte, []int) {
	return file_kira_layer2_tx_proto_rawDescGZIP(), []int{11}
}

// send KEX and receive dp_<denom> or send dp_<denom> and receive KEX unless
// slippage is exceeded then fail the tx.
type MsgSwapDappPoolTx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender   string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	DappName string `protobuf:"bytes,2,opt,name=dapp_name,json=dappName,proto3" json:"dapp_name,omitempty"`
	Token    string `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	Slippage string `protobuf:"bytes,4,opt,name=slippage,proto3" json:"slippage,omitempty"`
}

func (x *MsgSwapDappPoolTx) Reset() {
	*x = MsgSwapDappPoolTx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_layer2_tx_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgSwapDappPoolTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgSwapDappPoolTx) ProtoMessage() {}

func (x *MsgSwapDappPoolTx) ProtoReflect() protoreflect.Message {
	mi := &file_kira_layer2_tx_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgSwapDappPoolTx.ProtoReflect.Descriptor instead.
func (*MsgSwapDappPoolTx) Descriptor() ([]byte, []int) {
	return file_kira_layer2_tx_proto_rawDescGZIP(), []int{12}
}

func (x *MsgSwapDappPoolTx) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MsgSwapDappPoolTx) GetDappName() string {
	if x != nil {
		return x.DappName
	}
	return ""
}

func (x *MsgSwapDappPoolTx) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *MsgSwapDappPoolTx) GetSlippage() string {
	if x != nil {
		return x.Slippage
	}
	return ""
}

type MsgSwapDappPoolTxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgSwapDappPoolTxResponse) Reset() {
	*x = MsgSwapDappPoolTxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_layer2_tx_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgSwapDappPoolTxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgSwapDappPoolTxResponse) ProtoMessage() {}

func (x *MsgSwapDappPoolTxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_layer2_tx_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgSwapDappPoolTxResponse.ProtoReflect.Descriptor instead.
func (*MsgSwapDappPoolTxResponse) Descriptor() ([]byte, []int) {
	return file_kira_layer2_tx_proto_rawDescGZIP(), []int{13}
}

// allow user to convert any dp_<denom> for any other dp_<denom> token unless
// slippage is exceeded then fail the tx.
type MsgConvertDappPoolTx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender         string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	DappName       string `protobuf:"bytes,2,opt,name=dapp_name,json=dappName,proto3" json:"dapp_name,omitempty"`
	TargetDappName string `protobuf:"bytes,3,opt,name=target_dapp_name,json=targetDappName,proto3" json:"target_dapp_name,omitempty"`
	LpToken        string `protobuf:"bytes,4,opt,name=lp_token,json=lpToken,proto3" json:"lp_token,omitempty"`
	Slippage       string `protobuf:"bytes,5,opt,name=slippage,proto3" json:"slippage,omitempty"`
}

func (x *MsgConvertDappPoolTx) Reset() {
	*x = MsgConvertDappPoolTx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_layer2_tx_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgConvertDappPoolTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgConvertDappPoolTx) ProtoMessage() {}

func (x *MsgConvertDappPoolTx) ProtoReflect() protoreflect.Message {
	mi := &file_kira_layer2_tx_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgConvertDappPoolTx.ProtoReflect.Descriptor instead.
func (*MsgConvertDappPoolTx) Descriptor() ([]byte, []int) {
	return file_kira_layer2_tx_proto_rawDescGZIP(), []int{14}
}

func (x *MsgConvertDappPoolTx) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MsgConvertDappPoolTx) GetDappName() string {
	if x != nil {
		return x.DappName
	}
	return ""
}

func (x *MsgConvertDappPoolTx) GetTargetDappName() string {
	if x != nil {
		return x.TargetDappName
	}
	return ""
}

func (x *MsgConvertDappPoolTx) GetLpToken() string {
	if x != nil {
		return x.LpToken
	}
	return ""
}

func (x *MsgConvertDappPoolTx) GetSlippage() string {
	if x != nil {
		return x.Slippage
	}
	return ""
}

type MsgConvertDappPoolTxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgConvertDappPoolTxResponse) Reset() {
	*x = MsgConvertDappPoolTxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_layer2_tx_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgConvertDappPoolTxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgConvertDappPoolTxResponse) ProtoMessage() {}

func (x *MsgConvertDappPoolTxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_layer2_tx_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgConvertDappPoolTxResponse.ProtoReflect.Descriptor instead.
func (*MsgConvertDappPoolTxResponse) Descriptor() ([]byte, []int) {
	return file_kira_layer2_tx_proto_rawDescGZIP(), []int{15}
}

// allow executors to change their status to paused. This tx does NOT pause the
// dApp, it only pauses the ability of an executor to continue running the dApp
// in the next session. If the executor is currently running the session then he
// needs to finish it before paused status is applied.
type MsgPauseDappTx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender   string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	DappName string `protobuf:"bytes,2,opt,name=dapp_name,json=dappName,proto3" json:"dapp_name,omitempty"`
}

func (x *MsgPauseDappTx) Reset() {
	*x = MsgPauseDappTx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_layer2_tx_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgPauseDappTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgPauseDappTx) ProtoMessage() {}

func (x *MsgPauseDappTx) ProtoReflect() protoreflect.Message {
	mi := &file_kira_layer2_tx_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgPauseDappTx.ProtoReflect.Descriptor instead.
func (*MsgPauseDappTx) Descriptor() ([]byte, []int) {
	return file_kira_layer2_tx_proto_rawDescGZIP(), []int{16}
}

func (x *MsgPauseDappTx) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MsgPauseDappTx) GetDappName() string {
	if x != nil {
		return x.DappName
	}
	return ""
}

type MsgPauseDappTxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgPauseDappTxResponse) Reset() {
	*x = MsgPauseDappTxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_layer2_tx_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgPauseDappTxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgPauseDappTxResponse) ProtoMessage() {}

func (x *MsgPauseDappTxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_layer2_tx_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgPauseDappTxResponse.ProtoReflect.Descriptor instead.
func (*MsgPauseDappTxResponse) Descriptor() ([]byte, []int) {
	return file_kira_layer2_tx_proto_rawDescGZIP(), []int{17}
}

// exit maintenance mode to signal that verifier or executor is ready to operate
// the dApp again.
type MsgUnPauseDappTx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender   string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	DappName string `protobuf:"bytes,2,opt,name=dapp_name,json=dappName,proto3" json:"dapp_name,omitempty"`
}

func (x *MsgUnPauseDappTx) Reset() {
	*x = MsgUnPauseDappTx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_layer2_tx_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUnPauseDappTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUnPauseDappTx) ProtoMessage() {}

func (x *MsgUnPauseDappTx) ProtoReflect() protoreflect.Message {
	mi := &file_kira_layer2_tx_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUnPauseDappTx.ProtoReflect.Descriptor instead.
func (*MsgUnPauseDappTx) Descriptor() ([]byte, []int) {
	return file_kira_layer2_tx_proto_rawDescGZIP(), []int{18}
}

func (x *MsgUnPauseDappTx) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MsgUnPauseDappTx) GetDappName() string {
	if x != nil {
		return x.DappName
	}
	return ""
}

type MsgUnPauseDappTxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgUnPauseDappTxResponse) Reset() {
	*x = MsgUnPauseDappTxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_layer2_tx_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUnPauseDappTxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUnPauseDappTxResponse) ProtoMessage() {}

func (x *MsgUnPauseDappTxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_layer2_tx_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUnPauseDappTxResponse.ProtoReflect.Descriptor instead.
func (*MsgUnPauseDappTxResponse) Descriptor() ([]byte, []int) {
	return file_kira_layer2_tx_proto_rawDescGZIP(), []int{19}
}

// re-activate deactivated dApp operator
type MsgReactivateDappTx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender   string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	DappName string `protobuf:"bytes,2,opt,name=dapp_name,json=dappName,proto3" json:"dapp_name,omitempty"`
}

func (x *MsgReactivateDappTx) Reset() {
	*x = MsgReactivateDappTx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_layer2_tx_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgReactivateDappTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgReactivateDappTx) ProtoMessage() {}

func (x *MsgReactivateDappTx) ProtoReflect() protoreflect.Message {
	mi := &file_kira_layer2_tx_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgReactivateDappTx.ProtoReflect.Descriptor instead.
func (*MsgReactivateDappTx) Descriptor() ([]byte, []int) {
	return file_kira_layer2_tx_proto_rawDescGZIP(), []int{20}
}

func (x *MsgReactivateDappTx) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MsgReactivateDappTx) GetDappName() string {
	if x != nil {
		return x.DappName
	}
	return ""
}

type MsgReactivateDappTxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgReactivateDappTxResponse) Reset() {
	*x = MsgReactivateDappTxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_layer2_tx_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgReactivateDappTxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgReactivateDappTxResponse) ProtoMessage() {}

func (x *MsgReactivateDappTxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_layer2_tx_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgReactivateDappTxResponse.ProtoReflect.Descriptor instead.
func (*MsgReactivateDappTxResponse) Descriptor() ([]byte, []int) {
	return file_kira_layer2_tx_proto_rawDescGZIP(), []int{21}
}

// allow next session leader to announce or update his IP address and start
// execution.
type MsgExecuteDappTx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender   string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	DappName string `protobuf:"bytes,2,opt,name=dapp_name,json=dappName,proto3" json:"dapp_name,omitempty"`
	Gateway  string `protobuf:"bytes,3,opt,name=gateway,proto3" json:"gateway,omitempty"`
}

func (x *MsgExecuteDappTx) Reset() {
	*x = MsgExecuteDappTx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_layer2_tx_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgExecuteDappTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgExecuteDappTx) ProtoMessage() {}

func (x *MsgExecuteDappTx) ProtoReflect() protoreflect.Message {
	mi := &file_kira_layer2_tx_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgExecuteDappTx.ProtoReflect.Descriptor instead.
func (*MsgExecuteDappTx) Descriptor() ([]byte, []int) {
	return file_kira_layer2_tx_proto_rawDescGZIP(), []int{22}
}

func (x *MsgExecuteDappTx) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MsgExecuteDappTx) GetDappName() string {
	if x != nil {
		return x.DappName
	}
	return ""
}

func (x *MsgExecuteDappTx) GetGateway() string {
	if x != nil {
		return x.Gateway
	}
	return ""
}

type MsgExecuteDappTxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgExecuteDappTxResponse) Reset() {
	*x = MsgExecuteDappTxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_layer2_tx_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgExecuteDappTxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgExecuteDappTxResponse) ProtoMessage() {}

func (x *MsgExecuteDappTxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_layer2_tx_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgExecuteDappTxResponse.ProtoReflect.Descriptor instead.
func (*MsgExecuteDappTxResponse) Descriptor() ([]byte, []int) {
	return file_kira_layer2_tx_proto_rawDescGZIP(), []int{23}
}

// allow executors to denounce the current session leader, should take a
// session id as a parameter as well as a true or false flag to allow vote
// change.
type MsgDenounceLeaderTx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender       string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	DappName     string `protobuf:"bytes,2,opt,name=dapp_name,json=dappName,proto3" json:"dapp_name,omitempty"`
	Leader       string `protobuf:"bytes,3,opt,name=leader,proto3" json:"leader,omitempty"`
	DenounceText string `protobuf:"bytes,4,opt,name=denounce_text,json=denounceText,proto3" json:"denounce_text,omitempty"`
	Version      string `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *MsgDenounceLeaderTx) Reset() {
	*x = MsgDenounceLeaderTx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_layer2_tx_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDenounceLeaderTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDenounceLeaderTx) ProtoMessage() {}

func (x *MsgDenounceLeaderTx) ProtoReflect() protoreflect.Message {
	mi := &file_kira_layer2_tx_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDenounceLeaderTx.ProtoReflect.Descriptor instead.
func (*MsgDenounceLeaderTx) Descriptor() ([]byte, []int) {
	return file_kira_layer2_tx_proto_rawDescGZIP(), []int{24}
}

func (x *MsgDenounceLeaderTx) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MsgDenounceLeaderTx) GetDappName() string {
	if x != nil {
		return x.DappName
	}
	return ""
}

func (x *MsgDenounceLeaderTx) GetLeader() string {
	if x != nil {
		return x.Leader
	}
	return ""
}

func (x *MsgDenounceLeaderTx) GetDenounceText() string {
	if x != nil {
		return x.DenounceText
	}
	return ""
}

func (x *MsgDenounceLeaderTx) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type MsgDenounceLeaderTxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgDenounceLeaderTxResponse) Reset() {
	*x = MsgDenounceLeaderTxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_layer2_tx_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDenounceLeaderTxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDenounceLeaderTxResponse) ProtoMessage() {}

func (x *MsgDenounceLeaderTxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_layer2_tx_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDenounceLeaderTxResponse.ProtoReflect.Descriptor instead.
func (*MsgDenounceLeaderTxResponse) Descriptor() ([]byte, []int) {
	return file_kira_layer2_tx_proto_rawDescGZIP(), []int{25}
}

// update CURRENT session state (can only be sent by current session leader),
// this tx MUST include dApp version.
type MsgTransitionDappTx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender          string       `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	DappName        string       `protobuf:"bytes,2,opt,name=dapp_name,json=dappName,proto3" json:"dapp_name,omitempty"`
	StatusHash      string       `protobuf:"bytes,3,opt,name=status_hash,json=statusHash,proto3" json:"status_hash,omitempty"`
	OnchainMessages []*anypb.Any `protobuf:"bytes,4,rep,name=onchain_messages,json=onchainMessages,proto3" json:"onchain_messages,omitempty"` // dapp mints, xam creations, xam accepts
	Version         string       `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *MsgTransitionDappTx) Reset() {
	*x = MsgTransitionDappTx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_layer2_tx_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgTransitionDappTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgTransitionDappTx) ProtoMessage() {}

func (x *MsgTransitionDappTx) ProtoReflect() protoreflect.Message {
	mi := &file_kira_layer2_tx_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgTransitionDappTx.ProtoReflect.Descriptor instead.
func (*MsgTransitionDappTx) Descriptor() ([]byte, []int) {
	return file_kira_layer2_tx_proto_rawDescGZIP(), []int{26}
}

func (x *MsgTransitionDappTx) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MsgTransitionDappTx) GetDappName() string {
	if x != nil {
		return x.DappName
	}
	return ""
}

func (x *MsgTransitionDappTx) GetStatusHash() string {
	if x != nil {
		return x.StatusHash
	}
	return ""
}

func (x *MsgTransitionDappTx) GetOnchainMessages() []*anypb.Any {
	if x != nil {
		return x.OnchainMessages
	}
	return nil
}

func (x *MsgTransitionDappTx) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type MsgTransitionDappTxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgTransitionDappTxResponse) Reset() {
	*x = MsgTransitionDappTxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_layer2_tx_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgTransitionDappTxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgTransitionDappTxResponse) ProtoMessage() {}

func (x *MsgTransitionDappTxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_layer2_tx_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgTransitionDappTxResponse.ProtoReflect.Descriptor instead.
func (*MsgTransitionDappTxResponse) Descriptor() ([]byte, []int) {
	return file_kira_layer2_tx_proto_rawDescGZIP(), []int{27}
}

// approve CURRENT session state (can only be sent by the verifiers or executors
// who are NOT a leader), this tx MUST include dApp version.
type MsgApproveDappTransitionTx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender   string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	DappName string `protobuf:"bytes,2,opt,name=dapp_name,json=dappName,proto3" json:"dapp_name,omitempty"`
	Version  string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *MsgApproveDappTransitionTx) Reset() {
	*x = MsgApproveDappTransitionTx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_layer2_tx_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgApproveDappTransitionTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgApproveDappTransitionTx) ProtoMessage() {}

func (x *MsgApproveDappTransitionTx) ProtoReflect() protoreflect.Message {
	mi := &file_kira_layer2_tx_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgApproveDappTransitionTx.ProtoReflect.Descriptor instead.
func (*MsgApproveDappTransitionTx) Descriptor() ([]byte, []int) {
	return file_kira_layer2_tx_proto_rawDescGZIP(), []int{28}
}

func (x *MsgApproveDappTransitionTx) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MsgApproveDappTransitionTx) GetDappName() string {
	if x != nil {
		return x.DappName
	}
	return ""
}

func (x *MsgApproveDappTransitionTx) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type MsgApproveDappTransitionTxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgApproveDappTransitionTxResponse) Reset() {
	*x = MsgApproveDappTransitionTxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_layer2_tx_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgApproveDappTransitionTxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgApproveDappTransitionTxResponse) ProtoMessage() {}

func (x *MsgApproveDappTransitionTxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_layer2_tx_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgApproveDappTransitionTxResponse.ProtoReflect.Descriptor instead.
func (*MsgApproveDappTransitionTxResponse) Descriptor() ([]byte, []int) {
	return file_kira_layer2_tx_proto_rawDescGZIP(), []int{29}
}

// reject session transition and immediately set the state of the current
// session to halted, this tx MUST include dApp version and session id.
type MsgRejectDappTransitionTx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender   string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	DappName string `protobuf:"bytes,2,opt,name=dapp_name,json=dappName,proto3" json:"dapp_name,omitempty"`
	Version  string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *MsgRejectDappTransitionTx) Reset() {
	*x = MsgRejectDappTransitionTx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_layer2_tx_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRejectDappTransitionTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRejectDappTransitionTx) ProtoMessage() {}

func (x *MsgRejectDappTransitionTx) ProtoReflect() protoreflect.Message {
	mi := &file_kira_layer2_tx_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRejectDappTransitionTx.ProtoReflect.Descriptor instead.
func (*MsgRejectDappTransitionTx) Descriptor() ([]byte, []int) {
	return file_kira_layer2_tx_proto_rawDescGZIP(), []int{30}
}

func (x *MsgRejectDappTransitionTx) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MsgRejectDappTransitionTx) GetDappName() string {
	if x != nil {
		return x.DappName
	}
	return ""
}

func (x *MsgRejectDappTransitionTx) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type MsgRejectDappTransitionTxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgRejectDappTransitionTxResponse) Reset() {
	*x = MsgRejectDappTransitionTxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_layer2_tx_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRejectDappTransitionTxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRejectDappTransitionTxResponse) ProtoMessage() {}

func (x *MsgRejectDappTransitionTxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_layer2_tx_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRejectDappTransitionTxResponse.ProtoReflect.Descriptor instead.
func (*MsgRejectDappTransitionTxResponse) Descriptor() ([]byte, []int) {
	return file_kira_layer2_tx_proto_rawDescGZIP(), []int{31}
}

// allow user to manually deposit/transfer/withdrawal funds to / from / within
// ABR and communicate with apps by including xam string message.
type MsgTransferDappTx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender   string        `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Requests []*XAMRequest `protobuf:"bytes,2,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *MsgTransferDappTx) Reset() {
	*x = MsgTransferDappTx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_layer2_tx_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgTransferDappTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgTransferDappTx) ProtoMessage() {}

func (x *MsgTransferDappTx) ProtoReflect() protoreflect.Message {
	mi := &file_kira_layer2_tx_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgTransferDappTx.ProtoReflect.Descriptor instead.
func (*MsgTransferDappTx) Descriptor() ([]byte, []int) {
	return file_kira_layer2_tx_proto_rawDescGZIP(), []int{32}
}

func (x *MsgTransferDappTx) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MsgTransferDappTx) GetRequests() []*XAMRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

type MsgTransferDappTxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgTransferDappTxResponse) Reset() {
	*x = MsgTransferDappTxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_layer2_tx_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgTransferDappTxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgTransferDappTxResponse) ProtoMessage() {}

func (x *MsgTransferDappTxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_layer2_tx_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgTransferDappTxResponse.ProtoReflect.Descriptor instead.
func (*MsgTransferDappTxResponse) Descriptor() ([]byte, []int) {
	return file_kira_layer2_tx_proto_rawDescGZIP(), []int{33}
}

// acknowledgement of transfer dapp tx
type MsgAckTransferDappTx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender    string         `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Responses []*XAMResponse `protobuf:"bytes,2,rep,name=responses,proto3" json:"responses,omitempty"`
}

func (x *MsgAckTransferDappTx) Reset() {
	*x = MsgAckTransferDappTx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_layer2_tx_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAckTransferDappTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAckTransferDappTx) ProtoMessage() {}

func (x *MsgAckTransferDappTx) ProtoReflect() protoreflect.Message {
	mi := &file_kira_layer2_tx_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgAckTransferDappTx.ProtoReflect.Descriptor instead.
func (*MsgAckTransferDappTx) Descriptor() ([]byte, []int) {
	return file_kira_layer2_tx_proto_rawDescGZIP(), []int{34}
}

func (x *MsgAckTransferDappTx) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MsgAckTransferDappTx) GetResponses() []*XAMResponse {
	if x != nil {
		return x.Responses
	}
	return nil
}

type MsgAckTransferDappTxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgAckTransferDappTxResponse) Reset() {
	*x = MsgAckTransferDappTxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_layer2_tx_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAckTransferDappTxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAckTransferDappTxResponse) ProtoMessage() {}

func (x *MsgAckTransferDappTxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_layer2_tx_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgAckTransferDappTxResponse.ProtoReflect.Descriptor instead.
func (*MsgAckTransferDappTxResponse) Descriptor() ([]byte, []int) {
	return file_kira_layer2_tx_proto_rawDescGZIP(), []int{35}
}

// create new fungible token record in the minting module
type MsgMintCreateFtTx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender      string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	DenomSuffix string `protobuf:"bytes,2,opt,name=denom_suffix,json=denomSuffix,proto3" json:"denom_suffix,omitempty"` // suffix that must be applied to the token, min 3 and max 8 lowercase alphabetic characters only (a-z)
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                                  // full name, eg. Bitcoin, (can only be changed by the proposal-upsert-alias)
	Symbol      string `protobuf:"bytes,4,opt,name=symbol,proto3" json:"symbol,omitempty"`                              // symbnol, eg. KEX, BTC, (can only be changed by the proposal-upsert-alias)
	Icon        string `protobuf:"bytes,5,opt,name=icon,proto3" json:"icon,omitempty"`                                  // url 256 chars max, (can be changed by owner or proposal-upsert-alias)
	Description string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`                    // 512 chars max, (can be changed by owner or proposal-upsert-alias)
	Website     string `protobuf:"bytes,7,opt,name=website,proto3" json:"website,omitempty"`                            // url 256 chars max, (can be changed by owner or proposal-upsert-alias)
	Social      string `protobuf:"bytes,8,opt,name=social,proto3" json:"social,omitempty"`                              // url 256 chars max, (can be changed by owner or proposal-upsert-alias)
	Decimals    uint32 `protobuf:"varint,9,opt,name=decimals,proto3" json:"decimals,omitempty"`                         // min 0, max 255, (can NOT be changed)
	Cap         string `protobuf:"bytes,10,opt,name=cap,proto3" json:"cap,omitempty"`                                   // maximum supply that can be issued, max 2^256 - 1, (can NOT be INCREASED or decreased below current circulatin supply)
	Supply      string `protobuf:"bytes,11,opt,name=supply,proto3" json:"supply,omitempty"`                             // current circulating supply can NOT be more then CAP
	Holders     uint64 `protobuf:"varint,12,opt,name=holders,proto3" json:"holders,omitempty"`
	FeeRate     string `protobuf:"bytes,13,opt,name=fee_rate,json=feeRate,proto3" json:"fee_rate,omitempty"` // cost of minting 10^decimals per X ukex, can only increase (can be changed by owner only)
	Owner       string `protobuf:"bytes,14,opt,name=owner,proto3" json:"owner,omitempty"`                    // owner address or "" if noone should be able to modify most important properties
}

func (x *MsgMintCreateFtTx) Reset() {
	*x = MsgMintCreateFtTx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_layer2_tx_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgMintCreateFtTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgMintCreateFtTx) ProtoMessage() {}

func (x *MsgMintCreateFtTx) ProtoReflect() protoreflect.Message {
	mi := &file_kira_layer2_tx_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgMintCreateFtTx.ProtoReflect.Descriptor instead.
func (*MsgMintCreateFtTx) Descriptor() ([]byte, []int) {
	return file_kira_layer2_tx_proto_rawDescGZIP(), []int{36}
}

func (x *MsgMintCreateFtTx) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MsgMintCreateFtTx) GetDenomSuffix() string {
	if x != nil {
		return x.DenomSuffix
	}
	return ""
}

func (x *MsgMintCreateFtTx) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MsgMintCreateFtTx) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *MsgMintCreateFtTx) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *MsgMintCreateFtTx) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MsgMintCreateFtTx) GetWebsite() string {
	if x != nil {
		return x.Website
	}
	return ""
}

func (x *MsgMintCreateFtTx) GetSocial() string {
	if x != nil {
		return x.Social
	}
	return ""
}

func (x *MsgMintCreateFtTx) GetDecimals() uint32 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

func (x *MsgMintCreateFtTx) GetCap() string {
	if x != nil {
		return x.Cap
	}
	return ""
}

func (x *MsgMintCreateFtTx) GetSupply() string {
	if x != nil {
		return x.Supply
	}
	return ""
}

func (x *MsgMintCreateFtTx) GetHolders() uint64 {
	if x != nil {
		return x.Holders
	}
	return 0
}

func (x *MsgMintCreateFtTx) GetFeeRate() string {
	if x != nil {
		return x.FeeRate
	}
	return ""
}

func (x *MsgMintCreateFtTx) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

type MsgMintCreateFtTxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgMintCreateFtTxResponse) Reset() {
	*x = MsgMintCreateFtTxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_layer2_tx_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgMintCreateFtTxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgMintCreateFtTxResponse) ProtoMessage() {}

func (x *MsgMintCreateFtTxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_layer2_tx_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgMintCreateFtTxResponse.ProtoReflect.Descriptor instead.
func (*MsgMintCreateFtTxResponse) Descriptor() ([]byte, []int) {
	return file_kira_layer2_tx_proto_rawDescGZIP(), []int{37}
}

// create new non-fungible token record in the minting module
type MsgMintCreateNftTx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender      string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	DenomSuffix string `protobuf:"bytes,2,opt,name=denom_suffix,json=denomSuffix,proto3" json:"denom_suffix,omitempty"` // suffix that must be applied to the token, min 3 and max 8 lowercase alphabetic characters only (a-z)
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                                  // full name, eg. Bitcoin, (can only be changed by the proposal-upsert-alias)
	Symbol      string `protobuf:"bytes,4,opt,name=symbol,proto3" json:"symbol,omitempty"`                              // symbnol, eg. KEX, BTC, (can only be changed by the proposal-upsert-alias)
	Icon        string `protobuf:"bytes,5,opt,name=icon,proto3" json:"icon,omitempty"`                                  // url 256 chars max, (can be changed by owner or proposal-upsert-alias)
	Description string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`                    // 512 chars max, (can be changed by owner or proposal-upsert-alias)
	Website     string `protobuf:"bytes,7,opt,name=website,proto3" json:"website,omitempty"`                            // url 256 chars max, (can be changed by owner or proposal-upsert-alias)
	Social      string `protobuf:"bytes,8,opt,name=social,proto3" json:"social,omitempty"`                              // url 256 chars max, (can be changed by owner or proposal-upsert-alias)
	Decimals    uint32 `protobuf:"varint,9,opt,name=decimals,proto3" json:"decimals,omitempty"`                         // min 0, max 255, (can NOT be changed)
	Cap         string `protobuf:"bytes,10,opt,name=cap,proto3" json:"cap,omitempty"`                                   // maximum supply that can be issued, max 2^256 - 1, (can NOT be INCREASED or decreased below current circulatin supply)
	Supply      string `protobuf:"bytes,11,opt,name=supply,proto3" json:"supply,omitempty"`                             // current circulating supply can NOT be more then CAP
	Holders     uint64 `protobuf:"varint,12,opt,name=holders,proto3" json:"holders,omitempty"`
	FeeRate     string `protobuf:"bytes,13,opt,name=fee_rate,json=feeRate,proto3" json:"fee_rate,omitempty"` // cost of minting 10^decimals per X ukex, can only increase (can be changed by owner only)
	Owner       string `protobuf:"bytes,14,opt,name=owner,proto3" json:"owner,omitempty"`                    // owner address or "" if noone should be able to modify most important properties
	Metadata    string `protobuf:"bytes,15,opt,name=metadata,proto3" json:"metadata,omitempty"`              // metadata url or CID
	Hash        string `protobuf:"bytes,16,opt,name=hash,proto3" json:"hash,omitempty"`                      // hexadecimal metadata checksum
}

func (x *MsgMintCreateNftTx) Reset() {
	*x = MsgMintCreateNftTx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_layer2_tx_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgMintCreateNftTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgMintCreateNftTx) ProtoMessage() {}

func (x *MsgMintCreateNftTx) ProtoReflect() protoreflect.Message {
	mi := &file_kira_layer2_tx_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgMintCreateNftTx.ProtoReflect.Descriptor instead.
func (*MsgMintCreateNftTx) Descriptor() ([]byte, []int) {
	return file_kira_layer2_tx_proto_rawDescGZIP(), []int{38}
}

func (x *MsgMintCreateNftTx) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MsgMintCreateNftTx) GetDenomSuffix() string {
	if x != nil {
		return x.DenomSuffix
	}
	return ""
}

func (x *MsgMintCreateNftTx) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MsgMintCreateNftTx) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *MsgMintCreateNftTx) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *MsgMintCreateNftTx) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MsgMintCreateNftTx) GetWebsite() string {
	if x != nil {
		return x.Website
	}
	return ""
}

func (x *MsgMintCreateNftTx) GetSocial() string {
	if x != nil {
		return x.Social
	}
	return ""
}

func (x *MsgMintCreateNftTx) GetDecimals() uint32 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

func (x *MsgMintCreateNftTx) GetCap() string {
	if x != nil {
		return x.Cap
	}
	return ""
}

func (x *MsgMintCreateNftTx) GetSupply() string {
	if x != nil {
		return x.Supply
	}
	return ""
}

func (x *MsgMintCreateNftTx) GetHolders() uint64 {
	if x != nil {
		return x.Holders
	}
	return 0
}

func (x *MsgMintCreateNftTx) GetFeeRate() string {
	if x != nil {
		return x.FeeRate
	}
	return ""
}

func (x *MsgMintCreateNftTx) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *MsgMintCreateNftTx) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

func (x *MsgMintCreateNftTx) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type MsgMintCreateNftTxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgMintCreateNftTxResponse) Reset() {
	*x = MsgMintCreateNftTxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_layer2_tx_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgMintCreateNftTxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgMintCreateNftTxResponse) ProtoMessage() {}

func (x *MsgMintCreateNftTxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_layer2_tx_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgMintCreateNftTxResponse.ProtoReflect.Descriptor instead.
func (*MsgMintCreateNftTxResponse) Descriptor() ([]byte, []int) {
	return file_kira_layer2_tx_proto_rawDescGZIP(), []int{39}
}

// allow owner to mint new tokens or anyone if the minting-fee is set to value
// other then 0.
type MsgMintIssueTx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender   string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Denom    string `protobuf:"bytes,2,opt,name=denom,proto3" json:"denom,omitempty"`
	Amount   string `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Receiver string `protobuf:"bytes,4,opt,name=receiver,proto3" json:"receiver,omitempty"`
}

func (x *MsgMintIssueTx) Reset() {
	*x = MsgMintIssueTx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_layer2_tx_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgMintIssueTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgMintIssueTx) ProtoMessage() {}

func (x *MsgMintIssueTx) ProtoReflect() protoreflect.Message {
	mi := &file_kira_layer2_tx_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgMintIssueTx.ProtoReflect.Descriptor instead.
func (*MsgMintIssueTx) Descriptor() ([]byte, []int) {
	return file_kira_layer2_tx_proto_rawDescGZIP(), []int{40}
}

func (x *MsgMintIssueTx) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MsgMintIssueTx) GetDenom() string {
	if x != nil {
		return x.Denom
	}
	return ""
}

func (x *MsgMintIssueTx) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *MsgMintIssueTx) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

type MsgMintIssueTxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgMintIssueTxResponse) Reset() {
	*x = MsgMintIssueTxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_layer2_tx_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgMintIssueTxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgMintIssueTxResponse) ProtoMessage() {}

func (x *MsgMintIssueTxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_layer2_tx_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgMintIssueTxResponse.ProtoReflect.Descriptor instead.
func (*MsgMintIssueTxResponse) Descriptor() ([]byte, []int) {
	return file_kira_layer2_tx_proto_rawDescGZIP(), []int{41}
}

// allow anyone burn the tokens they own
type MsgMintBurnTx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Denom  string `protobuf:"bytes,2,opt,name=denom,proto3" json:"denom,omitempty"`
	Amount string `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *MsgMintBurnTx) Reset() {
	*x = MsgMintBurnTx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_layer2_tx_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgMintBurnTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgMintBurnTx) ProtoMessage() {}

func (x *MsgMintBurnTx) ProtoReflect() protoreflect.Message {
	mi := &file_kira_layer2_tx_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgMintBurnTx.ProtoReflect.Descriptor instead.
func (*MsgMintBurnTx) Descriptor() ([]byte, []int) {
	return file_kira_layer2_tx_proto_rawDescGZIP(), []int{42}
}

func (x *MsgMintBurnTx) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MsgMintBurnTx) GetDenom() string {
	if x != nil {
		return x.Denom
	}
	return ""
}

func (x *MsgMintBurnTx) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type MsgMintBurnTxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgMintBurnTxResponse) Reset() {
	*x = MsgMintBurnTxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_layer2_tx_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgMintBurnTxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgMintBurnTxResponse) ProtoMessage() {}

func (x *MsgMintBurnTxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_layer2_tx_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgMintBurnTxResponse.ProtoReflect.Descriptor instead.
func (*MsgMintBurnTxResponse) Descriptor() ([]byte, []int) {
	return file_kira_layer2_tx_proto_rawDescGZIP(), []int{43}
}

var File_kira_layer2_tx_proto protoreflect.FileDescriptor

var file_kira_layer2_tx_proto_rawDesc = []byte{
	0x0a, 0x14, 0x6b, 0x69, 0x72, 0x61, 0x2f, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x32, 0x2f, 0x74, 0x78,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x32, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67,
	0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x18, 0x6b, 0x69, 0x72, 0x61, 0x2f, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x32, 0x2f, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa1, 0x01, 0x0a, 0x15, 0x4d, 0x73,
	0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x70, 0x70, 0x50, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x04, 0x64,
	0x61, 0x70, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6b, 0x69, 0x72, 0x61,
	0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x32, 0x2e, 0x44, 0x61, 0x70, 0x70, 0x42, 0x04, 0xc8, 0xde,
	0x1f, 0x00, 0x52, 0x04, 0x64, 0x61, 0x70, 0x70, 0x12, 0x43, 0x0a, 0x04, 0x62, 0x6f, 0x6e, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2f, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x27,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x04, 0x62, 0x6f, 0x6e, 0x64, 0x22, 0x1f, 0x0a,
	0x1d, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x70, 0x70, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8f,
	0x01, 0x0a, 0x13, 0x4d, 0x73, 0x67, 0x42, 0x6f, 0x6e, 0x64, 0x44, 0x61, 0x70, 0x70, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1b,
	0x0a, 0x09, 0x64, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x43, 0x0a, 0x04, 0x62,
	0x6f, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2f, 0xc8, 0xde, 0x1f, 0x00, 0xda,
	0xde, 0x1f, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x04, 0x62, 0x6f, 0x6e, 0x64,
	0x22, 0x1d, 0x0a, 0x1b, 0x4d, 0x73, 0x67, 0x42, 0x6f, 0x6e, 0x64, 0x44, 0x61, 0x70, 0x70, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x96, 0x01, 0x0a, 0x1a, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x44, 0x61,
	0x70, 0x70, 0x42, 0x6f, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x70, 0x70, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x70, 0x70, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x43, 0x0a, 0x04, 0x62, 0x6f, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x2f, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x6f,
	0x69, 0x6e, 0x52, 0x04, 0x62, 0x6f, 0x6e, 0x64, 0x22, 0x24, 0x0a, 0x22, 0x4d, 0x73, 0x67, 0x52,
	0x65, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x44, 0x61, 0x70, 0x70, 0x42, 0x6f, 0x6e, 0x64, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6a,
	0x0a, 0x1b, 0x4d, 0x73, 0x67, 0x4a, 0x6f, 0x69, 0x6e, 0x44, 0x61, 0x70, 0x70, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x42, 0x6f, 0x6e, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x70, 0x70, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x78, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x78, 0x22, 0x25, 0x0a, 0x23, 0x4d, 0x73,
	0x67, 0x4a, 0x6f, 0x69, 0x6e, 0x44, 0x61, 0x70, 0x70, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x57, 0x69, 0x74, 0x68, 0x42, 0x6f, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x42, 0x0a, 0x0b, 0x4d, 0x73, 0x67, 0x45, 0x78, 0x69, 0x74, 0x44, 0x61, 0x70, 0x70,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x70, 0x70,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x70,
	0x70, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x4d, 0x73, 0x67, 0x45, 0x78, 0x69, 0x74,
	0x44, 0x61, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xe2, 0x01, 0x0a,
	0x13, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x44, 0x61, 0x70, 0x70, 0x50, 0x6f,
	0x6f, 0x6c, 0x54, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09,
	0x64, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4a, 0x0a, 0x08, 0x6c, 0x70, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2f, 0xc8, 0xde, 0x1f,
	0x00, 0xda, 0xde, 0x1f, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64,
	0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x07, 0x6c, 0x70,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x4a, 0x0a, 0x08, 0x73, 0x6c, 0x69, 0x70, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2e, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f,
	0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x63, 0x52, 0x08, 0x73, 0x6c, 0x69, 0x70, 0x70, 0x61, 0x67,
	0x65, 0x22, 0x1d, 0x0a, 0x1b, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x44, 0x61,
	0x70, 0x70, 0x50, 0x6f, 0x6f, 0x6c, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0xdb, 0x01, 0x0a, 0x11, 0x4d, 0x73, 0x67, 0x53, 0x77, 0x61, 0x70, 0x44, 0x61, 0x70, 0x70,
	0x50, 0x6f, 0x6f, 0x6c, 0x54, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1b,
	0x0a, 0x09, 0x64, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x45, 0x0a, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2f, 0xc8, 0xde, 0x1f, 0x00,
	0xda, 0xde, 0x1f, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b,
	0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x4a, 0x0a, 0x08, 0x73, 0x6c, 0x69, 0x70, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x2e, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x26, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x44, 0x65, 0x63, 0x52, 0x08, 0x73, 0x6c, 0x69, 0x70, 0x70, 0x61, 0x67, 0x65, 0x22, 0x1b,
	0x0a, 0x19, 0x4d, 0x73, 0x67, 0x53, 0x77, 0x61, 0x70, 0x44, 0x61, 0x70, 0x70, 0x50, 0x6f, 0x6f,
	0x6c, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8d, 0x02, 0x0a, 0x14,
	0x4d, 0x73, 0x67, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x44, 0x61, 0x70, 0x70, 0x50, 0x6f,
	0x6f, 0x6c, 0x54, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09,
	0x64, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x5f, 0x64, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x44, 0x61, 0x70, 0x70, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x4a, 0x0a, 0x08, 0x6c, 0x70, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2f, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x27, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x07, 0x6c, 0x70, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x4a, 0x0a, 0x08, 0x73, 0x6c, 0x69, 0x70, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x2e, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x44, 0x65,
	0x63, 0x52, 0x08, 0x73, 0x6c, 0x69, 0x70, 0x70, 0x61, 0x67, 0x65, 0x22, 0x1e, 0x0a, 0x1c, 0x4d,
	0x73, 0x67, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x44, 0x61, 0x70, 0x70, 0x50, 0x6f, 0x6f,
	0x6c, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x45, 0x0a, 0x0e, 0x4d,
	0x73, 0x67, 0x50, 0x61, 0x75, 0x73, 0x65, 0x44, 0x61, 0x70, 0x70, 0x54, 0x78, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x70, 0x70, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x4d, 0x73, 0x67, 0x50, 0x61, 0x75, 0x73, 0x65, 0x44, 0x61,
	0x70, 0x70, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x47, 0x0a, 0x10,
	0x4d, 0x73, 0x67, 0x55, 0x6e, 0x50, 0x61, 0x75, 0x73, 0x65, 0x44, 0x61, 0x70, 0x70, 0x54, 0x78,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x70, 0x70,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x70,
	0x70, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x1a, 0x0a, 0x18, 0x4d, 0x73, 0x67, 0x55, 0x6e, 0x50, 0x61,
	0x75, 0x73, 0x65, 0x44, 0x61, 0x70, 0x70, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x4a, 0x0a, 0x13, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x44, 0x61, 0x70, 0x70, 0x54, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x1d, 0x0a,
	0x1b, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x44, 0x61,
	0x70, 0x70, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x61, 0x0a, 0x10,
	0x4d, 0x73, 0x67, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x44, 0x61, 0x70, 0x70, 0x54, 0x78,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x70, 0x70,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x70,
	0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x22,
	0x1a, 0x0a, 0x18, 0x4d, 0x73, 0x67, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x44, 0x61, 0x70,
	0x70, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa1, 0x01, 0x0a, 0x13,
	0x4d, 0x73, 0x67, 0x44, 0x65, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x54, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x64,
	0x61, 0x70, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x5f, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x6e, 0x6f, 0x75, 0x6e, 0x63,
	0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0x1d, 0x0a, 0x1b, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x4c, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xc6,
	0x01, 0x0a, 0x13, 0x4d, 0x73, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x61, 0x70, 0x70, 0x54, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1b,
	0x0a, 0x09, 0x64, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x61, 0x73, 0x68, 0x12, 0x3f, 0x0a, 0x10,
	0x6f, 0x6e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0f, 0x6f, 0x6e,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x1d, 0x0a, 0x1b, 0x4d, 0x73, 0x67, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x70, 0x70, 0x54, 0x78, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6b, 0x0a, 0x1a, 0x4d, 0x73, 0x67, 0x41, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x65, 0x44, 0x61, 0x70, 0x70, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09,
	0x64, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x22, 0x24, 0x0a, 0x22, 0x4d, 0x73, 0x67, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x65, 0x44, 0x61, 0x70, 0x70, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6a, 0x0a, 0x19, 0x4d, 0x73, 0x67,
	0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x70, 0x70, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1b,
	0x0a, 0x09, 0x64, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x23, 0x0a, 0x21, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x6a, 0x65,
	0x63, 0x74, 0x44, 0x61, 0x70, 0x70, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x66, 0x0a, 0x11, 0x4d, 0x73,
	0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x44, 0x61, 0x70, 0x70, 0x54, 0x78, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6b, 0x69, 0x72, 0x61,
	0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x32, 0x2e, 0x58, 0x41, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x22, 0x1b, 0x0a, 0x19, 0x4d, 0x73, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x44, 0x61, 0x70, 0x70, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x6c, 0x0a, 0x14, 0x4d, 0x73, 0x67, 0x41, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x44, 0x61, 0x70, 0x70, 0x54, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12,
	0x3c, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x32,
	0x2e, 0x58, 0x41, 0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x04, 0xc8, 0xde,
	0x1f, 0x00, 0x52, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x22, 0x1e, 0x0a,
	0x1c, 0x4d, 0x73, 0x67, 0x41, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x44,
	0x61, 0x70, 0x70, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x83, 0x04,
	0x0a, 0x11, 0x4d, 0x73, 0x67, 0x4d, 0x69, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46,
	0x74, 0x54, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x64,
	0x65, 0x6e, 0x6f, 0x6d, 0x5f, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x53, 0x75, 0x66, 0x66, 0x69, 0x78, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f,
	0x63, 0x69, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x63, 0x69,
	0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x12, 0x40,
	0x0a, 0x03, 0x63, 0x61, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2e, 0xc8, 0xde, 0x1f,
	0x00, 0xda, 0xde, 0x1f, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64,
	0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x52, 0x03, 0x63, 0x61, 0x70,
	0x12, 0x46, 0x0a, 0x06, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x2e, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74,
	0x52, 0x06, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x68, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x73, 0x12, 0x49, 0x0a, 0x08, 0x66, 0x65, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x2e, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x26, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x44, 0x65, 0x63, 0x52, 0x07, 0x66, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x22, 0x1b, 0x0a, 0x19, 0x4d, 0x73, 0x67, 0x4d, 0x69, 0x6e, 0x74, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x46, 0x74, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0xb4, 0x04, 0x0a, 0x12, 0x4d, 0x73, 0x67, 0x4d, 0x69, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4e, 0x66, 0x74, 0x54, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12,
	0x21, 0x0a, 0x0c, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x5f, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x53, 0x75, 0x66, 0x66,
	0x69, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x12,
	0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63,
	0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61,
	0x6c, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61,
	0x6c, 0x73, 0x12, 0x40, 0x0a, 0x03, 0x63, 0x61, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x2e, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x52,
	0x03, 0x63, 0x61, 0x70, 0x12, 0x46, 0x0a, 0x06, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x2e, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x26, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x49, 0x6e, 0x74, 0x52, 0x06, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x68,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x12, 0x49, 0x0a, 0x08, 0x66, 0x65, 0x65, 0x5f, 0x72, 0x61,
	0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2e, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde,
	0x1f, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x63, 0x52, 0x07, 0x66, 0x65, 0x65, 0x52, 0x61, 0x74,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x1c, 0x0a, 0x1a, 0x4d, 0x73, 0x67, 0x4d, 0x69,
	0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x66, 0x74, 0x54, 0x78, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa2, 0x01, 0x0a, 0x0e, 0x4d, 0x73, 0x67, 0x4d, 0x69, 0x6e,
	0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x54, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x46, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2e, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x26,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x22, 0x18, 0x0a, 0x16, 0x4d, 0x73,
	0x67, 0x4d, 0x69, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x0d, 0x4d, 0x73, 0x67, 0x4d, 0x69, 0x6e, 0x74,
	0x42, 0x75, 0x72, 0x6e, 0x54, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64,
	0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x46, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x2e, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x26, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x49, 0x6e, 0x74, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x17, 0x0a, 0x15,
	0x4d, 0x73, 0x67, 0x4d, 0x69, 0x6e, 0x74, 0x42, 0x75, 0x72, 0x6e, 0x54, 0x78, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xb6, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x64, 0x0a,
	0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x70, 0x70, 0x50, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x61, 0x6c, 0x12, 0x22, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x32, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x70, 0x70, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x1a, 0x2a, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44,
	0x61, 0x70, 0x70, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x10, 0x42, 0x6f, 0x6e, 0x64, 0x44, 0x61, 0x70, 0x70, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x20, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x42, 0x6f, 0x6e, 0x64, 0x44, 0x61, 0x70,
	0x70, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x1a, 0x28, 0x2e, 0x6b, 0x69, 0x72, 0x61,
	0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x42, 0x6f, 0x6e, 0x64, 0x44,
	0x61, 0x70, 0x70, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x73, 0x0a, 0x17, 0x52, 0x65, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x44, 0x61,
	0x70, 0x70, 0x42, 0x6f, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x27,
	0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x32, 0x2e, 0x4d, 0x73, 0x67,
	0x52, 0x65, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x44, 0x61, 0x70, 0x70, 0x42, 0x6f, 0x6e, 0x64, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x1a, 0x2f, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x63, 0x6c, 0x61, 0x69, 0x6d,
	0x44, 0x61, 0x70, 0x70, 0x42, 0x6f, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a, 0x18, 0x4a, 0x6f, 0x69, 0x6e,
	0x44, 0x61, 0x70, 0x70, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68,
	0x42, 0x6f, 0x6e, 0x64, 0x12, 0x28, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x4a, 0x6f, 0x69, 0x6e, 0x44, 0x61, 0x70, 0x70, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x42, 0x6f, 0x6e, 0x64, 0x1a, 0x30,
	0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x32, 0x2e, 0x4d, 0x73, 0x67,
	0x4a, 0x6f, 0x69, 0x6e, 0x44, 0x61, 0x70, 0x70, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x57, 0x69, 0x74, 0x68, 0x42, 0x6f, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x46, 0x0a, 0x08, 0x45, 0x78, 0x69, 0x74, 0x44, 0x61, 0x70, 0x70, 0x12, 0x18, 0x2e, 0x6b,
	0x69, 0x72, 0x61, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x45, 0x78,
	0x69, 0x74, 0x44, 0x61, 0x70, 0x70, 0x1a, 0x20, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x45, 0x78, 0x69, 0x74, 0x44, 0x61, 0x70, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x10, 0x52, 0x65, 0x64, 0x65,
	0x65, 0x6d, 0x44, 0x61, 0x70, 0x70, 0x50, 0x6f, 0x6f, 0x6c, 0x54, 0x78, 0x12, 0x20, 0x2e, 0x6b,
	0x69, 0x72, 0x61, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65,
	0x64, 0x65, 0x65, 0x6d, 0x44, 0x61, 0x70, 0x70, 0x50, 0x6f, 0x6f, 0x6c, 0x54, 0x78, 0x1a, 0x28,
	0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x32, 0x2e, 0x4d, 0x73, 0x67,
	0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x44, 0x61, 0x70, 0x70, 0x50, 0x6f, 0x6f, 0x6c, 0x54, 0x78,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x0e, 0x53, 0x77, 0x61, 0x70,
	0x44, 0x61, 0x70, 0x70, 0x50, 0x6f, 0x6f, 0x6c, 0x54, 0x78, 0x12, 0x1e, 0x2e, 0x6b, 0x69, 0x72,
	0x61, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x77, 0x61, 0x70,
	0x44, 0x61, 0x70, 0x70, 0x50, 0x6f, 0x6f, 0x6c, 0x54, 0x78, 0x1a, 0x26, 0x2e, 0x6b, 0x69, 0x72,
	0x61, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x77, 0x61, 0x70,
	0x44, 0x61, 0x70, 0x70, 0x50, 0x6f, 0x6f, 0x6c, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x61, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x44, 0x61, 0x70,
	0x70, 0x50, 0x6f, 0x6f, 0x6c, 0x54, 0x78, 0x12, 0x21, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74,
	0x44, 0x61, 0x70, 0x70, 0x50, 0x6f, 0x6f, 0x6c, 0x54, 0x78, 0x1a, 0x29, 0x2e, 0x6b, 0x69, 0x72,
	0x61, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x74, 0x44, 0x61, 0x70, 0x70, 0x50, 0x6f, 0x6f, 0x6c, 0x54, 0x78, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0b, 0x50, 0x61, 0x75, 0x73, 0x65, 0x44, 0x61,
	0x70, 0x70, 0x54, 0x78, 0x12, 0x1b, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x50, 0x61, 0x75, 0x73, 0x65, 0x44, 0x61, 0x70, 0x70, 0x54,
	0x78, 0x1a, 0x23, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x32, 0x2e,
	0x4d, 0x73, 0x67, 0x50, 0x61, 0x75, 0x73, 0x65, 0x44, 0x61, 0x70, 0x70, 0x54, 0x78, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x0d, 0x55, 0x6e, 0x50, 0x61, 0x75, 0x73,
	0x65, 0x44, 0x61, 0x70, 0x70, 0x54, 0x78, 0x12, 0x1d, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x6e, 0x50, 0x61, 0x75, 0x73, 0x65,
	0x44, 0x61, 0x70, 0x70, 0x54, 0x78, 0x1a, 0x25, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x6e, 0x50, 0x61, 0x75, 0x73, 0x65, 0x44,
	0x61, 0x70, 0x70, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a,
	0x10, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x44, 0x61, 0x70, 0x70, 0x54,
	0x78, 0x12, 0x20, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x32, 0x2e,
	0x4d, 0x73, 0x67, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x44, 0x61, 0x70,
	0x70, 0x54, 0x78, 0x1a, 0x28, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x32, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x44,
	0x61, 0x70, 0x70, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a,
	0x0d, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x44, 0x61, 0x70, 0x70, 0x54, 0x78, 0x12, 0x1d,
	0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x32, 0x2e, 0x4d, 0x73, 0x67,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x44, 0x61, 0x70, 0x70, 0x54, 0x78, 0x1a, 0x25, 0x2e,
	0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x44, 0x61, 0x70, 0x70, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x10, 0x44, 0x65, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65,
	0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x54, 0x78, 0x12, 0x20, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6e, 0x6f, 0x75, 0x6e,
	0x63, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x54, 0x78, 0x1a, 0x28, 0x2e, 0x6b, 0x69, 0x72,
	0x61, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6e, 0x6f,
	0x75, 0x6e, 0x63, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x10, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x61, 0x70, 0x70, 0x54, 0x78, 0x12, 0x20, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x70, 0x70, 0x54, 0x78, 0x1a, 0x28, 0x2e, 0x6b, 0x69, 0x72,
	0x61, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x70, 0x70, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x73, 0x0a, 0x17, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x44,
	0x61, 0x70, 0x70, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x78, 0x12,
	0x27, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x32, 0x2e, 0x4d, 0x73,
	0x67, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x44, 0x61, 0x70, 0x70, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x78, 0x1a, 0x2f, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x65, 0x44, 0x61, 0x70, 0x70, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x70, 0x0a, 0x16, 0x52, 0x65, 0x6a,
	0x65, 0x63, 0x74, 0x44, 0x61, 0x70, 0x70, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x78, 0x12, 0x26, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x32, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x70, 0x70, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x78, 0x1a, 0x2e, 0x2e, 0x6b, 0x69,
	0x72, 0x61, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x6a,
	0x65, 0x63, 0x74, 0x44, 0x61, 0x70, 0x70, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x0e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x44, 0x61, 0x70, 0x70, 0x54, 0x78, 0x12, 0x1e, 0x2e,
	0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x44, 0x61, 0x70, 0x70, 0x54, 0x78, 0x1a, 0x26, 0x2e,
	0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x44, 0x61, 0x70, 0x70, 0x54, 0x78, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x11, 0x41, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x44, 0x61, 0x70, 0x70, 0x54, 0x78, 0x12, 0x21, 0x2e, 0x6b, 0x69, 0x72,
	0x61, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x41, 0x63, 0x6b, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x44, 0x61, 0x70, 0x70, 0x54, 0x78, 0x1a, 0x29, 0x2e,
	0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x41,
	0x63, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x44, 0x61, 0x70, 0x70, 0x54, 0x78,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x0e, 0x4d, 0x69, 0x6e, 0x74,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x74, 0x54, 0x78, 0x12, 0x1e, 0x2e, 0x6b, 0x69, 0x72,
	0x61, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x4d, 0x69, 0x6e, 0x74,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x74, 0x54, 0x78, 0x1a, 0x26, 0x2e, 0x6b, 0x69, 0x72,
	0x61, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x4d, 0x69, 0x6e, 0x74,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x74, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5b, 0x0a, 0x0f, 0x4d, 0x69, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4e, 0x66, 0x74, 0x54, 0x78, 0x12, 0x1f, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x4d, 0x69, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4e, 0x66, 0x74, 0x54, 0x78, 0x1a, 0x27, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x4d, 0x69, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4e, 0x66, 0x74, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4f, 0x0a, 0x0b, 0x4d, 0x69, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x54, 0x78, 0x12, 0x1b,
	0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x32, 0x2e, 0x4d, 0x73, 0x67,
	0x4d, 0x69, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x54, 0x78, 0x1a, 0x23, 0x2e, 0x6b, 0x69,
	0x72, 0x61, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x4d, 0x69, 0x6e,
	0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4c, 0x0a, 0x0a, 0x4d, 0x69, 0x6e, 0x74, 0x42, 0x75, 0x72, 0x6e, 0x54, 0x78, 0x12, 0x1a,
	0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x32, 0x2e, 0x4d, 0x73, 0x67,
	0x4d, 0x69, 0x6e, 0x74, 0x42, 0x75, 0x72, 0x6e, 0x54, 0x78, 0x1a, 0x22, 0x2e, 0x6b, 0x69, 0x72,
	0x61, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x4d, 0x69, 0x6e, 0x74,
	0x42, 0x75, 0x72, 0x6e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x2e,
	0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4b, 0x69, 0x72,
	0x61, 0x43, 0x6f, 0x72, 0x65, 0x2f, 0x73, 0x65, 0x6b, 0x61, 0x69, 0x2f, 0x78, 0x2f, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x32, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0xa8, 0xe2, 0x1e, 0x01, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kira_layer2_tx_proto_rawDescOnce sync.Once
	file_kira_layer2_tx_proto_rawDescData = file_kira_layer2_tx_proto_rawDesc
)

func file_kira_layer2_tx_proto_rawDescGZIP() []byte {
	file_kira_layer2_tx_proto_rawDescOnce.Do(func() {
		file_kira_layer2_tx_proto_rawDescData = protoimpl.X.CompressGZIP(file_kira_layer2_tx_proto_rawDescData)
	})
	return file_kira_layer2_tx_proto_rawDescData
}

var file_kira_layer2_tx_proto_msgTypes = make([]protoimpl.MessageInfo, 44)
var file_kira_layer2_tx_proto_goTypes = []interface{}{
	(*MsgCreateDappProposal)(nil),               // 0: kira.layer2.MsgCreateDappProposal
	(*MsgCreateDappProposalResponse)(nil),       // 1: kira.layer2.MsgCreateDappProposalResponse
	(*MsgBondDappProposal)(nil),                 // 2: kira.layer2.MsgBondDappProposal
	(*MsgBondDappProposalResponse)(nil),         // 3: kira.layer2.MsgBondDappProposalResponse
	(*MsgReclaimDappBondProposal)(nil),          // 4: kira.layer2.MsgReclaimDappBondProposal
	(*MsgReclaimDappBondProposalResponse)(nil),  // 5: kira.layer2.MsgReclaimDappBondProposalResponse
	(*MsgJoinDappVerifierWithBond)(nil),         // 6: kira.layer2.MsgJoinDappVerifierWithBond
	(*MsgJoinDappVerifierWithBondResponse)(nil), // 7: kira.layer2.MsgJoinDappVerifierWithBondResponse
	(*MsgExitDapp)(nil),                         // 8: kira.layer2.MsgExitDapp
	(*MsgExitDappResponse)(nil),                 // 9: kira.layer2.MsgExitDappResponse
	(*MsgRedeemDappPoolTx)(nil),                 // 10: kira.layer2.MsgRedeemDappPoolTx
	(*MsgRedeemDappPoolTxResponse)(nil),         // 11: kira.layer2.MsgRedeemDappPoolTxResponse
	(*MsgSwapDappPoolTx)(nil),                   // 12: kira.layer2.MsgSwapDappPoolTx
	(*MsgSwapDappPoolTxResponse)(nil),           // 13: kira.layer2.MsgSwapDappPoolTxResponse
	(*MsgConvertDappPoolTx)(nil),                // 14: kira.layer2.MsgConvertDappPoolTx
	(*MsgConvertDappPoolTxResponse)(nil),        // 15: kira.layer2.MsgConvertDappPoolTxResponse
	(*MsgPauseDappTx)(nil),                      // 16: kira.layer2.MsgPauseDappTx
	(*MsgPauseDappTxResponse)(nil),              // 17: kira.layer2.MsgPauseDappTxResponse
	(*MsgUnPauseDappTx)(nil),                    // 18: kira.layer2.MsgUnPauseDappTx
	(*MsgUnPauseDappTxResponse)(nil),            // 19: kira.layer2.MsgUnPauseDappTxResponse
	(*MsgReactivateDappTx)(nil),                 // 20: kira.layer2.MsgReactivateDappTx
	(*MsgReactivateDappTxResponse)(nil),         // 21: kira.layer2.MsgReactivateDappTxResponse
	(*MsgExecuteDappTx)(nil),                    // 22: kira.layer2.MsgExecuteDappTx
	(*MsgExecuteDappTxResponse)(nil),            // 23: kira.layer2.MsgExecuteDappTxResponse
	(*MsgDenounceLeaderTx)(nil),                 // 24: kira.layer2.MsgDenounceLeaderTx
	(*MsgDenounceLeaderTxResponse)(nil),         // 25: kira.layer2.MsgDenounceLeaderTxResponse
	(*MsgTransitionDappTx)(nil),                 // 26: kira.layer2.MsgTransitionDappTx
	(*MsgTransitionDappTxResponse)(nil),         // 27: kira.layer2.MsgTransitionDappTxResponse
	(*MsgApproveDappTransitionTx)(nil),          // 28: kira.layer2.MsgApproveDappTransitionTx
	(*MsgApproveDappTransitionTxResponse)(nil),  // 29: kira.layer2.MsgApproveDappTransitionTxResponse
	(*MsgRejectDappTransitionTx)(nil),           // 30: kira.layer2.MsgRejectDappTransitionTx
	(*MsgRejectDappTransitionTxResponse)(nil),   // 31: kira.layer2.MsgRejectDappTransitionTxResponse
	(*MsgTransferDappTx)(nil),                   // 32: kira.layer2.MsgTransferDappTx
	(*MsgTransferDappTxResponse)(nil),           // 33: kira.layer2.MsgTransferDappTxResponse
	(*MsgAckTransferDappTx)(nil),                // 34: kira.layer2.MsgAckTransferDappTx
	(*MsgAckTransferDappTxResponse)(nil),        // 35: kira.layer2.MsgAckTransferDappTxResponse
	(*MsgMintCreateFtTx)(nil),                   // 36: kira.layer2.MsgMintCreateFtTx
	(*MsgMintCreateFtTxResponse)(nil),           // 37: kira.layer2.MsgMintCreateFtTxResponse
	(*MsgMintCreateNftTx)(nil),                  // 38: kira.layer2.MsgMintCreateNftTx
	(*MsgMintCreateNftTxResponse)(nil),          // 39: kira.layer2.MsgMintCreateNftTxResponse
	(*MsgMintIssueTx)(nil),                      // 40: kira.layer2.MsgMintIssueTx
	(*MsgMintIssueTxResponse)(nil),              // 41: kira.layer2.MsgMintIssueTxResponse
	(*MsgMintBurnTx)(nil),                       // 42: kira.layer2.MsgMintBurnTx
	(*MsgMintBurnTxResponse)(nil),               // 43: kira.layer2.MsgMintBurnTxResponse
	(*Dapp)(nil),                                // 44: kira.layer2.Dapp
	(*anypb.Any)(nil),                           // 45: google.protobuf.Any
	(*XAMRequest)(nil),                          // 46: kira.layer2.XAMRequest
	(*XAMResponse)(nil),                         // 47: kira.layer2.XAMResponse
}
var file_kira_layer2_tx_proto_depIdxs = []int32{
	44, // 0: kira.layer2.MsgCreateDappProposal.dapp:type_name -> kira.layer2.Dapp
	45, // 1: kira.layer2.MsgTransitionDappTx.onchain_messages:type_name -> google.protobuf.Any
	46, // 2: kira.layer2.MsgTransferDappTx.requests:type_name -> kira.layer2.XAMRequest
	47, // 3: kira.layer2.MsgAckTransferDappTx.responses:type_name -> kira.layer2.XAMResponse
	0,  // 4: kira.layer2.Msg.CreateDappProposal:input_type -> kira.layer2.MsgCreateDappProposal
	2,  // 5: kira.layer2.Msg.BondDappProposal:input_type -> kira.layer2.MsgBondDappProposal
	4,  // 6: kira.layer2.Msg.ReclaimDappBondProposal:input_type -> kira.layer2.MsgReclaimDappBondProposal
	6,  // 7: kira.layer2.Msg.JoinDappVerifierWithBond:input_type -> kira.layer2.MsgJoinDappVerifierWithBond
	8,  // 8: kira.layer2.Msg.ExitDapp:input_type -> kira.layer2.MsgExitDapp
	10, // 9: kira.layer2.Msg.RedeemDappPoolTx:input_type -> kira.layer2.MsgRedeemDappPoolTx
	12, // 10: kira.layer2.Msg.SwapDappPoolTx:input_type -> kira.layer2.MsgSwapDappPoolTx
	14, // 11: kira.layer2.Msg.ConvertDappPoolTx:input_type -> kira.layer2.MsgConvertDappPoolTx
	16, // 12: kira.layer2.Msg.PauseDappTx:input_type -> kira.layer2.MsgPauseDappTx
	18, // 13: kira.layer2.Msg.UnPauseDappTx:input_type -> kira.layer2.MsgUnPauseDappTx
	20, // 14: kira.layer2.Msg.ReactivateDappTx:input_type -> kira.layer2.MsgReactivateDappTx
	22, // 15: kira.layer2.Msg.ExecuteDappTx:input_type -> kira.layer2.MsgExecuteDappTx
	24, // 16: kira.layer2.Msg.DenounceLeaderTx:input_type -> kira.layer2.MsgDenounceLeaderTx
	26, // 17: kira.layer2.Msg.TransitionDappTx:input_type -> kira.layer2.MsgTransitionDappTx
	28, // 18: kira.layer2.Msg.ApproveDappTransitionTx:input_type -> kira.layer2.MsgApproveDappTransitionTx
	30, // 19: kira.layer2.Msg.RejectDappTransitionTx:input_type -> kira.layer2.MsgRejectDappTransitionTx
	32, // 20: kira.layer2.Msg.TransferDappTx:input_type -> kira.layer2.MsgTransferDappTx
	34, // 21: kira.layer2.Msg.AckTransferDappTx:input_type -> kira.layer2.MsgAckTransferDappTx
	36, // 22: kira.layer2.Msg.MintCreateFtTx:input_type -> kira.layer2.MsgMintCreateFtTx
	38, // 23: kira.layer2.Msg.MintCreateNftTx:input_type -> kira.layer2.MsgMintCreateNftTx
	40, // 24: kira.layer2.Msg.MintIssueTx:input_type -> kira.layer2.MsgMintIssueTx
	42, // 25: kira.layer2.Msg.MintBurnTx:input_type -> kira.layer2.MsgMintBurnTx
	1,  // 26: kira.layer2.Msg.CreateDappProposal:output_type -> kira.layer2.MsgCreateDappProposalResponse
	3,  // 27: kira.layer2.Msg.BondDappProposal:output_type -> kira.layer2.MsgBondDappProposalResponse
	5,  // 28: kira.layer2.Msg.ReclaimDappBondProposal:output_type -> kira.layer2.MsgReclaimDappBondProposalResponse
	7,  // 29: kira.layer2.Msg.JoinDappVerifierWithBond:output_type -> kira.layer2.MsgJoinDappVerifierWithBondResponse
	9,  // 30: kira.layer2.Msg.ExitDapp:output_type -> kira.layer2.MsgExitDappResponse
	11, // 31: kira.layer2.Msg.RedeemDappPoolTx:output_type -> kira.layer2.MsgRedeemDappPoolTxResponse
	13, // 32: kira.layer2.Msg.SwapDappPoolTx:output_type -> kira.layer2.MsgSwapDappPoolTxResponse
	15, // 33: kira.layer2.Msg.ConvertDappPoolTx:output_type -> kira.layer2.MsgConvertDappPoolTxResponse
	17, // 34: kira.layer2.Msg.PauseDappTx:output_type -> kira.layer2.MsgPauseDappTxResponse
	19, // 35: kira.layer2.Msg.UnPauseDappTx:output_type -> kira.layer2.MsgUnPauseDappTxResponse
	21, // 36: kira.layer2.Msg.ReactivateDappTx:output_type -> kira.layer2.MsgReactivateDappTxResponse
	23, // 37: kira.layer2.Msg.ExecuteDappTx:output_type -> kira.layer2.MsgExecuteDappTxResponse
	25, // 38: kira.layer2.Msg.DenounceLeaderTx:output_type -> kira.layer2.MsgDenounceLeaderTxResponse
	27, // 39: kira.layer2.Msg.TransitionDappTx:output_type -> kira.layer2.MsgTransitionDappTxResponse
	29, // 40: kira.layer2.Msg.ApproveDappTransitionTx:output_type -> kira.layer2.MsgApproveDappTransitionTxResponse
	31, // 41: kira.layer2.Msg.RejectDappTransitionTx:output_type -> kira.layer2.MsgRejectDappTransitionTxResponse
	33, // 42: kira.layer2.Msg.TransferDappTx:output_type -> kira.layer2.MsgTransferDappTxResponse
	35, // 43: kira.layer2.Msg.AckTransferDappTx:output_type -> kira.layer2.MsgAckTransferDappTxResponse
	37, // 44: kira.layer2.Msg.MintCreateFtTx:output_type -> kira.layer2.MsgMintCreateFtTxResponse
	39, // 45: kira.layer2.Msg.MintCreateNftTx:output_type -> kira.layer2.MsgMintCreateNftTxResponse
	41, // 46: kira.layer2.Msg.MintIssueTx:output_type -> kira.layer2.MsgMintIssueTxResponse
	43, // 47: kira.layer2.Msg.MintBurnTx:output_type -> kira.layer2.MsgMintBurnTxResponse
	26, // [26:48] is the sub-list for method output_type
	4,  // [4:26] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_kira_layer2_tx_proto_init() }
func file_kira_layer2_tx_proto_init() {
	if File_kira_layer2_tx_proto != nil {
		return
	}
	file_kira_layer2_layer2_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_kira_layer2_tx_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCreateDappProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_layer2_tx_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCreateDappProposalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_layer2_tx_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgBondDappProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_layer2_tx_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgBondDappProposalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_layer2_tx_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgReclaimDappBondProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_layer2_tx_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgReclaimDappBondProposalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_layer2_tx_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgJoinDappVerifierWithBond); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_layer2_tx_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgJoinDappVerifierWithBondResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_layer2_tx_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgExitDapp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_layer2_tx_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgExitDappResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_layer2_tx_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRedeemDappPoolTx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_layer2_tx_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRedeemDappPoolTxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_layer2_tx_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgSwapDappPoolTx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_layer2_tx_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgSwapDappPoolTxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_layer2_tx_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgConvertDappPoolTx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_layer2_tx_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgConvertDappPoolTxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_layer2_tx_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgPauseDappTx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_layer2_tx_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgPauseDappTxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_layer2_tx_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUnPauseDappTx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_layer2_tx_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUnPauseDappTxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_layer2_tx_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgReactivateDappTx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_layer2_tx_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgReactivateDappTxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_layer2_tx_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgExecuteDappTx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_layer2_tx_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgExecuteDappTxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_layer2_tx_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDenounceLeaderTx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_layer2_tx_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDenounceLeaderTxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_layer2_tx_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgTransitionDappTx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_layer2_tx_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgTransitionDappTxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_layer2_tx_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgApproveDappTransitionTx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_layer2_tx_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgApproveDappTransitionTxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_layer2_tx_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRejectDappTransitionTx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_layer2_tx_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRejectDappTransitionTxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_layer2_tx_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgTransferDappTx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_layer2_tx_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgTransferDappTxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_layer2_tx_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAckTransferDappTx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_layer2_tx_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAckTransferDappTxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_layer2_tx_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgMintCreateFtTx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_layer2_tx_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgMintCreateFtTxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_layer2_tx_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgMintCreateNftTx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_layer2_tx_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgMintCreateNftTxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_layer2_tx_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgMintIssueTx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_layer2_tx_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgMintIssueTxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_layer2_tx_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgMintBurnTx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_layer2_tx_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgMintBurnTxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kira_layer2_tx_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   44,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kira_layer2_tx_proto_goTypes,
		DependencyIndexes: file_kira_layer2_tx_proto_depIdxs,
		MessageInfos:      file_kira_layer2_tx_proto_msgTypes,
	}.Build()
	File_kira_layer2_tx_proto = out.File
	file_kira_layer2_tx_proto_rawDesc = nil
	file_kira_layer2_tx_proto_goTypes = nil
	file_kira_layer2_tx_proto_depIdxs = nil
}
