// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.1
// source: kira/spending/proposal.proto

package types

import (
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/gogo/protobuf/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/anypb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// proposal-spending-pool-update - a function to create a proposal allowing
// modification of the existing spending pool, adding owners, beneficiaries,
// or otherwise editing any of the existing properties.
type UpdateSpendingPoolProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ClaimStart        uint64            `protobuf:"varint,2,opt,name=claim_start,json=claimStart,proto3" json:"claim_start,omitempty"`
	ClaimEnd          uint64            `protobuf:"varint,3,opt,name=claim_end,json=claimEnd,proto3" json:"claim_end,omitempty"`
	Rates             []string          `protobuf:"bytes,4,rep,name=rates,proto3" json:"rates,omitempty"`
	VoteQuorum        string            `protobuf:"bytes,5,opt,name=vote_quorum,json=voteQuorum,proto3" json:"vote_quorum,omitempty"`           // percentage, # default: 51%
	VotePeriod        uint64            `protobuf:"varint,6,opt,name=vote_period,json=votePeriod,proto3" json:"vote_period,omitempty"`          // seconds, # default: 600s
	VoteEnactment     uint64            `protobuf:"varint,7,opt,name=vote_enactment,json=voteEnactment,proto3" json:"vote_enactment,omitempty"` // seconds, # default: 300s
	Owners            *PermInfo         `protobuf:"bytes,8,opt,name=owners,proto3" json:"owners,omitempty"`
	Beneficiaries     *WeightedPermInfo `protobuf:"bytes,9,opt,name=beneficiaries,proto3" json:"beneficiaries,omitempty"`
	DynamicRate       bool              `protobuf:"varint,10,opt,name=dynamic_rate,json=dynamicRate,proto3" json:"dynamic_rate,omitempty"`
	DynamicRatePeriod uint64            `protobuf:"varint,11,opt,name=dynamic_rate_period,json=dynamicRatePeriod,proto3" json:"dynamic_rate_period,omitempty"`
}

func (x *UpdateSpendingPoolProposal) Reset() {
	*x = UpdateSpendingPoolProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_spending_proposal_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSpendingPoolProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSpendingPoolProposal) ProtoMessage() {}

func (x *UpdateSpendingPoolProposal) ProtoReflect() protoreflect.Message {
	mi := &file_kira_spending_proposal_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSpendingPoolProposal.ProtoReflect.Descriptor instead.
func (*UpdateSpendingPoolProposal) Descriptor() ([]byte, []int) {
	return file_kira_spending_proposal_proto_rawDescGZIP(), []int{0}
}

func (x *UpdateSpendingPoolProposal) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateSpendingPoolProposal) GetClaimStart() uint64 {
	if x != nil {
		return x.ClaimStart
	}
	return 0
}

func (x *UpdateSpendingPoolProposal) GetClaimEnd() uint64 {
	if x != nil {
		return x.ClaimEnd
	}
	return 0
}

func (x *UpdateSpendingPoolProposal) GetRates() []string {
	if x != nil {
		return x.Rates
	}
	return nil
}

func (x *UpdateSpendingPoolProposal) GetVoteQuorum() string {
	if x != nil {
		return x.VoteQuorum
	}
	return ""
}

func (x *UpdateSpendingPoolProposal) GetVotePeriod() uint64 {
	if x != nil {
		return x.VotePeriod
	}
	return 0
}

func (x *UpdateSpendingPoolProposal) GetVoteEnactment() uint64 {
	if x != nil {
		return x.VoteEnactment
	}
	return 0
}

func (x *UpdateSpendingPoolProposal) GetOwners() *PermInfo {
	if x != nil {
		return x.Owners
	}
	return nil
}

func (x *UpdateSpendingPoolProposal) GetBeneficiaries() *WeightedPermInfo {
	if x != nil {
		return x.Beneficiaries
	}
	return nil
}

func (x *UpdateSpendingPoolProposal) GetDynamicRate() bool {
	if x != nil {
		return x.DynamicRate
	}
	return false
}

func (x *UpdateSpendingPoolProposal) GetDynamicRatePeriod() uint64 {
	if x != nil {
		return x.DynamicRatePeriod
	}
	return 0
}

// SpendingPoolDistributionProposal - force distribution of tokens to all
// beneficiaries registered in the claims array (this function should be
// automatically triggered before upgrades are executed)
type SpendingPoolDistributionProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PoolName string `protobuf:"bytes,1,opt,name=pool_name,json=poolName,proto3" json:"pool_name,omitempty"`
}

func (x *SpendingPoolDistributionProposal) Reset() {
	*x = SpendingPoolDistributionProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_spending_proposal_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpendingPoolDistributionProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpendingPoolDistributionProposal) ProtoMessage() {}

func (x *SpendingPoolDistributionProposal) ProtoReflect() protoreflect.Message {
	mi := &file_kira_spending_proposal_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpendingPoolDistributionProposal.ProtoReflect.Descriptor instead.
func (*SpendingPoolDistributionProposal) Descriptor() ([]byte, []int) {
	return file_kira_spending_proposal_proto_rawDescGZIP(), []int{1}
}

func (x *SpendingPoolDistributionProposal) GetPoolName() string {
	if x != nil {
		return x.PoolName
	}
	return ""
}

// SpendingPoolWithdrawProposal - proposal allowing withdrawal of funds
// from the pool to one or many specified accounts. Withdrawal should only
// be possible if the receiving account/s are on the list of registered
// beneficiaries.
type SpendingPoolWithdrawProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PoolName      string   `protobuf:"bytes,1,opt,name=pool_name,json=poolName,proto3" json:"pool_name,omitempty"`
	Beneficiaries []string `protobuf:"bytes,2,rep,name=beneficiaries,proto3" json:"beneficiaries,omitempty"`
	Amounts       []string `protobuf:"bytes,3,rep,name=amounts,proto3" json:"amounts,omitempty"`
}

func (x *SpendingPoolWithdrawProposal) Reset() {
	*x = SpendingPoolWithdrawProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_spending_proposal_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpendingPoolWithdrawProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpendingPoolWithdrawProposal) ProtoMessage() {}

func (x *SpendingPoolWithdrawProposal) ProtoReflect() protoreflect.Message {
	mi := &file_kira_spending_proposal_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpendingPoolWithdrawProposal.ProtoReflect.Descriptor instead.
func (*SpendingPoolWithdrawProposal) Descriptor() ([]byte, []int) {
	return file_kira_spending_proposal_proto_rawDescGZIP(), []int{2}
}

func (x *SpendingPoolWithdrawProposal) GetPoolName() string {
	if x != nil {
		return x.PoolName
	}
	return ""
}

func (x *SpendingPoolWithdrawProposal) GetBeneficiaries() []string {
	if x != nil {
		return x.Beneficiaries
	}
	return nil
}

func (x *SpendingPoolWithdrawProposal) GetAmounts() []string {
	if x != nil {
		return x.Amounts
	}
	return nil
}

var File_kira_spending_proposal_proto protoreflect.FileDescriptor

var file_kira_spending_proposal_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x6b, 0x69, 0x72, 0x61, 0x2f, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2f,
	0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d,
	0x6b, 0x69, 0x72, 0x61, 0x2e, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x1a, 0x14, 0x67,
	0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x19, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x6b, 0x69, 0x72, 0x61,
	0x2f, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2f, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc9, 0x04, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x61, 0x69, 0x6d,
	0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x6c,
	0x61, 0x69, 0x6d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x61, 0x69,
	0x6d, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x63, 0x6c, 0x61,
	0x69, 0x6d, 0x45, 0x6e, 0x64, 0x12, 0x58, 0x0a, 0x05, 0x72, 0x61, 0x74, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x09, 0x42, 0x42, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x2a, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x44, 0x65, 0x63, 0x43, 0x6f, 0x69, 0x6e, 0xf2, 0xde, 0x1f, 0x0c, 0x79, 0x61, 0x6d, 0x6c,
	0x3a, 0x22, 0x72, 0x61, 0x74, 0x65, 0x73, 0x22, 0x52, 0x05, 0x72, 0x61, 0x74, 0x65, 0x73, 0x12,
	0x4f, 0x0a, 0x0b, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x71, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x2e, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x26, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x44, 0x65, 0x63, 0x52, 0x0a, 0x76, 0x6f, 0x74, 0x65, 0x51, 0x75, 0x6f, 0x72, 0x75, 0x6d,
	0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x76, 0x6f, 0x74, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x12, 0x25, 0x0a, 0x0e, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x65, 0x6e, 0x61, 0x63, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x76, 0x6f, 0x74, 0x65, 0x45,
	0x6e, 0x61, 0x63, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x35, 0x0a, 0x06, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e,
	0x73, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x49, 0x6e, 0x66,
	0x6f, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x06, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x12,
	0x4b, 0x0a, 0x0d, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x69, 0x65, 0x73,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x73, 0x70,
	0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x65, 0x64, 0x50,
	0x65, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0d, 0x62,
	0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x69, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x52, 0x61, 0x74, 0x65, 0x12,
	0x2e, 0x0a, 0x13, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f,
	0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x52, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x3a,
	0x0f, 0xe8, 0xa0, 0x1f, 0x01, 0xca, 0xb4, 0x2d, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x22, 0x50, 0x0a, 0x20, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6f, 0x6c,
	0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x6f, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x3a, 0x0f, 0xe8, 0xa0, 0x1f, 0x01, 0xca, 0xb4, 0x2d, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x22, 0xbd, 0x01, 0x0a, 0x1c, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x50,
	0x6f, 0x6f, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x50, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x6f, 0x6c, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x69, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63,
	0x69, 0x61, 0x72, 0x69, 0x65, 0x73, 0x12, 0x49, 0x0a, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x42, 0x2f, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f,
	0x27, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x3a, 0x0f, 0xe8, 0xa0, 0x1f, 0x01, 0xca, 0xb4, 0x2d, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x42, 0x2c, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x4b, 0x69, 0x72, 0x61, 0x43, 0x6f, 0x72, 0x65, 0x2f, 0x73, 0x65, 0x6b, 0x61, 0x69, 0x2f,
	0x78, 0x2f, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kira_spending_proposal_proto_rawDescOnce sync.Once
	file_kira_spending_proposal_proto_rawDescData = file_kira_spending_proposal_proto_rawDesc
)

func file_kira_spending_proposal_proto_rawDescGZIP() []byte {
	file_kira_spending_proposal_proto_rawDescOnce.Do(func() {
		file_kira_spending_proposal_proto_rawDescData = protoimpl.X.CompressGZIP(file_kira_spending_proposal_proto_rawDescData)
	})
	return file_kira_spending_proposal_proto_rawDescData
}

var file_kira_spending_proposal_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_kira_spending_proposal_proto_goTypes = []interface{}{
	(*UpdateSpendingPoolProposal)(nil),       // 0: kira.spending.UpdateSpendingPoolProposal
	(*SpendingPoolDistributionProposal)(nil), // 1: kira.spending.SpendingPoolDistributionProposal
	(*SpendingPoolWithdrawProposal)(nil),     // 2: kira.spending.SpendingPoolWithdrawProposal
	(*PermInfo)(nil),                         // 3: kira.spending.PermInfo
	(*WeightedPermInfo)(nil),                 // 4: kira.spending.WeightedPermInfo
}
var file_kira_spending_proposal_proto_depIdxs = []int32{
	3, // 0: kira.spending.UpdateSpendingPoolProposal.owners:type_name -> kira.spending.PermInfo
	4, // 1: kira.spending.UpdateSpendingPoolProposal.beneficiaries:type_name -> kira.spending.WeightedPermInfo
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_kira_spending_proposal_proto_init() }
func file_kira_spending_proposal_proto_init() {
	if File_kira_spending_proposal_proto != nil {
		return
	}
	file_kira_spending_pool_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_kira_spending_proposal_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSpendingPoolProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_spending_proposal_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpendingPoolDistributionProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_spending_proposal_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpendingPoolWithdrawProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kira_spending_proposal_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_kira_spending_proposal_proto_goTypes,
		DependencyIndexes: file_kira_spending_proposal_proto_depIdxs,
		MessageInfos:      file_kira_spending_proposal_proto_msgTypes,
	}.Build()
	File_kira_spending_proposal_proto = out.File
	file_kira_spending_proposal_proto_rawDesc = nil
	file_kira_spending_proposal_proto_goTypes = nil
	file_kira_spending_proposal_proto_depIdxs = nil
}
