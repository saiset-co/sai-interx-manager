// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.1
// source: kira/multistaking/tx.proto

package types

import (
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/gogo/protobuf/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MsgSetCompoundInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender         string   `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	AllDenom       bool     `protobuf:"varint,2,opt,name=all_denom,json=allDenom,proto3" json:"all_denom,omitempty"`
	CompoundDenoms []string `protobuf:"bytes,3,rep,name=compound_denoms,json=compoundDenoms,proto3" json:"compound_denoms,omitempty"`
}

func (x *MsgSetCompoundInfo) Reset() {
	*x = MsgSetCompoundInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_multistaking_tx_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgSetCompoundInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgSetCompoundInfo) ProtoMessage() {}

func (x *MsgSetCompoundInfo) ProtoReflect() protoreflect.Message {
	mi := &file_kira_multistaking_tx_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgSetCompoundInfo.ProtoReflect.Descriptor instead.
func (*MsgSetCompoundInfo) Descriptor() ([]byte, []int) {
	return file_kira_multistaking_tx_proto_rawDescGZIP(), []int{0}
}

func (x *MsgSetCompoundInfo) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MsgSetCompoundInfo) GetAllDenom() bool {
	if x != nil {
		return x.AllDenom
	}
	return false
}

func (x *MsgSetCompoundInfo) GetCompoundDenoms() []string {
	if x != nil {
		return x.CompoundDenoms
	}
	return nil
}

type MsgSetCompoundInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgSetCompoundInfoResponse) Reset() {
	*x = MsgSetCompoundInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_multistaking_tx_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgSetCompoundInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgSetCompoundInfoResponse) ProtoMessage() {}

func (x *MsgSetCompoundInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_multistaking_tx_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgSetCompoundInfoResponse.ProtoReflect.Descriptor instead.
func (*MsgSetCompoundInfoResponse) Descriptor() ([]byte, []int) {
	return file_kira_multistaking_tx_proto_rawDescGZIP(), []int{1}
}

type MsgUpsertStakingPool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender    string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Validator string `protobuf:"bytes,2,opt,name=validator,proto3" json:"validator,omitempty"`
	Enabled   bool   `protobuf:"varint,3,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// percentage (e.g. 0.1 == 10%) commission that the validator charges from all
	// block reward
	Commission string `protobuf:"bytes,4,opt,name=commission,proto3" json:"commission,omitempty"`
}

func (x *MsgUpsertStakingPool) Reset() {
	*x = MsgUpsertStakingPool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_multistaking_tx_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpsertStakingPool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpsertStakingPool) ProtoMessage() {}

func (x *MsgUpsertStakingPool) ProtoReflect() protoreflect.Message {
	mi := &file_kira_multistaking_tx_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpsertStakingPool.ProtoReflect.Descriptor instead.
func (*MsgUpsertStakingPool) Descriptor() ([]byte, []int) {
	return file_kira_multistaking_tx_proto_rawDescGZIP(), []int{2}
}

func (x *MsgUpsertStakingPool) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MsgUpsertStakingPool) GetValidator() string {
	if x != nil {
		return x.Validator
	}
	return ""
}

func (x *MsgUpsertStakingPool) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *MsgUpsertStakingPool) GetCommission() string {
	if x != nil {
		return x.Commission
	}
	return ""
}

type MsgUpsertStakingPoolResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgUpsertStakingPoolResponse) Reset() {
	*x = MsgUpsertStakingPoolResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_multistaking_tx_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpsertStakingPoolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpsertStakingPoolResponse) ProtoMessage() {}

func (x *MsgUpsertStakingPoolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_multistaking_tx_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpsertStakingPoolResponse.ProtoReflect.Descriptor instead.
func (*MsgUpsertStakingPoolResponse) Descriptor() ([]byte, []int) {
	return file_kira_multistaking_tx_proto_rawDescGZIP(), []int{3}
}

type MsgDelegate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DelegatorAddress string   `protobuf:"bytes,1,opt,name=delegator_address,json=delegatorAddress,proto3" json:"delegator_address,omitempty"`
	ValidatorAddress string   `protobuf:"bytes,2,opt,name=validator_address,json=validatorAddress,proto3" json:"validator_address,omitempty"`
	Amounts          []string `protobuf:"bytes,3,rep,name=amounts,proto3" json:"amounts,omitempty"`
}

func (x *MsgDelegate) Reset() {
	*x = MsgDelegate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_multistaking_tx_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDelegate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDelegate) ProtoMessage() {}

func (x *MsgDelegate) ProtoReflect() protoreflect.Message {
	mi := &file_kira_multistaking_tx_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDelegate.ProtoReflect.Descriptor instead.
func (*MsgDelegate) Descriptor() ([]byte, []int) {
	return file_kira_multistaking_tx_proto_rawDescGZIP(), []int{4}
}

func (x *MsgDelegate) GetDelegatorAddress() string {
	if x != nil {
		return x.DelegatorAddress
	}
	return ""
}

func (x *MsgDelegate) GetValidatorAddress() string {
	if x != nil {
		return x.ValidatorAddress
	}
	return ""
}

func (x *MsgDelegate) GetAmounts() []string {
	if x != nil {
		return x.Amounts
	}
	return nil
}

type MsgDelegateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgDelegateResponse) Reset() {
	*x = MsgDelegateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_multistaking_tx_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDelegateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDelegateResponse) ProtoMessage() {}

func (x *MsgDelegateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_multistaking_tx_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDelegateResponse.ProtoReflect.Descriptor instead.
func (*MsgDelegateResponse) Descriptor() ([]byte, []int) {
	return file_kira_multistaking_tx_proto_rawDescGZIP(), []int{5}
}

type MsgUndelegate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DelegatorAddress string   `protobuf:"bytes,1,opt,name=delegator_address,json=delegatorAddress,proto3" json:"delegator_address,omitempty"`
	ValidatorAddress string   `protobuf:"bytes,2,opt,name=validator_address,json=validatorAddress,proto3" json:"validator_address,omitempty"`
	Amounts          []string `protobuf:"bytes,3,rep,name=amounts,proto3" json:"amounts,omitempty"`
}

func (x *MsgUndelegate) Reset() {
	*x = MsgUndelegate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_multistaking_tx_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUndelegate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUndelegate) ProtoMessage() {}

func (x *MsgUndelegate) ProtoReflect() protoreflect.Message {
	mi := &file_kira_multistaking_tx_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUndelegate.ProtoReflect.Descriptor instead.
func (*MsgUndelegate) Descriptor() ([]byte, []int) {
	return file_kira_multistaking_tx_proto_rawDescGZIP(), []int{6}
}

func (x *MsgUndelegate) GetDelegatorAddress() string {
	if x != nil {
		return x.DelegatorAddress
	}
	return ""
}

func (x *MsgUndelegate) GetValidatorAddress() string {
	if x != nil {
		return x.ValidatorAddress
	}
	return ""
}

func (x *MsgUndelegate) GetAmounts() []string {
	if x != nil {
		return x.Amounts
	}
	return nil
}

type MsgUndelegateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgUndelegateResponse) Reset() {
	*x = MsgUndelegateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_multistaking_tx_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUndelegateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUndelegateResponse) ProtoMessage() {}

func (x *MsgUndelegateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_multistaking_tx_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUndelegateResponse.ProtoReflect.Descriptor instead.
func (*MsgUndelegateResponse) Descriptor() ([]byte, []int) {
	return file_kira_multistaking_tx_proto_rawDescGZIP(), []int{7}
}

type MsgClaimRewards struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
}

func (x *MsgClaimRewards) Reset() {
	*x = MsgClaimRewards{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_multistaking_tx_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgClaimRewards) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgClaimRewards) ProtoMessage() {}

func (x *MsgClaimRewards) ProtoReflect() protoreflect.Message {
	mi := &file_kira_multistaking_tx_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgClaimRewards.ProtoReflect.Descriptor instead.
func (*MsgClaimRewards) Descriptor() ([]byte, []int) {
	return file_kira_multistaking_tx_proto_rawDescGZIP(), []int{8}
}

func (x *MsgClaimRewards) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

type MsgClaimRewardsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgClaimRewardsResponse) Reset() {
	*x = MsgClaimRewardsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_multistaking_tx_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgClaimRewardsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgClaimRewardsResponse) ProtoMessage() {}

func (x *MsgClaimRewardsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_multistaking_tx_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgClaimRewardsResponse.ProtoReflect.Descriptor instead.
func (*MsgClaimRewardsResponse) Descriptor() ([]byte, []int) {
	return file_kira_multistaking_tx_proto_rawDescGZIP(), []int{9}
}

type MsgClaimUndelegation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender         string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	UndelegationId uint64 `protobuf:"varint,2,opt,name=undelegation_id,json=undelegationId,proto3" json:"undelegation_id,omitempty"`
}

func (x *MsgClaimUndelegation) Reset() {
	*x = MsgClaimUndelegation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_multistaking_tx_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgClaimUndelegation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgClaimUndelegation) ProtoMessage() {}

func (x *MsgClaimUndelegation) ProtoReflect() protoreflect.Message {
	mi := &file_kira_multistaking_tx_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgClaimUndelegation.ProtoReflect.Descriptor instead.
func (*MsgClaimUndelegation) Descriptor() ([]byte, []int) {
	return file_kira_multistaking_tx_proto_rawDescGZIP(), []int{10}
}

func (x *MsgClaimUndelegation) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MsgClaimUndelegation) GetUndelegationId() uint64 {
	if x != nil {
		return x.UndelegationId
	}
	return 0
}

type MsgClaimUndelegationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgClaimUndelegationResponse) Reset() {
	*x = MsgClaimUndelegationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_multistaking_tx_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgClaimUndelegationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgClaimUndelegationResponse) ProtoMessage() {}

func (x *MsgClaimUndelegationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_multistaking_tx_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgClaimUndelegationResponse.ProtoReflect.Descriptor instead.
func (*MsgClaimUndelegationResponse) Descriptor() ([]byte, []int) {
	return file_kira_multistaking_tx_proto_rawDescGZIP(), []int{11}
}

type MsgClaimMaturedUndelegations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
}

func (x *MsgClaimMaturedUndelegations) Reset() {
	*x = MsgClaimMaturedUndelegations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_multistaking_tx_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgClaimMaturedUndelegations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgClaimMaturedUndelegations) ProtoMessage() {}

func (x *MsgClaimMaturedUndelegations) ProtoReflect() protoreflect.Message {
	mi := &file_kira_multistaking_tx_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgClaimMaturedUndelegations.ProtoReflect.Descriptor instead.
func (*MsgClaimMaturedUndelegations) Descriptor() ([]byte, []int) {
	return file_kira_multistaking_tx_proto_rawDescGZIP(), []int{12}
}

func (x *MsgClaimMaturedUndelegations) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

type MsgClaimMaturedUndelegationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgClaimMaturedUndelegationsResponse) Reset() {
	*x = MsgClaimMaturedUndelegationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_multistaking_tx_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgClaimMaturedUndelegationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgClaimMaturedUndelegationsResponse) ProtoMessage() {}

func (x *MsgClaimMaturedUndelegationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_multistaking_tx_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgClaimMaturedUndelegationsResponse.ProtoReflect.Descriptor instead.
func (*MsgClaimMaturedUndelegationsResponse) Descriptor() ([]byte, []int) {
	return file_kira_multistaking_tx_proto_rawDescGZIP(), []int{13}
}

type MsgRegisterDelegator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Delegator string `protobuf:"bytes,1,opt,name=delegator,proto3" json:"delegator,omitempty"`
}

func (x *MsgRegisterDelegator) Reset() {
	*x = MsgRegisterDelegator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_multistaking_tx_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRegisterDelegator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRegisterDelegator) ProtoMessage() {}

func (x *MsgRegisterDelegator) ProtoReflect() protoreflect.Message {
	mi := &file_kira_multistaking_tx_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRegisterDelegator.ProtoReflect.Descriptor instead.
func (*MsgRegisterDelegator) Descriptor() ([]byte, []int) {
	return file_kira_multistaking_tx_proto_rawDescGZIP(), []int{14}
}

func (x *MsgRegisterDelegator) GetDelegator() string {
	if x != nil {
		return x.Delegator
	}
	return ""
}

type MsgRegisterDelegatorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgRegisterDelegatorResponse) Reset() {
	*x = MsgRegisterDelegatorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_multistaking_tx_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRegisterDelegatorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRegisterDelegatorResponse) ProtoMessage() {}

func (x *MsgRegisterDelegatorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_multistaking_tx_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRegisterDelegatorResponse.ProtoReflect.Descriptor instead.
func (*MsgRegisterDelegatorResponse) Descriptor() ([]byte, []int) {
	return file_kira_multistaking_tx_proto_rawDescGZIP(), []int{15}
}

var File_kira_multistaking_tx_proto protoreflect.FileDescriptor

var file_kira_multistaking_tx_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x6b, 0x69, 0x72, 0x61, 0x2f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x74, 0x61, 0x6b,
	0x69, 0x6e, 0x67, 0x2f, 0x74, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x6b, 0x69,
	0x72, 0x61, 0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x1a,
	0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x19, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x6b, 0x69, 0x72,
	0x61, 0x2f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2f, 0x6d,
	0x75, 0x6c, 0x74, 0x69, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x72, 0x0a, 0x12, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x75, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12,
	0x1b, 0x0a, 0x09, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x61, 0x6c, 0x6c, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x27, 0x0a, 0x0f,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x75, 0x6e, 0x64, 0x44,
	0x65, 0x6e, 0x6f, 0x6d, 0x73, 0x22, 0x1c, 0x0a, 0x1a, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0xc0, 0x01, 0x0a, 0x14, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x73, 0x65, 0x72,
	0x74, 0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x4e, 0x0a, 0x0a,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x2e, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x63,
	0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x08, 0x88, 0xa0,
	0x1f, 0x00, 0xe8, 0xa0, 0x1f, 0x00, 0x22, 0x1e, 0x0a, 0x1c, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x73,
	0x65, 0x72, 0x74, 0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xbc, 0x01, 0x0a, 0x0b, 0x4d, 0x73, 0x67, 0x44, 0x65,
	0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61,
	0x74, 0x6f, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x49, 0x0a, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x42, 0x2f, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x6f,
	0x69, 0x6e, 0x52, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x3a, 0x08, 0x88, 0xa0, 0x1f,
	0x00, 0xe8, 0xa0, 0x1f, 0x00, 0x22, 0x15, 0x0a, 0x13, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xbe, 0x01, 0x0a,
	0x0d, 0x4d, 0x73, 0x67, 0x55, 0x6e, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x12, 0x2b,
	0x0a, 0x11, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x6c, 0x65, 0x67,
	0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x49, 0x0a, 0x07, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x42, 0x2f, 0xc8, 0xde, 0x1f, 0x00, 0xda,
	0xde, 0x1f, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x07, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x3a, 0x08, 0x88, 0xa0, 0x1f, 0x00, 0xe8, 0xa0, 0x1f, 0x00, 0x22, 0x17, 0x0a,
	0x15, 0x4d, 0x73, 0x67, 0x55, 0x6e, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x0a, 0x0f, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x61,
	0x69, 0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x3a, 0x08, 0x88, 0xa0, 0x1f, 0x00, 0xe8, 0xa0, 0x1f, 0x00, 0x22, 0x19, 0x0a, 0x17, 0x4d,
	0x73, 0x67, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x61, 0x0a, 0x14, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x61,
	0x69, 0x6d, 0x55, 0x6e, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x75, 0x6e, 0x64, 0x65, 0x6c, 0x65,
	0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0e, 0x75, 0x6e, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x3a,
	0x08, 0x88, 0xa0, 0x1f, 0x00, 0xe8, 0xa0, 0x1f, 0x00, 0x22, 0x1e, 0x0a, 0x1c, 0x4d, 0x73, 0x67,
	0x43, 0x6c, 0x61, 0x69, 0x6d, 0x55, 0x6e, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x40, 0x0a, 0x1c, 0x4d, 0x73, 0x67,
	0x43, 0x6c, 0x61, 0x69, 0x6d, 0x4d, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x55, 0x6e, 0x64, 0x65,
	0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x3a, 0x08, 0x88, 0xa0, 0x1f, 0x00, 0xe8, 0xa0, 0x1f, 0x00, 0x22, 0x26, 0x0a, 0x24, 0x4d,
	0x73, 0x67, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x4d, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x55, 0x6e,
	0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x34, 0x0a, 0x14, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x64,
	0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x1e, 0x0a, 0x1c, 0x4d, 0x73, 0x67,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xd1, 0x06, 0x0a, 0x03, 0x4d, 0x73,
	0x67, 0x12, 0x6d, 0x0a, 0x11, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x53, 0x74, 0x61, 0x6b, 0x69,
	0x6e, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x27, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6d, 0x75,
	0x6c, 0x74, 0x69, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70,
	0x73, 0x65, 0x72, 0x74, 0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x1a,
	0x2f, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x74, 0x61, 0x6b,
	0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x53, 0x74, 0x61,
	0x6b, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x52, 0x0a, 0x08, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x2e, 0x6b,
	0x69, 0x72, 0x61, 0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67,
	0x2e, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x1a, 0x26, 0x2e, 0x6b,
	0x69, 0x72, 0x61, 0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67,
	0x2e, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x0a, 0x55, 0x6e, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x12, 0x20, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x73,
	0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x6e, 0x64, 0x65, 0x6c, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x1a, 0x28, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6d, 0x75, 0x6c, 0x74,
	0x69, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x6e, 0x64, 0x65,
	0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67,
	0x0a, 0x0f, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x25, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x74,
	0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x2d, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e,
	0x6d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x73, 0x67,
	0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x0c, 0x43, 0x6c, 0x61, 0x69, 0x6d,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x22, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6d,
	0x75, 0x6c, 0x74, 0x69, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x73, 0x67, 0x43,
	0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x1a, 0x2a, 0x2e, 0x6b, 0x69,
	0x72, 0x61, 0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2e,
	0x4d, 0x73, 0x67, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d, 0x0a, 0x11, 0x43, 0x6c, 0x61, 0x69, 0x6d,
	0x55, 0x6e, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x2e, 0x6b,
	0x69, 0x72, 0x61, 0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67,
	0x2e, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x55, 0x6e, 0x64, 0x65, 0x6c, 0x65, 0x67,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x2f, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6d, 0x75, 0x6c,
	0x74, 0x69, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x61,
	0x69, 0x6d, 0x55, 0x6e, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x85, 0x01, 0x0a, 0x19, 0x43, 0x6c, 0x61, 0x69, 0x6d,
	0x4d, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x55, 0x6e, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2f, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6d, 0x75, 0x6c, 0x74,
	0x69, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x61, 0x69,
	0x6d, 0x4d, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x55, 0x6e, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x37, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6d, 0x75, 0x6c,
	0x74, 0x69, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x61,
	0x69, 0x6d, 0x4d, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x55, 0x6e, 0x64, 0x65, 0x6c, 0x65, 0x67,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d,
	0x0a, 0x11, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x27, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x69,
	0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x1a, 0x2f, 0x2e, 0x6b,
	0x69, 0x72, 0x61, 0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67,
	0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65,
	0x67, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x34, 0x5a,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4b, 0x69, 0x72, 0x61,
	0x43, 0x6f, 0x72, 0x65, 0x2f, 0x73, 0x65, 0x6b, 0x61, 0x69, 0x2f, 0x78, 0x2f, 0x6d, 0x75, 0x6c,
	0x74, 0x69, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0xa8,
	0xe2, 0x1e, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kira_multistaking_tx_proto_rawDescOnce sync.Once
	file_kira_multistaking_tx_proto_rawDescData = file_kira_multistaking_tx_proto_rawDesc
)

func file_kira_multistaking_tx_proto_rawDescGZIP() []byte {
	file_kira_multistaking_tx_proto_rawDescOnce.Do(func() {
		file_kira_multistaking_tx_proto_rawDescData = protoimpl.X.CompressGZIP(file_kira_multistaking_tx_proto_rawDescData)
	})
	return file_kira_multistaking_tx_proto_rawDescData
}

var file_kira_multistaking_tx_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_kira_multistaking_tx_proto_goTypes = []interface{}{
	(*MsgSetCompoundInfo)(nil),                   // 0: kira.multistaking.MsgSetCompoundInfo
	(*MsgSetCompoundInfoResponse)(nil),           // 1: kira.multistaking.MsgSetCompoundInfoResponse
	(*MsgUpsertStakingPool)(nil),                 // 2: kira.multistaking.MsgUpsertStakingPool
	(*MsgUpsertStakingPoolResponse)(nil),         // 3: kira.multistaking.MsgUpsertStakingPoolResponse
	(*MsgDelegate)(nil),                          // 4: kira.multistaking.MsgDelegate
	(*MsgDelegateResponse)(nil),                  // 5: kira.multistaking.MsgDelegateResponse
	(*MsgUndelegate)(nil),                        // 6: kira.multistaking.MsgUndelegate
	(*MsgUndelegateResponse)(nil),                // 7: kira.multistaking.MsgUndelegateResponse
	(*MsgClaimRewards)(nil),                      // 8: kira.multistaking.MsgClaimRewards
	(*MsgClaimRewardsResponse)(nil),              // 9: kira.multistaking.MsgClaimRewardsResponse
	(*MsgClaimUndelegation)(nil),                 // 10: kira.multistaking.MsgClaimUndelegation
	(*MsgClaimUndelegationResponse)(nil),         // 11: kira.multistaking.MsgClaimUndelegationResponse
	(*MsgClaimMaturedUndelegations)(nil),         // 12: kira.multistaking.MsgClaimMaturedUndelegations
	(*MsgClaimMaturedUndelegationsResponse)(nil), // 13: kira.multistaking.MsgClaimMaturedUndelegationsResponse
	(*MsgRegisterDelegator)(nil),                 // 14: kira.multistaking.MsgRegisterDelegator
	(*MsgRegisterDelegatorResponse)(nil),         // 15: kira.multistaking.MsgRegisterDelegatorResponse
}
var file_kira_multistaking_tx_proto_depIdxs = []int32{
	2,  // 0: kira.multistaking.Msg.UpsertStakingPool:input_type -> kira.multistaking.MsgUpsertStakingPool
	4,  // 1: kira.multistaking.Msg.Delegate:input_type -> kira.multistaking.MsgDelegate
	6,  // 2: kira.multistaking.Msg.Undelegate:input_type -> kira.multistaking.MsgUndelegate
	0,  // 3: kira.multistaking.Msg.SetCompoundInfo:input_type -> kira.multistaking.MsgSetCompoundInfo
	8,  // 4: kira.multistaking.Msg.ClaimRewards:input_type -> kira.multistaking.MsgClaimRewards
	10, // 5: kira.multistaking.Msg.ClaimUndelegation:input_type -> kira.multistaking.MsgClaimUndelegation
	12, // 6: kira.multistaking.Msg.ClaimMaturedUndelegations:input_type -> kira.multistaking.MsgClaimMaturedUndelegations
	14, // 7: kira.multistaking.Msg.RegisterDelegator:input_type -> kira.multistaking.MsgRegisterDelegator
	3,  // 8: kira.multistaking.Msg.UpsertStakingPool:output_type -> kira.multistaking.MsgUpsertStakingPoolResponse
	5,  // 9: kira.multistaking.Msg.Delegate:output_type -> kira.multistaking.MsgDelegateResponse
	7,  // 10: kira.multistaking.Msg.Undelegate:output_type -> kira.multistaking.MsgUndelegateResponse
	1,  // 11: kira.multistaking.Msg.SetCompoundInfo:output_type -> kira.multistaking.MsgSetCompoundInfoResponse
	9,  // 12: kira.multistaking.Msg.ClaimRewards:output_type -> kira.multistaking.MsgClaimRewardsResponse
	11, // 13: kira.multistaking.Msg.ClaimUndelegation:output_type -> kira.multistaking.MsgClaimUndelegationResponse
	13, // 14: kira.multistaking.Msg.ClaimMaturedUndelegations:output_type -> kira.multistaking.MsgClaimMaturedUndelegationsResponse
	15, // 15: kira.multistaking.Msg.RegisterDelegator:output_type -> kira.multistaking.MsgRegisterDelegatorResponse
	8,  // [8:16] is the sub-list for method output_type
	0,  // [0:8] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_kira_multistaking_tx_proto_init() }
func file_kira_multistaking_tx_proto_init() {
	if File_kira_multistaking_tx_proto != nil {
		return
	}
	file_kira_multistaking_multistaking_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_kira_multistaking_tx_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgSetCompoundInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_multistaking_tx_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgSetCompoundInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_multistaking_tx_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpsertStakingPool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_multistaking_tx_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpsertStakingPoolResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_multistaking_tx_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDelegate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_multistaking_tx_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDelegateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_multistaking_tx_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUndelegate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_multistaking_tx_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUndelegateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_multistaking_tx_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgClaimRewards); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_multistaking_tx_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgClaimRewardsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_multistaking_tx_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgClaimUndelegation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_multistaking_tx_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgClaimUndelegationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_multistaking_tx_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgClaimMaturedUndelegations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_multistaking_tx_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgClaimMaturedUndelegationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_multistaking_tx_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRegisterDelegator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_multistaking_tx_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRegisterDelegatorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kira_multistaking_tx_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kira_multistaking_tx_proto_goTypes,
		DependencyIndexes: file_kira_multistaking_tx_proto_depIdxs,
		MessageInfos:      file_kira_multistaking_tx_proto_msgTypes,
	}.Build()
	File_kira_multistaking_tx_proto = out.File
	file_kira_multistaking_tx_proto_rawDesc = nil
	file_kira_multistaking_tx_proto_goTypes = nil
	file_kira_multistaking_tx_proto_depIdxs = nil
}
