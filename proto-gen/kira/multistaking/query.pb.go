// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.1
// source: kira/multistaking/query.proto

package types

import (
	_ "github.com/cosmos/cosmos-sdk/types/query"
	_ "github.com/gogo/protobuf/gogoproto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QueryStakingPoolsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QueryStakingPoolsRequest) Reset() {
	*x = QueryStakingPoolsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_multistaking_query_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryStakingPoolsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryStakingPoolsRequest) ProtoMessage() {}

func (x *QueryStakingPoolsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kira_multistaking_query_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryStakingPoolsRequest.ProtoReflect.Descriptor instead.
func (*QueryStakingPoolsRequest) Descriptor() ([]byte, []int) {
	return file_kira_multistaking_query_proto_rawDescGZIP(), []int{0}
}

type QueryStakingPoolsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pools []*StakingPool `protobuf:"bytes,1,rep,name=pools,proto3" json:"pools,omitempty"`
}

func (x *QueryStakingPoolsResponse) Reset() {
	*x = QueryStakingPoolsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_multistaking_query_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryStakingPoolsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryStakingPoolsResponse) ProtoMessage() {}

func (x *QueryStakingPoolsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_multistaking_query_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryStakingPoolsResponse.ProtoReflect.Descriptor instead.
func (*QueryStakingPoolsResponse) Descriptor() ([]byte, []int) {
	return file_kira_multistaking_query_proto_rawDescGZIP(), []int{1}
}

func (x *QueryStakingPoolsResponse) GetPools() []*StakingPool {
	if x != nil {
		return x.Pools
	}
	return nil
}

type QueryOutstandingRewardsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Delegator string `protobuf:"bytes,1,opt,name=delegator,proto3" json:"delegator,omitempty"`
}

func (x *QueryOutstandingRewardsRequest) Reset() {
	*x = QueryOutstandingRewardsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_multistaking_query_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOutstandingRewardsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOutstandingRewardsRequest) ProtoMessage() {}

func (x *QueryOutstandingRewardsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kira_multistaking_query_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOutstandingRewardsRequest.ProtoReflect.Descriptor instead.
func (*QueryOutstandingRewardsRequest) Descriptor() ([]byte, []int) {
	return file_kira_multistaking_query_proto_rawDescGZIP(), []int{2}
}

func (x *QueryOutstandingRewardsRequest) GetDelegator() string {
	if x != nil {
		return x.Delegator
	}
	return ""
}

type QueryOutstandingRewardsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rewards []string `protobuf:"bytes,1,rep,name=rewards,proto3" json:"rewards,omitempty"`
}

func (x *QueryOutstandingRewardsResponse) Reset() {
	*x = QueryOutstandingRewardsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_multistaking_query_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOutstandingRewardsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOutstandingRewardsResponse) ProtoMessage() {}

func (x *QueryOutstandingRewardsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_multistaking_query_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOutstandingRewardsResponse.ProtoReflect.Descriptor instead.
func (*QueryOutstandingRewardsResponse) Descriptor() ([]byte, []int) {
	return file_kira_multistaking_query_proto_rawDescGZIP(), []int{3}
}

func (x *QueryOutstandingRewardsResponse) GetRewards() []string {
	if x != nil {
		return x.Rewards
	}
	return nil
}

type QueryUndelegationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Delegator  string `protobuf:"bytes,1,opt,name=delegator,proto3" json:"delegator,omitempty"`
	ValAddress string `protobuf:"bytes,2,opt,name=val_address,json=valAddress,proto3" json:"val_address,omitempty"`
}

func (x *QueryUndelegationsRequest) Reset() {
	*x = QueryUndelegationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_multistaking_query_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryUndelegationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryUndelegationsRequest) ProtoMessage() {}

func (x *QueryUndelegationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kira_multistaking_query_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryUndelegationsRequest.ProtoReflect.Descriptor instead.
func (*QueryUndelegationsRequest) Descriptor() ([]byte, []int) {
	return file_kira_multistaking_query_proto_rawDescGZIP(), []int{4}
}

func (x *QueryUndelegationsRequest) GetDelegator() string {
	if x != nil {
		return x.Delegator
	}
	return ""
}

func (x *QueryUndelegationsRequest) GetValAddress() string {
	if x != nil {
		return x.ValAddress
	}
	return ""
}

type QueryUndelegationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Undelegations []*Undelegation `protobuf:"bytes,1,rep,name=undelegations,proto3" json:"undelegations,omitempty"`
}

func (x *QueryUndelegationsResponse) Reset() {
	*x = QueryUndelegationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_multistaking_query_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryUndelegationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryUndelegationsResponse) ProtoMessage() {}

func (x *QueryUndelegationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_multistaking_query_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryUndelegationsResponse.ProtoReflect.Descriptor instead.
func (*QueryUndelegationsResponse) Descriptor() ([]byte, []int) {
	return file_kira_multistaking_query_proto_rawDescGZIP(), []int{5}
}

func (x *QueryUndelegationsResponse) GetUndelegations() []*Undelegation {
	if x != nil {
		return x.Undelegations
	}
	return nil
}

type QueryCompoundInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Delegator string `protobuf:"bytes,1,opt,name=delegator,proto3" json:"delegator,omitempty"`
}

func (x *QueryCompoundInfoRequest) Reset() {
	*x = QueryCompoundInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_multistaking_query_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCompoundInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCompoundInfoRequest) ProtoMessage() {}

func (x *QueryCompoundInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kira_multistaking_query_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCompoundInfoRequest.ProtoReflect.Descriptor instead.
func (*QueryCompoundInfoRequest) Descriptor() ([]byte, []int) {
	return file_kira_multistaking_query_proto_rawDescGZIP(), []int{6}
}

func (x *QueryCompoundInfoRequest) GetDelegator() string {
	if x != nil {
		return x.Delegator
	}
	return ""
}

type QueryCompoundInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *CompoundInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *QueryCompoundInfoResponse) Reset() {
	*x = QueryCompoundInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_multistaking_query_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCompoundInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCompoundInfoResponse) ProtoMessage() {}

func (x *QueryCompoundInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_multistaking_query_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCompoundInfoResponse.ProtoReflect.Descriptor instead.
func (*QueryCompoundInfoResponse) Descriptor() ([]byte, []int) {
	return file_kira_multistaking_query_proto_rawDescGZIP(), []int{7}
}

func (x *QueryCompoundInfoResponse) GetInfo() *CompoundInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type QueryStakingPoolDelegatorsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Validator string `protobuf:"bytes,1,opt,name=validator,proto3" json:"validator,omitempty"`
}

func (x *QueryStakingPoolDelegatorsRequest) Reset() {
	*x = QueryStakingPoolDelegatorsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_multistaking_query_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryStakingPoolDelegatorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryStakingPoolDelegatorsRequest) ProtoMessage() {}

func (x *QueryStakingPoolDelegatorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kira_multistaking_query_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryStakingPoolDelegatorsRequest.ProtoReflect.Descriptor instead.
func (*QueryStakingPoolDelegatorsRequest) Descriptor() ([]byte, []int) {
	return file_kira_multistaking_query_proto_rawDescGZIP(), []int{8}
}

func (x *QueryStakingPoolDelegatorsRequest) GetValidator() string {
	if x != nil {
		return x.Validator
	}
	return ""
}

type QueryStakingPoolDelegatorsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pool       *StakingPool `protobuf:"bytes,1,opt,name=pool,proto3" json:"pool,omitempty"`
	Delegators []string     `protobuf:"bytes,2,rep,name=delegators,proto3" json:"delegators,omitempty"`
}

func (x *QueryStakingPoolDelegatorsResponse) Reset() {
	*x = QueryStakingPoolDelegatorsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_multistaking_query_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryStakingPoolDelegatorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryStakingPoolDelegatorsResponse) ProtoMessage() {}

func (x *QueryStakingPoolDelegatorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_multistaking_query_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryStakingPoolDelegatorsResponse.ProtoReflect.Descriptor instead.
func (*QueryStakingPoolDelegatorsResponse) Descriptor() ([]byte, []int) {
	return file_kira_multistaking_query_proto_rawDescGZIP(), []int{9}
}

func (x *QueryStakingPoolDelegatorsResponse) GetPool() *StakingPool {
	if x != nil {
		return x.Pool
	}
	return nil
}

func (x *QueryStakingPoolDelegatorsResponse) GetDelegators() []string {
	if x != nil {
		return x.Delegators
	}
	return nil
}

var File_kira_multistaking_query_proto protoreflect.FileDescriptor

var file_kira_multistaking_query_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x6b, 0x69, 0x72, 0x61, 0x2f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x74, 0x61, 0x6b,
	0x69, 0x6e, 0x67, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x11, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x74, 0x61, 0x6b, 0x69,
	0x6e, 0x67, 0x1a, 0x2a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2f,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14,
	0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x6b,
	0x69, 0x72, 0x61, 0x2f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67,
	0x2f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x1a, 0x0a, 0x18, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x6b,
	0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x57, 0x0a, 0x19, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x50,
	0x6f, 0x6f, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x05,
	0x70, 0x6f, 0x6f, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6b, 0x69,
	0x72, 0x61, 0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2e,
	0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x42, 0x04, 0xc8, 0xde, 0x1f,
	0x00, 0x52, 0x05, 0x70, 0x6f, 0x6f, 0x6c, 0x73, 0x22, 0x3e, 0x0a, 0x1e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4f, 0x75, 0x74, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65,
	0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64,
	0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x6c, 0x0a, 0x1f, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4f, 0x75, 0x74, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x07, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x2f, 0xc8, 0xde,
	0x1f, 0x00, 0xda, 0xde, 0x1f, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73,
	0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x07, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x22, 0x5a, 0x0a, 0x19, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55,
	0x6e, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x22, 0x69, 0x0a, 0x1a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x6e, 0x64, 0x65, 0x6c,
	0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4b, 0x0a, 0x0d, 0x75, 0x6e, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6d,
	0x75, 0x6c, 0x74, 0x69, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x55, 0x6e, 0x64, 0x65,
	0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0d,
	0x75, 0x6e, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x38, 0x0a,
	0x18, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c,
	0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65,
	0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x56, 0x0a, 0x19, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x73,
	0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x75, 0x6e, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22,
	0x41, 0x0a, 0x21, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x50,
	0x6f, 0x6f, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x6f, 0x72, 0x22, 0x7e, 0x0a, 0x22, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x6b, 0x69,
	0x6e, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x04, 0x70, 0x6f, 0x6f, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6d, 0x75,
	0x6c, 0x74, 0x69, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x74, 0x61, 0x6b, 0x69,
	0x6e, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x04, 0x70, 0x6f,
	0x6f, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f,
	0x72, 0x73, 0x32, 0xf5, 0x06, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x9b, 0x01, 0x0a,
	0x0c, 0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x12, 0x2b, 0x2e,
	0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e,
	0x67, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x50, 0x6f,
	0x6f, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6b, 0x69, 0x72,
	0x61, 0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a,
	0x12, 0x28, 0x2f, 0x6b, 0x69, 0x72, 0x61, 0x2f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x74, 0x61,
	0x6b, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x73, 0x74, 0x61,
	0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x73, 0x12, 0xb3, 0x01, 0x0a, 0x12, 0x4f,
	0x75, 0x74, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x12, 0x31, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x74,
	0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x75, 0x74, 0x73, 0x74,
	0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6d, 0x75, 0x6c, 0x74,
	0x69, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x75,
	0x74, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x36, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x30,
	0x12, 0x2e, 0x2f, 0x6b, 0x69, 0x72, 0x61, 0x2f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x74, 0x61,
	0x6b, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x6f, 0x75, 0x74,
	0x73, 0x74, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x12, 0x9e, 0x01, 0x0a, 0x0d, 0x55, 0x6e, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x2c, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x73,
	0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x6e, 0x64, 0x65,
	0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2d, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x74, 0x61,
	0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x6e, 0x64, 0x65, 0x6c, 0x65,
	0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x12, 0x28, 0x2f, 0x6b, 0x69, 0x72, 0x61, 0x2f, 0x6d,
	0x75, 0x6c, 0x74, 0x69, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2f, 0x75, 0x6e, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0xa7, 0x01, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x2b, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x73,
	0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2c, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x74, 0x61, 0x6b,
	0x69, 0x6e, 0x67, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x75, 0x6e,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3c, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x36, 0x12, 0x34, 0x2f, 0x6b, 0x69, 0x72, 0x61, 0x2f, 0x6d, 0x75, 0x6c,
	0x74, 0x69, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2f,
	0x7b, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x7d, 0x12, 0xcc, 0x01, 0x0a, 0x15,
	0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x67,
	0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x34, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x6d, 0x75, 0x6c,
	0x74, 0x69, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53,
	0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61,
	0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x6b, 0x69,
	0x72, 0x61, 0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6f, 0x6c,
	0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x46, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x40, 0x12, 0x3e, 0x2f, 0x6b, 0x69, 0x72,
	0x61, 0x2f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2f, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x70,
	0x6f, 0x6f, 0x6c, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x7b,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x7d, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4b, 0x69, 0x72, 0x61, 0x43, 0x6f, 0x72,
	0x65, 0x2f, 0x73, 0x65, 0x6b, 0x61, 0x69, 0x2f, 0x78, 0x2f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x73,
	0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kira_multistaking_query_proto_rawDescOnce sync.Once
	file_kira_multistaking_query_proto_rawDescData = file_kira_multistaking_query_proto_rawDesc
)

func file_kira_multistaking_query_proto_rawDescGZIP() []byte {
	file_kira_multistaking_query_proto_rawDescOnce.Do(func() {
		file_kira_multistaking_query_proto_rawDescData = protoimpl.X.CompressGZIP(file_kira_multistaking_query_proto_rawDescData)
	})
	return file_kira_multistaking_query_proto_rawDescData
}

var file_kira_multistaking_query_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_kira_multistaking_query_proto_goTypes = []interface{}{
	(*QueryStakingPoolsRequest)(nil),           // 0: kira.multistaking.QueryStakingPoolsRequest
	(*QueryStakingPoolsResponse)(nil),          // 1: kira.multistaking.QueryStakingPoolsResponse
	(*QueryOutstandingRewardsRequest)(nil),     // 2: kira.multistaking.QueryOutstandingRewardsRequest
	(*QueryOutstandingRewardsResponse)(nil),    // 3: kira.multistaking.QueryOutstandingRewardsResponse
	(*QueryUndelegationsRequest)(nil),          // 4: kira.multistaking.QueryUndelegationsRequest
	(*QueryUndelegationsResponse)(nil),         // 5: kira.multistaking.QueryUndelegationsResponse
	(*QueryCompoundInfoRequest)(nil),           // 6: kira.multistaking.QueryCompoundInfoRequest
	(*QueryCompoundInfoResponse)(nil),          // 7: kira.multistaking.QueryCompoundInfoResponse
	(*QueryStakingPoolDelegatorsRequest)(nil),  // 8: kira.multistaking.QueryStakingPoolDelegatorsRequest
	(*QueryStakingPoolDelegatorsResponse)(nil), // 9: kira.multistaking.QueryStakingPoolDelegatorsResponse
	(*StakingPool)(nil),                        // 10: kira.multistaking.StakingPool
	(*Undelegation)(nil),                       // 11: kira.multistaking.Undelegation
	(*CompoundInfo)(nil),                       // 12: kira.multistaking.CompoundInfo
}
var file_kira_multistaking_query_proto_depIdxs = []int32{
	10, // 0: kira.multistaking.QueryStakingPoolsResponse.pools:type_name -> kira.multistaking.StakingPool
	11, // 1: kira.multistaking.QueryUndelegationsResponse.undelegations:type_name -> kira.multistaking.Undelegation
	12, // 2: kira.multistaking.QueryCompoundInfoResponse.info:type_name -> kira.multistaking.CompoundInfo
	10, // 3: kira.multistaking.QueryStakingPoolDelegatorsResponse.pool:type_name -> kira.multistaking.StakingPool
	0,  // 4: kira.multistaking.Query.StakingPools:input_type -> kira.multistaking.QueryStakingPoolsRequest
	2,  // 5: kira.multistaking.Query.OutstandingRewards:input_type -> kira.multistaking.QueryOutstandingRewardsRequest
	4,  // 6: kira.multistaking.Query.Undelegations:input_type -> kira.multistaking.QueryUndelegationsRequest
	6,  // 7: kira.multistaking.Query.CompoundInfo:input_type -> kira.multistaking.QueryCompoundInfoRequest
	8,  // 8: kira.multistaking.Query.StakingPoolDelegators:input_type -> kira.multistaking.QueryStakingPoolDelegatorsRequest
	1,  // 9: kira.multistaking.Query.StakingPools:output_type -> kira.multistaking.QueryStakingPoolsResponse
	3,  // 10: kira.multistaking.Query.OutstandingRewards:output_type -> kira.multistaking.QueryOutstandingRewardsResponse
	5,  // 11: kira.multistaking.Query.Undelegations:output_type -> kira.multistaking.QueryUndelegationsResponse
	7,  // 12: kira.multistaking.Query.CompoundInfo:output_type -> kira.multistaking.QueryCompoundInfoResponse
	9,  // 13: kira.multistaking.Query.StakingPoolDelegators:output_type -> kira.multistaking.QueryStakingPoolDelegatorsResponse
	9,  // [9:14] is the sub-list for method output_type
	4,  // [4:9] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_kira_multistaking_query_proto_init() }
func file_kira_multistaking_query_proto_init() {
	if File_kira_multistaking_query_proto != nil {
		return
	}
	file_kira_multistaking_multistaking_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_kira_multistaking_query_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryStakingPoolsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_multistaking_query_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryStakingPoolsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_multistaking_query_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOutstandingRewardsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_multistaking_query_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOutstandingRewardsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_multistaking_query_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryUndelegationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_multistaking_query_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryUndelegationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_multistaking_query_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCompoundInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_multistaking_query_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCompoundInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_multistaking_query_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryStakingPoolDelegatorsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_multistaking_query_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryStakingPoolDelegatorsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kira_multistaking_query_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kira_multistaking_query_proto_goTypes,
		DependencyIndexes: file_kira_multistaking_query_proto_depIdxs,
		MessageInfos:      file_kira_multistaking_query_proto_msgTypes,
	}.Build()
	File_kira_multistaking_query_proto = out.File
	file_kira_multistaking_query_proto_rawDesc = nil
	file_kira_multistaking_query_proto_goTypes = nil
	file_kira_multistaking_query_proto_depIdxs = nil
}
