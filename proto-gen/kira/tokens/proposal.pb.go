// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.1
// source: kira/tokens/proposal.proto

package types

import (
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/gogo/protobuf/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProposalUpsertTokenInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Denom             string `protobuf:"bytes,1,opt,name=denom,proto3" json:"denom,omitempty"`                              // denomination target
	TokenType         string `protobuf:"bytes,2,opt,name=token_type,json=tokenType,proto3" json:"token_type,omitempty"`     // Token Type / Compatibility (can NOT be changed or owner defined)
	FeeRate           string `protobuf:"bytes,3,opt,name=fee_rate,json=feeRate,proto3" json:"fee_rate,omitempty"`           // Exchange rate in terms of KEX token
	FeeEnabled        bool   `protobuf:"varint,4,opt,name=fee_enabled,json=feeEnabled,proto3" json:"fee_enabled,omitempty"` // Properties defining if it is enabled or disabled as fee payment method
	Supply            string `protobuf:"bytes,5,opt,name=supply,proto3" json:"supply,omitempty"`                            // current circulating supply can NOT be more then CAP
	SupplyCap         string `protobuf:"bytes,6,opt,name=supply_cap,json=supplyCap,proto3" json:"supply_cap,omitempty"`     // maximum supply that can be issued, max 2^256 - 1, (can NOT be INCREASED or decreased below current circulatin supply)
	StakeCap          string `protobuf:"bytes,7,opt,name=stake_cap,json=stakeCap,proto3" json:"stake_cap,omitempty"`        // rewards cap, sum should be lower than 100%
	StakeMin          string `protobuf:"bytes,8,opt,name=stake_min,json=stakeMin,proto3" json:"stake_min,omitempty"`
	StakeEnabled      bool   `protobuf:"varint,9,opt,name=stake_enabled,json=stakeEnabled,proto3" json:"stake_enabled,omitempty"`
	Inactive          bool   `protobuf:"varint,10,opt,name=inactive,proto3" json:"inactive,omitempty"`      // flag that the token is inactive or not
	Symbol            string `protobuf:"bytes,11,opt,name=symbol,proto3" json:"symbol,omitempty"`           // Ticker (eg. ATOM, KEX, BTC)
	Name              string `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`               // Token Name (e.g. Cosmos, Kira, Bitcoin)
	Icon              string `protobuf:"bytes,13,opt,name=icon,proto3" json:"icon,omitempty"`               // Graphical Symbol (url link to graphics)
	Decimals          uint32 `protobuf:"varint,14,opt,name=decimals,proto3" json:"decimals,omitempty"`      // Integer number of max decimals, min 0, max 255, (can NOT be changed)
	Description       string `protobuf:"bytes,15,opt,name=description,proto3" json:"description,omitempty"` // 512 chars max, (can be changed by owner or proposal-upsert-alias)
	Website           string `protobuf:"bytes,16,opt,name=website,proto3" json:"website,omitempty"`         // url 256 chars max, (can be changed by owner or proposal-upsert-alias)
	Social            string `protobuf:"bytes,17,opt,name=social,proto3" json:"social,omitempty"`           // url 256 chars max, (can be changed by owner or proposal-upsert-alias)
	Holders           uint64 `protobuf:"varint,18,opt,name=holders,proto3" json:"holders,omitempty"`
	MintingFee        string `protobuf:"bytes,19,opt,name=minting_fee,json=mintingFee,proto3" json:"minting_fee,omitempty"`                         // cost of minting 10^decimals per X ukex, can only increase (can be changed by owner only)
	Owner             string `protobuf:"bytes,20,opt,name=owner,proto3" json:"owner,omitempty"`                                                     // owner address or "" if noone should be able to modify most important properties
	OwnerEditDisabled bool   `protobuf:"varint,21,opt,name=owner_edit_disabled,json=ownerEditDisabled,proto3" json:"owner_edit_disabled,omitempty"` // owner is disabled to edit token info
	NftMetadata       string `protobuf:"bytes,22,opt,name=nft_metadata,json=nftMetadata,proto3" json:"nft_metadata,omitempty"`                      // metadata url or CID
	NftHash           string `protobuf:"bytes,23,opt,name=nft_hash,json=nftHash,proto3" json:"nft_hash,omitempty"`                                  // hexadecimal metadata checksum
}

func (x *ProposalUpsertTokenInfo) Reset() {
	*x = ProposalUpsertTokenInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_tokens_proposal_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProposalUpsertTokenInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposalUpsertTokenInfo) ProtoMessage() {}

func (x *ProposalUpsertTokenInfo) ProtoReflect() protoreflect.Message {
	mi := &file_kira_tokens_proposal_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposalUpsertTokenInfo.ProtoReflect.Descriptor instead.
func (*ProposalUpsertTokenInfo) Descriptor() ([]byte, []int) {
	return file_kira_tokens_proposal_proto_rawDescGZIP(), []int{0}
}

func (x *ProposalUpsertTokenInfo) GetDenom() string {
	if x != nil {
		return x.Denom
	}
	return ""
}

func (x *ProposalUpsertTokenInfo) GetTokenType() string {
	if x != nil {
		return x.TokenType
	}
	return ""
}

func (x *ProposalUpsertTokenInfo) GetFeeRate() string {
	if x != nil {
		return x.FeeRate
	}
	return ""
}

func (x *ProposalUpsertTokenInfo) GetFeeEnabled() bool {
	if x != nil {
		return x.FeeEnabled
	}
	return false
}

func (x *ProposalUpsertTokenInfo) GetSupply() string {
	if x != nil {
		return x.Supply
	}
	return ""
}

func (x *ProposalUpsertTokenInfo) GetSupplyCap() string {
	if x != nil {
		return x.SupplyCap
	}
	return ""
}

func (x *ProposalUpsertTokenInfo) GetStakeCap() string {
	if x != nil {
		return x.StakeCap
	}
	return ""
}

func (x *ProposalUpsertTokenInfo) GetStakeMin() string {
	if x != nil {
		return x.StakeMin
	}
	return ""
}

func (x *ProposalUpsertTokenInfo) GetStakeEnabled() bool {
	if x != nil {
		return x.StakeEnabled
	}
	return false
}

func (x *ProposalUpsertTokenInfo) GetInactive() bool {
	if x != nil {
		return x.Inactive
	}
	return false
}

func (x *ProposalUpsertTokenInfo) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *ProposalUpsertTokenInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProposalUpsertTokenInfo) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *ProposalUpsertTokenInfo) GetDecimals() uint32 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

func (x *ProposalUpsertTokenInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ProposalUpsertTokenInfo) GetWebsite() string {
	if x != nil {
		return x.Website
	}
	return ""
}

func (x *ProposalUpsertTokenInfo) GetSocial() string {
	if x != nil {
		return x.Social
	}
	return ""
}

func (x *ProposalUpsertTokenInfo) GetHolders() uint64 {
	if x != nil {
		return x.Holders
	}
	return 0
}

func (x *ProposalUpsertTokenInfo) GetMintingFee() string {
	if x != nil {
		return x.MintingFee
	}
	return ""
}

func (x *ProposalUpsertTokenInfo) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *ProposalUpsertTokenInfo) GetOwnerEditDisabled() bool {
	if x != nil {
		return x.OwnerEditDisabled
	}
	return false
}

func (x *ProposalUpsertTokenInfo) GetNftMetadata() string {
	if x != nil {
		return x.NftMetadata
	}
	return ""
}

func (x *ProposalUpsertTokenInfo) GetNftHash() string {
	if x != nil {
		return x.NftHash
	}
	return ""
}

var File_kira_tokens_proposal_proto protoreflect.FileDescriptor

var file_kira_tokens_proposal_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x6b, 0x69, 0x72, 0x61, 0x2f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x2f, 0x70, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x6b, 0x69,
	0x72, 0x61, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x19, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x84, 0x08, 0x0a, 0x17, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x1d, 0x0a, 0x0a,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x49, 0x0a, 0x08, 0x66,
	0x65, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2e, 0xc8,
	0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d,
	0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x63, 0x52, 0x07, 0x66,
	0x65, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x65, 0x65, 0x5f, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x66, 0x65, 0x65,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x46, 0x0a, 0x06, 0x73, 0x75, 0x70, 0x70, 0x6c,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2e, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f,
	0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x52, 0x06, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x12,
	0x4d, 0x0a, 0x0a, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x63, 0x61, 0x70, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x2e, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x26, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x49, 0x6e, 0x74, 0x52, 0x09, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x43, 0x61, 0x70, 0x12, 0x5f,
	0x0a, 0x09, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x63, 0x61, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x42, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x44, 0x65,
	0x63, 0xf2, 0xde, 0x1f, 0x10, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x73, 0x74, 0x61, 0x6b, 0x65,
	0x5f, 0x63, 0x61, 0x70, 0x22, 0x52, 0x08, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x43, 0x61, 0x70, 0x12,
	0x5f, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x42, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x26, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49,
	0x6e, 0x74, 0xf2, 0xde, 0x1f, 0x10, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x73, 0x74, 0x61, 0x6b,
	0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x22, 0x52, 0x08, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x4d, 0x69, 0x6e,
	0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x18, 0x0a, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x63,
	0x69, 0x61, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x63, 0x69, 0x61,
	0x6c, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x12, 0x4f, 0x0a, 0x0b, 0x6d,
	0x69, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x2e, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74,
	0x52, 0x0a, 0x6d, 0x69, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x46, 0x65, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x12, 0x2e, 0x0a, 0x13, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x65, 0x64, 0x69, 0x74,
	0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x11, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x45, 0x64, 0x69, 0x74, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x66, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x66, 0x74, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x66, 0x74, 0x5f, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x66, 0x74, 0x48, 0x61, 0x73, 0x68,
	0x3a, 0x0f, 0xe8, 0xa0, 0x1f, 0x01, 0xca, 0xb4, 0x2d, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x42, 0x2a, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x4b, 0x69, 0x72, 0x61, 0x43, 0x6f, 0x72, 0x65, 0x2f, 0x73, 0x65, 0x6b, 0x61, 0x69, 0x2f, 0x78,
	0x2f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kira_tokens_proposal_proto_rawDescOnce sync.Once
	file_kira_tokens_proposal_proto_rawDescData = file_kira_tokens_proposal_proto_rawDesc
)

func file_kira_tokens_proposal_proto_rawDescGZIP() []byte {
	file_kira_tokens_proposal_proto_rawDescOnce.Do(func() {
		file_kira_tokens_proposal_proto_rawDescData = protoimpl.X.CompressGZIP(file_kira_tokens_proposal_proto_rawDescData)
	})
	return file_kira_tokens_proposal_proto_rawDescData
}

var file_kira_tokens_proposal_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_kira_tokens_proposal_proto_goTypes = []interface{}{
	(*ProposalUpsertTokenInfo)(nil), // 0: kira.tokens.ProposalUpsertTokenInfo
}
var file_kira_tokens_proposal_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_kira_tokens_proposal_proto_init() }
func file_kira_tokens_proposal_proto_init() {
	if File_kira_tokens_proposal_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kira_tokens_proposal_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProposalUpsertTokenInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kira_tokens_proposal_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_kira_tokens_proposal_proto_goTypes,
		DependencyIndexes: file_kira_tokens_proposal_proto_depIdxs,
		MessageInfos:      file_kira_tokens_proposal_proto_msgTypes,
	}.Build()
	File_kira_tokens_proposal_proto = out.File
	file_kira_tokens_proposal_proto_rawDesc = nil
	file_kira_tokens_proposal_proto_goTypes = nil
	file_kira_tokens_proposal_proto_depIdxs = nil
}
